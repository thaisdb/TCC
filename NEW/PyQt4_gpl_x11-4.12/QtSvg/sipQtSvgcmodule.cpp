/*
 * Module code.
 *
 * Generated by SIP 4.19.2
 *
 * Copyright (c) 2016 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt4.
 * 
 * This file may be used under the terms of the GNU General Public License
 * version 3.0 as published by the Free Software Foundation and appearing in
 * the file LICENSE included in the packaging of this file.  Please review the
 * following information to ensure the GNU General Public License version 3.0
 * requirements will be met: http://www.gnu.org/copyleft/gpl.html.
 * 
 * If you do not wish to use this file under the terms of the GPL version 3.0
 * then you may purchase a commercial license.  For more information contact
 * info@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtSvg.h"

#line 28 "sip/QtGui/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 29 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgcmodule.cpp"
#line 29 "sip/QtCore/qobject.sip"
#include <qobject.h>
#line 32 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgcmodule.cpp"
#line 159 "sip/QtCore/qrect.sip"
#include <qrect.h>
#line 35 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgcmodule.cpp"
#line 26 "sip/QtGui/qpainterpath.sip"
#include <qpainterpath.h>
#line 38 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgcmodule.cpp"
#line 110 "sip/QtCore/qpoint.sip"
#include <qpoint.h>
#line 41 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgcmodule.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 44 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgcmodule.cpp"
#line 26 "sip/QtGui/qpainter.sip"
#include <qpainter.h>
#line 47 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgcmodule.cpp"
#line 1966 "sip/QtGui/qstyleoption.sip"
#include <qstyleoption.h>
#line 50 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgcmodule.cpp"
#line 28 "sip/QtGui/qwidget.sip"
#include <qwidget.h>
#line 53 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgcmodule.cpp"
#line 105 "sip/QtGui/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 56 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgcmodule.cpp"
#line 188 "sip/QtGui/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 59 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgcmodule.cpp"
#line 505 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 62 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgcmodule.cpp"
#line 135 "sip/QtGui/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 65 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgcmodule.cpp"
#line 647 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 68 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgcmodule.cpp"
#line 265 "sip/QtCore/qvariant.sip"
#include <qvariant.h>
#line 71 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgcmodule.cpp"
#line 474 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 74 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgcmodule.cpp"
#line 48 "sip/QtGui/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 77 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgcmodule.cpp"
#line 26 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 80 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgcmodule.cpp"
#line 78 "sip/QtGui/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 83 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgcmodule.cpp"
#line 351 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 86 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgcmodule.cpp"
#line 368 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 89 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgcmodule.cpp"
#line 26 "sip/QtGui/qpaintdevice.sip"
#include <qpaintdevice.h>
#line 92 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgcmodule.cpp"
#line 52 "sip/QtGui/qpaintengine.sip"
#include <qpaintengine.h>
#line 95 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgcmodule.cpp"
#line 26 "sip/QtGui/qfont.sip"
#include <qfont.h>
#line 98 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgcmodule.cpp"
#line 26 "sip/QtGui/qpalette.sip"
#include <qpalette.h>
#line 101 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgcmodule.cpp"
#line 607 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 104 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgcmodule.cpp"
#line 596 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 107 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgcmodule.cpp"
#line 739 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 110 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgcmodule.cpp"
#line 792 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 113 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgcmodule.cpp"
#line 765 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 116 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgcmodule.cpp"
#line 781 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 119 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgcmodule.cpp"
#line 854 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 122 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgcmodule.cpp"
#line 403 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 125 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgcmodule.cpp"
#line 618 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 128 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgcmodule.cpp"
#line 574 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 131 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgcmodule.cpp"
#line 561 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 134 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgcmodule.cpp"
#line 548 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 137 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgcmodule.cpp"
#line 524 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 140 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgcmodule.cpp"
#line 347 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 143 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgcmodule.cpp"
#line 252 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 146 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgcmodule.cpp"
#line 26 "sip/QtCore/qsize.sip"
#include <qsize.h>
#line 149 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgcmodule.cpp"

/* Define the strings used by this module. */
const char sipStrings_QtSvg[] = {
    'w', 'i', 'n', 'd', 'o', 'w', 'A', 'c', 't', 'i', 'v', 'a', 't', 'i', 'o', 'n', 'C', 'h', 'a', 'n', 'g', 'e', 0,
    'm', 'o', 'u', 's', 'e', 'D', 'o', 'u', 'b', 'l', 'e', 'C', 'l', 'i', 'c', 'k', 'E', 'v', 'e', 'n', 't', 0,
    's', 'e', 't', 'M', 'a', 'x', 'i', 'm', 'u', 'm', 'C', 'a', 'c', 'h', 'e', 'S', 'i', 'z', 'e', 0,
    'd', 'e', 'f', 'a', 'u', 'l', 't', 'B', 'u', 't', 't', 'o', 'n', 'N', 'u', 'm', 'b', 'e', 'r', 0,
    's', 'e', 't', 'F', 'r', 'a', 'm', 'e', 's', 'P', 'e', 'r', 'S', 'e', 'c', 'o', 'n', 'd', 0,
    'e', 's', 'c', 'a', 'p', 'e', 'B', 'u', 't', 't', 'o', 'n', 'N', 'u', 'm', 'b', 'e', 'r', 0,
    'f', 'o', 'c', 'u', 's', 'N', 'e', 'x', 't', 'P', 'r', 'e', 'v', 'C', 'h', 'i', 'l', 'd', 0,
    'a', 'n', 'i', 'm', 'a', 't', 'i', 'o', 'n', 'D', 'u', 'r', 'a', 't', 'i', 'o', 'n', 0,
    's', 'e', 't', 'C', 'a', 'c', 'h', 'i', 'n', 'g', 'E', 'n', 'a', 'b', 'l', 'e', 'd', 0,
    's', 'e', 't', 'S', 'h', 'a', 'r', 'e', 'd', 'R', 'e', 'n', 'd', 'e', 'r', 'e', 'r', 0,
    'm', 'o', 'u', 's', 'e', 'R', 'e', 'l', 'e', 'a', 's', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'm', 'a', 't', 'r', 'i', 'x', 'F', 'o', 'r', 'E', 'l', 'e', 'm', 'e', 'n', 't', 0,
    'm', 'a', 'x', 'i', 'm', 'u', 'm', 'C', 'a', 'c', 'h', 'e', 'S', 'i', 'z', 'e', 0,
    'i', 's', 'C', 'a', 'c', 'h', 'i', 'n', 'g', 'E', 'n', 'a', 'b', 'l', 'e', 'd', 0,
    'Q', 'G', 'r', 'a', 'p', 'h', 'i', 'c', 's', 'S', 'v', 'g', 'I', 't', 'e', 'm', 0,
    's', 'c', 'e', 'n', 'e', 'E', 'v', 'e', 'n', 't', 'F', 'i', 'l', 't', 'e', 'r', 0,
    'c', 'o', 'l', 'l', 'i', 'd', 'e', 's', 'W', 'i', 't', 'h', 'P', 'a', 't', 'h', 0,
    'c', 'o', 'l', 'l', 'i', 'd', 'e', 's', 'W', 'i', 't', 'h', 'I', 't', 'e', 'm', 0,
    'c', 'o', 'n', 't', 'e', 'x', 't', 'M', 'e', 'n', 'u', 'E', 'v', 'e', 'n', 't', 0,
    'i', 'n', 'p', 'u', 't', 'M', 'e', 't', 'h', 'o', 'd', 'E', 'v', 'e', 'n', 't', 0,
    'i', 'n', 'p', 'u', 't', 'M', 'e', 't', 'h', 'o', 'd', 'Q', 'u', 'e', 'r', 'y', 0,
    'd', 'i', 's', 'c', 'o', 'n', 'n', 'e', 'c', 't', 'N', 'o', 't', 'i', 'f', 'y', 0,
    's', 'e', 't', 'C', 'u', 'r', 'r', 'e', 'n', 't', 'F', 'r', 'a', 'm', 'e', 0,
    'f', 'r', 'a', 'm', 'e', 's', 'P', 'e', 'r', 'S', 'e', 'c', 'o', 'n', 'd', 0,
    'b', 'o', 'u', 'n', 'd', 's', 'O', 'n', 'E', 'l', 'e', 'm', 'e', 'n', 't', 0,
    's', 'e', 't', 'O', 'u', 't', 'p', 'u', 't', 'D', 'e', 'v', 'i', 'c', 'e', 0,
    'a', 's', 'p', 'e', 'c', 't', 'R', 'a', 't', 'i', 'o', 'M', 'o', 'd', 'e', 0,
    'd', 'e', 'v', 'i', 'c', 'e', 'T', 'r', 'a', 'n', 's', 'f', 'o', 'r', 'm', 0,
    'h', 'o', 'v', 'e', 'r', 'L', 'e', 'a', 'v', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'h', 'o', 'v', 'e', 'r', 'E', 'n', 't', 'e', 'r', 'E', 'v', 'e', 'n', 't', 0,
    'm', 'i', 'n', 'i', 'm', 'u', 'm', 'S', 'i', 'z', 'e', 'H', 'i', 'n', 't', 0,
    'm', 'o', 'u', 's', 'e', 'P', 'r', 'e', 's', 's', 'E', 'v', 'e', 'n', 't', 0,
    'k', 'e', 'y', 'R', 'e', 'l', 'e', 'a', 's', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'l', 'a', 'n', 'g', 'u', 'a', 'g', 'e', 'C', 'h', 'a', 'n', 'g', 'e', 0,
    'h', 'o', 'v', 'e', 'r', 'M', 'o', 'v', 'e', 'E', 'v', 'e', 'n', 't', 0,
    's', 'e', 'l', 'e', 'c', 't', 'e', 'd', 'F', 'i', 'l', 't', 'e', 'r', 0,
    's', 'e', 't', 'D', 'e', 's', 'c', 'r', 'i', 'p', 't', 'i', 'o', 'n', 0,
    'h', 'e', 'i', 'g', 'h', 't', 'F', 'o', 'r', 'W', 'i', 'd', 't', 'h', 0,
    'd', 'r', 'a', 'g', 'L', 'e', 'a', 'v', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'd', 'r', 'a', 'g', 'E', 'n', 't', 'e', 'r', 'E', 'v', 'e', 'n', 't', 0,
    'm', 'o', 'u', 's', 'e', 'M', 'o', 'v', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'r', 'e', 'p', 'a', 'i', 'n', 't', 'N', 'e', 'e', 'd', 'e', 'd', 0,
    'e', 'l', 'e', 'm', 'e', 'n', 't', 'E', 'x', 'i', 's', 't', 's', 0,
    'Q', 'S', 'v', 'g', 'G', 'e', 'n', 'e', 'r', 'a', 't', 'o', 'r', 0,
    'p', 'a', 'l', 'e', 't', 't', 'e', 'C', 'h', 'a', 'n', 'g', 'e', 0,
    'e', 'n', 'a', 'b', 'l', 'e', 'd', 'C', 'h', 'a', 'n', 'g', 'e', 0,
    's', 'e', 't', 'R', 'e', 's', 'o', 'l', 'u', 't', 'i', 'o', 'n', 0,
    't', 'r', 'a', 'n', 's', 'f', 'o', 'r', 'm', 'M', 'o', 'd', 'e', 0,
    'd', 'r', 'a', 'g', 'M', 'o', 'v', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'f', 'o', 'c', 'u', 's', 'O', 'u', 't', 'E', 'v', 'e', 'n', 't', 0,
    'k', 'e', 'y', 'P', 'r', 'e', 's', 's', 'E', 'v', 'e', 'n', 't', 0,
    'Q', 'S', 'v', 'g', 'R', 'e', 'n', 'd', 'e', 'r', 'e', 'r', 0,
    'o', 'u', 't', 'p', 'u', 't', 'D', 'e', 'v', 'i', 'c', 'e', 0,
    's', 'e', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'I', 'd', 0,
    's', 'o', 'u', 'r', 'c', 'e', 'R', 'e', 'g', 'i', 'o', 'n', 0,
    't', 'a', 'r', 'g', 'e', 't', 'O', 'f', 'f', 's', 'e', 't', 0,
    'i', 's', 'O', 'b', 's', 'c', 'u', 'r', 'e', 'd', 'B', 'y', 0,
    'b', 'o', 'u', 'n', 'd', 'i', 'n', 'g', 'R', 'e', 'c', 't', 0,
    'm', 'i', 'd', 'L', 'i', 'n', 'e', 'W', 'i', 'd', 't', 'h', 0,
    'f', 'o', 'c', 'u', 's', 'I', 'n', 'E', 'v', 'e', 'n', 't', 0,
    'c', 'u', 'r', 'r', 'e', 'n', 't', 'F', 'r', 'a', 'm', 'e', 0,
    'd', 'e', 'f', 'a', 'u', 'l', 't', 'S', 'i', 'z', 'e', 0,
    't', 'a', 'b', 'l', 'e', 't', 'E', 'v', 'e', 'n', 't', 0,
    'b', 'u', 't', 't', 'o', 'n', '2', 'T', 'e', 'x', 't', 0,
    'b', 'u', 't', 't', 'o', 'n', '1', 'T', 'e', 'x', 't', 0,
    'a', 'c', 't', 'i', 'o', 'n', 'E', 'v', 'e', 'n', 't', 0,
    'p', 'a', 'i', 'n', 't', 'E', 'n', 'g', 'i', 'n', 'e', 0,
    'd', 'e', 's', 'c', 'r', 'i', 'p', 't', 'i', 'o', 'n', 0,
    'r', 'e', 's', 'i', 'z', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'c', 'h', 'a', 'n', 'g', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'c', 'u', 's', 't', 'o', 'm', 'E', 'v', 'e', 'n', 't', 0,
    'e', 'v', 'e', 'n', 't', 'F', 'i', 'l', 't', 'e', 'r', 0,
    's', 'e', 't', 'F', 'i', 'l', 'e', 'N', 'a', 'm', 'e', 0,
    'P', 'y', 'Q', 't', '4', '.', 'Q', 't', 'S', 'v', 'g', 0,
    'Q', 'S', 'v', 'g', 'W', 'i', 'd', 'g', 'e', 't', 0,
    's', 'e', 't', 'V', 'i', 'e', 'w', 'B', 'o', 'x', 0,
    'f', 'o', 'n', 't', 'C', 'h', 'a', 'n', 'g', 'e', 0,
    'r', 'e', 's', 'o', 'l', 'u', 't', 'i', 'o', 'n', 0,
    'e', 'n', 't', 'e', 'r', 'E', 'v', 'e', 'n', 't', 0,
    'l', 'e', 'a', 'v', 'e', 'E', 'v', 'e', 'n', 't', 0,
    's', 'c', 'e', 'n', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'i', 't', 'e', 'm', 'C', 'h', 'a', 'n', 'g', 'e', 0,
    'o', 'p', 'a', 'q', 'u', 'e', 'A', 'r', 'e', 'a', 0,
    's', 'e', 't', 'V', 'i', 's', 'i', 'b', 'l', 'e', 0,
    'c', 'l', 'o', 's', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'h', 'e', 'e', 'l', 'E', 'v', 'e', 'n', 't', 0,
    'p', 'a', 'i', 'n', 't', 'E', 'v', 'e', 'n', 't', 0,
    'f', 'i', 'e', 'l', 'd', 'W', 'i', 'd', 't', 'h', 0,
    'c', 'h', 'i', 'l', 'd', 'E', 'v', 'e', 'n', 't', 0,
    't', 'i', 'm', 'e', 'r', 'E', 'v', 'e', 'n', 't', 0,
    'e', 'l', 'e', 'm', 'e', 'n', 't', 'I', 'd', 0,
    'o', 'p', 'e', 'r', 'a', 't', 'i', 'o', 'n', 0,
    'm', 'o', 'v', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'l', 'i', 'n', 'e', 'W', 'i', 'd', 't', 'h', 0,
    's', 'h', 'o', 'w', 'E', 'v', 'e', 'n', 't', 0,
    'h', 'i', 'd', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'd', 'r', 'o', 'p', 'E', 'v', 'e', 'n', 't', 0,
    'd', 'i', 'r', 'e', 'c', 't', 'o', 'r', 'y', 0,
    'a', 'l', 'i', 'g', 'n', 'm', 'e', 'n', 't', 0,
    'p', 'r', 'e', 'c', 'i', 's', 'i', 'o', 'n', 0,
    'a', 'n', 'i', 'm', 'a', 't', 'e', 'd', 0,
    'v', 'i', 'e', 'w', 'B', 'o', 'x', 'F', 0,
    'r', 'e', 'n', 'd', 'e', 'r', 'e', 'r', 0,
    's', 'e', 't', 'T', 'i', 't', 'l', 'e', 0,
    'f', 'i', 'l', 'l', 'R', 'u', 'l', 'e', 0,
    't', 'a', 'b', 'A', 'r', 'r', 'a', 'y', 0,
    't', 'a', 'b', 'S', 't', 'o', 'p', 's', 0,
    'u', 's', 'e', 'r', 'D', 'a', 't', 'a', 0,
    's', 'i', 'z', 'e', 'H', 'i', 'n', 't', 0,
    's', 'h', 'o', 'r', 't', 'c', 'u', 't', 0,
    'b', 'e', 'h', 'a', 'v', 'i', 'o', 'r', 0,
    'p', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'f', 'i', 'l', 'l', 'C', 'h', 'a', 'r', 0,
    'c', 'o', 'n', 't', 'a', 'i', 'n', 's', 0,
    'f', 'i', 'l', 'e', 'N', 'a', 'm', 'e', 0,
    'v', 'i', 'e', 'w', 'B', 'o', 'x', 0,
    'e', 'x', 'p', 'o', 's', 'e', 'd', 0,
    'b', 'u', 't', 't', 'o', 'n', '2', 0,
    'b', 'u', 't', 't', 'o', 'n', '1', 0,
    'q', 'u', 'a', 'l', 'i', 't', 'y', 0,
    'd', 'e', 'v', 'T', 'y', 'p', 'e', 0,
    'a', 'd', 'v', 'a', 'n', 'c', 'e', 0,
    'y', 'M', 'a', 'r', 'g', 'i', 'n', 0,
    'x', 'M', 'a', 'r', 'g', 'i', 'n', 0,
    'c', 'a', 'p', 't', 'i', 'o', 'n', 0,
    'o', 'p', 't', 'i', 'o', 'n', 's', 0,
    'i', 's', 'V', 'a', 'l', 'i', 'd', 0,
    'f', 'i', 'l', 't', 'e', 'r', 's', 0,
    's', 'e', 't', 'S', 'i', 'z', 'e', 0,
    'b', 'o', 'u', 'n', 'd', 's', 0,
    'y', 'R', 'o', 'u', 'n', 'd', 0,
    'x', 'R', 'o', 'u', 'n', 'd', 0,
    'm', 'e', 't', 'r', 'i', 'c', 0,
    'l', 'a', 'y', 'e', 'r', 's', 0,
    'r', 'e', 'n', 'd', 'e', 'r', 0,
    's', 'u', 'n', 'k', 'e', 'n', 0,
    'o', 'p', 't', 'i', 'o', 'n', 0,
    'w', 'i', 'd', 'g', 'e', 't', 0,
    'p', 'r', 'o', 'p', 'e', 'r', 0,
    'v', 'a', 'l', 'u', 'e', '9', 0,
    'v', 'a', 'l', 'u', 'e', '8', 0,
    'v', 'a', 'l', 'u', 'e', '7', 0,
    'v', 'a', 'l', 'u', 'e', '6', 0,
    'v', 'a', 'l', 'u', 'e', '5', 0,
    'v', 'a', 'l', 'u', 'e', '4', 0,
    'v', 'a', 'l', 'u', 'e', '3', 0,
    'v', 'a', 'l', 'u', 'e', '2', 0,
    'v', 'a', 'l', 'u', 'e', '1', 0,
    'v', 'a', 'l', 'u', 'e', '0', 0,
    's', 'y', 'm', 'b', 'o', 'l', 0,
    's', 'u', 'f', 'f', 'i', 'x', 0,
    'p', 'r', 'e', 'f', 'i', 'x', 0,
    'f', 'o', 'r', 'm', 'a', 't', 0,
    'a', 'c', 't', 'i', 'o', 'n', 0,
    'c', 'o', 'l', 'u', 'm', 'n', 0,
    'f', 'i', 'l', 't', 'e', 'r', 0,
    'p', 'a', 'r', 'e', 'n', 't', 0,
    't', 'i', 't', 'l', 'e', 0,
    'b', 'r', 'u', 's', 'h', 0,
    'p', 'a', 'i', 'n', 't', 0,
    's', 'h', 'a', 'p', 'e', 0,
    'h', 'i', 'n', 't', 's', 0,
    'f', 'l', 'a', 'g', 's', 0,
    'e', 'v', 'e', 'n', 't', 0,
    'm', 's', 'e', 'c', 's', 0,
    's', 't', 'a', 't', 'e', 0,
    'l', 'o', 'a', 'd', 0,
    'm', 'o', 'd', 'e', 0,
    'n', 'a', 'm', 'e', 0,
    'b', 'a', 's', 'e', 0,
    'f', 'i', 'l', 'l', 0,
    'f', 'r', 'o', 'm', 0,
    's', 'o', 'r', 't', 0,
    't', 'y', 'p', 'e', 0,
    's', 'i', 'z', 'e', 0,
    'p', 'e', 'n', 0,
    'e', 'n', 'd', 0,
    'p', 'o', 's', 0,
    's', 'w', 0,
    's', 'y', 0,
    's', 'x', 0,
};

 ::QSize sipVH_QtSvg_49(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::QSize sipRes;
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_QSize, &sipRes);

    return sipRes;
}

int sipVH_QtSvg_48(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int a0)
{
    int sipRes = 0;
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "i", a0);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "i", &sipRes);

    return sipRes;
}

void sipVH_QtSvg_47(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QMouseEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QMouseEvent, NULL);
}

void sipVH_QtSvg_46(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QWheelEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QWheelEvent, NULL);
}

void sipVH_QtSvg_45(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QPaintEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QPaintEvent, NULL);
}

void sipVH_QtSvg_44(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QMoveEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QMoveEvent, NULL);
}

void sipVH_QtSvg_43(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QResizeEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QResizeEvent, NULL);
}

void sipVH_QtSvg_42(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QCloseEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QCloseEvent, NULL);
}

void sipVH_QtSvg_41(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QContextMenuEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QContextMenuEvent, NULL);
}

void sipVH_QtSvg_40(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QTabletEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QTabletEvent, NULL);
}

void sipVH_QtSvg_39(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QActionEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QActionEvent, NULL);
}

void sipVH_QtSvg_38(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QDragEnterEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QDragEnterEvent, NULL);
}

void sipVH_QtSvg_37(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QDragMoveEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QDragMoveEvent, NULL);
}

void sipVH_QtSvg_36(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QDragLeaveEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QDragLeaveEvent, NULL);
}

void sipVH_QtSvg_35(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QDropEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QDropEvent, NULL);
}

void sipVH_QtSvg_34(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QShowEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QShowEvent, NULL);
}

void sipVH_QtSvg_33(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QHideEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QHideEvent, NULL);
}

bool sipVH_QtSvg_32(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, bool a0)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "b", a0);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

void sipVH_QtSvg_31(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::QPalette& a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "N", new  ::QPalette(a0), sipType_QPalette, NULL);
}

void sipVH_QtSvg_30(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::QFont& a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "N", new  ::QFont(a0), sipType_QFont, NULL);
}

void sipVH_QtSvg_29(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, bool a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "b", a0);
}

void sipVH_QtSvg_28(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "");
}

 ::QPaintEngine* sipVH_QtSvg_27(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::QPaintEngine* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H0", sipType_QPaintEngine, &sipRes);

    return sipRes;
}

int sipVH_QtSvg_26(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QPaintDevice::PaintDeviceMetric a0)
{
    int sipRes = 0;
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "F", a0, sipType_QPaintDevice_PaintDeviceMetric);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "i", &sipRes);

    return sipRes;
}

void sipVH_QtSvg_25(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const char*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "S", a0);
}

void sipVH_QtSvg_24(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QEvent, NULL);
}

void sipVH_QtSvg_23(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QChildEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QChildEvent, NULL);
}

void sipVH_QtSvg_22(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QTimerEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QTimerEvent, NULL);
}

bool sipVH_QtSvg_21(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QObject*a0, ::QEvent*a1)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "DD", a0, sipType_QObject, NULL, a1, sipType_QEvent, NULL);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

void sipVH_QtSvg_20(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QGraphicsSceneWheelEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QGraphicsSceneWheelEvent, NULL);
}

bool sipVH_QtSvg_19(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QGraphicsItem*a0, ::QEvent*a1)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "DD", a0, sipType_QGraphicsItem, NULL, a1, sipType_QEvent, NULL);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH_QtSvg_18(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QEvent*a0)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "D", a0, sipType_QEvent, NULL);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

void sipVH_QtSvg_17(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QGraphicsSceneMouseEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QGraphicsSceneMouseEvent, NULL);
}

void sipVH_QtSvg_16(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QKeyEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QKeyEvent, NULL);
}

 ::QVariant sipVH_QtSvg_15(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QGraphicsItem::GraphicsItemChange a0,const  ::QVariant& a1)
{
     ::QVariant sipRes;
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "FN", a0, sipType_QGraphicsItem_GraphicsItemChange, new  ::QVariant(a1), sipType_QVariant, NULL);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_QVariant, &sipRes);

    return sipRes;
}

 ::QVariant sipVH_QtSvg_14(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::Qt::InputMethodQuery a0)
{
     ::QVariant sipRes;
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "F", a0, sipType_Qt_InputMethodQuery);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_QVariant, &sipRes);

    return sipRes;
}

void sipVH_QtSvg_13(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QInputMethodEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QInputMethodEvent, NULL);
}

void sipVH_QtSvg_12(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QGraphicsSceneHoverEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QGraphicsSceneHoverEvent, NULL);
}

void sipVH_QtSvg_11(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QFocusEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QFocusEvent, NULL);
}

void sipVH_QtSvg_10(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QGraphicsSceneDragDropEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QGraphicsSceneDragDropEvent, NULL);
}

void sipVH_QtSvg_9(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QGraphicsSceneContextMenuEvent*a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "D", a0, sipType_QGraphicsSceneContextMenuEvent, NULL);
}

int sipVH_QtSvg_8(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
    int sipRes = 0;
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "i", &sipRes);

    return sipRes;
}

void sipVH_QtSvg_7(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod,  ::QPainter*a0,const  ::QStyleOptionGraphicsItem*a1, ::QWidget*a2)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "DDD", a0, sipType_QPainter, NULL, const_cast< ::QStyleOptionGraphicsItem *>(a1), sipType_QStyleOptionGraphicsItem, NULL, a2, sipType_QWidget, NULL);
}

bool sipVH_QtSvg_6(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::QGraphicsItem*a0)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "D", const_cast< ::QGraphicsItem *>(a0), sipType_QGraphicsItem, NULL);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH_QtSvg_5(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::QPainterPath& a0, ::Qt::ItemSelectionMode a1)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "NF", new  ::QPainterPath(a0), sipType_QPainterPath, NULL, a1, sipType_Qt_ItemSelectionMode);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH_QtSvg_4(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::QGraphicsItem*a0, ::Qt::ItemSelectionMode a1)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "DF", const_cast< ::QGraphicsItem *>(a0), sipType_QGraphicsItem, NULL, a1, sipType_Qt_ItemSelectionMode);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

bool sipVH_QtSvg_3(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const  ::QPointF& a0)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "N", new  ::QPointF(a0), sipType_QPointF, NULL);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

 ::QPainterPath sipVH_QtSvg_2(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::QPainterPath sipRes;
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_QPainterPath, &sipRes);

    return sipRes;
}

 ::QRectF sipVH_QtSvg_1(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
     ::QRectF sipRes;
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_QRectF, &sipRes);

    return sipRes;
}

void sipVH_QtSvg_0(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int a0)
{
    sipCallProcedureMethod(sipGILState, sipErrorHandler, sipPySelf, sipMethod, "i", a0);
}


/* Convert to a sub-class if possible. */
extern "C" {static const sipTypeDef *sipSubClass_QGraphicsSvgItem(void **);}
static const sipTypeDef *sipSubClass_QGraphicsSvgItem(void **sipCppRet)
{
     ::QGraphicsItem *sipCpp = reinterpret_cast< ::QGraphicsItem *>(*sipCppRet);
    const sipTypeDef *sipType;

#line 71 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtSvg/qgraphicssvgitem.sip"
    if (sipCpp->type() == 13)
    {
        // We need to explicitly cast because of the multiple inheritance.
        *sipCppRet = static_cast<QGraphicsSvgItem *>(sipCpp);
        sipType = sipType_QGraphicsSvgItem;
    }
    else
        sipType = 0;
#line 688 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgcmodule.cpp"

    return sipType;
}


/* Convert to a sub-class if possible. */
extern "C" {static const sipTypeDef *sipSubClass_QSvgRenderer(void **);}
static const sipTypeDef *sipSubClass_QSvgRenderer(void **sipCppRet)
{
     ::QObject *sipCpp = reinterpret_cast< ::QObject *>(*sipCppRet);
    const sipTypeDef *sipType;

#line 30 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtSvg/qsvgrenderer.sip"
    static struct class_graph {
            const char *name;
            sipTypeDef **type;
            int yes, no;
        } graph[] = {
            {sipName_QSvgWidget,	&sipType_QSvgWidget,	-1, 1},
    #if QT_VERSION >= 0x040200
            {sipName_QGraphicsSvgItem,	&sipType_QGraphicsSvgItem,	-1, 2},
    #else
            {0,	0, -1, 2},
    #endif
            {sipName_QSvgRenderer,	&sipType_QSvgRenderer,	-1, -1},
        };
    
        int i = 0;
    
        sipType = 0;
    
        do
        {
            struct class_graph *cg = &graph[i];
    
            if (cg->name != NULL && sipCpp->inherits(cg->name))
            {
                sipType = *cg->type;
                i = cg->yes;
            }
            else
                i = cg->no;
        }
        while (i >= 0);
#line 733 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgcmodule.cpp"

    return sipType;
}


/*
 * This defines each type in this module.
 */
sipTypeDef *sipExportedTypes_QtSvg[] = {
    &sipTypeDef_QtSvg_QGraphicsSvgItem.ctd_base,
    &sipTypeDef_QtSvg_QSvgGenerator.ctd_base,
    &sipTypeDef_QtSvg_QSvgRenderer.ctd_base,
    &sipTypeDef_QtSvg_QSvgWidget.ctd_base,
};


/* This defines the types that this module needs to import from QtCore. */
sipImportedTypeDef sipImportedTypes_QtSvg_QtCore[] = {
    {"QByteArray"},
    {"QChildEvent"},
    {"QEvent"},
    {"QIODevice"},
    {"QObject"},
    {"QPointF"},
    {"QRect"},
    {"QRectF"},
    {"QSize"},
    {"QString"},
    {"QTimerEvent"},
    {"QVariant"},
    {"QXmlStreamReader"},
    {"Qt::InputMethodQuery"},
    {"Qt::ItemSelectionMode"},
    {NULL}
};


/* This defines the types that this module needs to import from QtGui. */
sipImportedTypeDef sipImportedTypes_QtSvg_QtGui[] = {
    {"QActionEvent"},
    {"QCloseEvent"},
    {"QContextMenuEvent"},
    {"QDragEnterEvent"},
    {"QDragLeaveEvent"},
    {"QDragMoveEvent"},
    {"QDropEvent"},
    {"QFocusEvent"},
    {"QFont"},
    {"QGraphicsItem"},
    {"QGraphicsItem::GraphicsItemChange"},
    {"QGraphicsObject"},
    {"QGraphicsSceneContextMenuEvent"},
    {"QGraphicsSceneDragDropEvent"},
    {"QGraphicsSceneHoverEvent"},
    {"QGraphicsSceneMouseEvent"},
    {"QGraphicsSceneWheelEvent"},
    {"QHideEvent"},
    {"QInputMethodEvent"},
    {"QKeyEvent"},
    {"QMatrix"},
    {"QMouseEvent"},
    {"QMoveEvent"},
    {"QPaintDevice"},
    {"QPaintDevice::PaintDeviceMetric"},
    {"QPaintEngine"},
    {"QPaintEvent"},
    {"QPainter"},
    {"QPainterPath"},
    {"QPalette"},
    {"QResizeEvent"},
    {"QShowEvent"},
    {"QStyleOptionGraphicsItem"},
    {"QTabletEvent"},
    {"QWheelEvent"},
    {"QWidget"},
    {NULL}
};


/* This defines the modules that this module needs to import. */
static sipImportedModuleDef importsTable[] = {
    {"PyQt4.QtCore", sipImportedTypes_QtSvg_QtCore, NULL, NULL},
    {"PyQt4.QtGui", sipImportedTypes_QtSvg_QtGui, NULL, NULL},
    {NULL, NULL, NULL, NULL}
};


/* This defines the class sub-convertors that this module defines. */
static sipSubClassConvertorDef convertorsTable[] = {
    {sipSubClass_QGraphicsSvgItem, {9, 1, 0}, NULL},
    {sipSubClass_QSvgRenderer, {4, 0, 0}, NULL},
    {NULL, {0, 0, 0}, NULL}
};


/* This defines this module. */
sipExportedModuleDef sipModuleAPI_QtSvg = {
    0,
    SIP_API_MINOR_NR,
    sipNameNr_PyQt4_QtSvg,
    0,
    sipStrings_QtSvg,
    importsTable,
    NULL,
    4,
    sipExportedTypes_QtSvg,
    NULL,
    0,
    NULL,
    0,
    NULL,
    NULL,
    convertorsTable,
    {NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL},
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL
};


/* The SIP API and the APIs of any imported modules. */
const sipAPIDef *sipAPI_QtSvg;

sip_qt_metaobject_func sip_QtSvg_qt_metaobject;
sip_qt_metacall_func sip_QtSvg_qt_metacall;
sip_qt_metacast_func sip_QtSvg_qt_metacast;


/* The Python module initialisation function. */
#if PY_MAJOR_VERSION >= 3
#define SIP_MODULE_ENTRY        PyInit_QtSvg
#define SIP_MODULE_TYPE         PyObject *
#define SIP_MODULE_DISCARD(r)   Py_DECREF(r)
#define SIP_MODULE_RETURN(r)    return (r)
#else
#define SIP_MODULE_ENTRY        initQtSvg
#define SIP_MODULE_TYPE         void
#define SIP_MODULE_DISCARD(r)
#define SIP_MODULE_RETURN(r)    return
#endif

#if defined(SIP_STATIC_MODULE)
extern "C" SIP_MODULE_TYPE SIP_MODULE_ENTRY()
#else
PyMODINIT_FUNC SIP_MODULE_ENTRY()
#endif
{
    static PyMethodDef sip_methods[] = {
        {0, 0, 0, 0}
    };

#if PY_MAJOR_VERSION >= 3
    static PyModuleDef sip_module_def = {
        PyModuleDef_HEAD_INIT,
        "PyQt4.QtSvg",
        NULL,
        -1,
        sip_methods,
        NULL,
        NULL,
        NULL,
        NULL
    };
#endif

    PyObject *sipModule, *sipModuleDict;
    PyObject *sip_sipmod, *sip_capiobj;

    /* Initialise the module and get it's dictionary. */
#if PY_MAJOR_VERSION >= 3
    sipModule = PyModule_Create(&sip_module_def);
#elif PY_VERSION_HEX >= 0x02050000
    sipModule = Py_InitModule(sipName_PyQt4_QtSvg, sip_methods);
#else
    sipModule = Py_InitModule(const_cast<char *>(sipName_PyQt4_QtSvg), sip_methods);
#endif

    if (sipModule == NULL)
        SIP_MODULE_RETURN(NULL);

    sipModuleDict = PyModule_GetDict(sipModule);

    /* Get the SIP module's API. */
#if PY_VERSION_HEX >= 0x02050000
    sip_sipmod = PyImport_ImportModule(SIP_MODULE_NAME);
#else
    sip_sipmod = PyImport_ImportModule(const_cast<char *>(SIP_MODULE_NAME));
#endif

    if (sip_sipmod == NULL)
    {
        SIP_MODULE_DISCARD(sipModule);
        SIP_MODULE_RETURN(NULL);
    }

    sip_capiobj = PyDict_GetItemString(PyModule_GetDict(sip_sipmod), "_C_API");
    Py_DECREF(sip_sipmod);

#if defined(SIP_USE_PYCAPSULE)
    if (sip_capiobj == NULL || !PyCapsule_CheckExact(sip_capiobj))
#else
    if (sip_capiobj == NULL || !PyCObject_Check(sip_capiobj))
#endif
    {
        SIP_MODULE_DISCARD(sipModule);
        SIP_MODULE_RETURN(NULL);
    }

#if defined(SIP_USE_PYCAPSULE)
    sipAPI_QtSvg = reinterpret_cast<const sipAPIDef *>(PyCapsule_GetPointer(sip_capiobj, SIP_MODULE_NAME "._C_API"));
#else
    sipAPI_QtSvg = reinterpret_cast<const sipAPIDef *>(PyCObject_AsVoidPtr(sip_capiobj));
#endif

#if defined(SIP_USE_PYCAPSULE)
    if (sipAPI_QtSvg == NULL)
    {
        SIP_MODULE_DISCARD(sipModule);
        SIP_MODULE_RETURN(NULL);
    }
#endif

    /* Export the module and publish it's API. */
    if (sipExportModule(&sipModuleAPI_QtSvg,SIP_API_MAJOR_NR,SIP_API_MINOR_NR,0) < 0)
    {
        SIP_MODULE_DISCARD(sipModule);
        SIP_MODULE_RETURN(0);
    }

    sip_QtSvg_qt_metaobject = (sip_qt_metaobject_func)sipImportSymbol("qtcore_qt_metaobject");
    sip_QtSvg_qt_metacall = (sip_qt_metacall_func)sipImportSymbol("qtcore_qt_metacall");
    sip_QtSvg_qt_metacast = (sip_qt_metacast_func)sipImportSymbol("qtcore_qt_metacast");

    if (!sip_QtSvg_qt_metacast)
        Py_FatalError("Unable to import qtcore_qt_metacast");

    /* Initialise the module now all its dependencies have been set up. */
    if (sipInitModule(&sipModuleAPI_QtSvg,sipModuleDict) < 0)
    {
        SIP_MODULE_DISCARD(sipModule);
        SIP_MODULE_RETURN(0);
    }

    SIP_MODULE_RETURN(sipModule);
}
