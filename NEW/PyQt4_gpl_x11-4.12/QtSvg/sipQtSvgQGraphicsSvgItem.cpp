/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.19.2
 *
 * Copyright (c) 2016 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt4.
 * 
 * This file may be used under the terms of the GNU General Public License
 * version 3.0 as published by the Free Software Foundation and appearing in
 * the file LICENSE included in the packaging of this file.  Please review the
 * following information to ensure the GNU General Public License version 3.0
 * requirements will be met: http://www.gnu.org/copyleft/gpl.html.
 * 
 * If you do not wish to use this file under the terms of the GPL version 3.0
 * then you may purchase a commercial license.  For more information contact
 * info@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtSvg.h"

#line 67 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtSvg/qgraphicssvgitem.sip"
#include <qgraphicssvgitem.h>
#line 29 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgQGraphicsSvgItem.cpp"

#line 28 "sip/QtGui/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 33 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 27 "sip/QtCore/qstring.sip"
#include <qstring.h>
#line 36 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 26 "sip/QtGui/qpainter.sip"
#include <qpainter.h>
#line 39 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 1966 "sip/QtGui/qstyleoption.sip"
#include <qstyleoption.h>
#line 42 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 28 "sip/QtGui/qwidget.sip"
#include <qwidget.h>
#line 45 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 159 "sip/QtCore/qrect.sip"
#include <qrect.h>
#line 48 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 26 "sip/QtCore/qsize.sip"
#include <qsize.h>
#line 51 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 26 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtSvg/qsvgrenderer.sip"
#include <qsvgrenderer.h>
#line 54 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 57 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 60 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 26 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 63 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 368 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 66 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 351 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 69 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 29 "sip/QtCore/qobject.sip"
#include <qobject.h>
#line 72 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 265 "sip/QtCore/qvariant.sip"
#include <qvariant.h>
#line 75 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 28 "sip/QtCore/qlist.sip"
#include <qlist.h>
#line 78 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 32 "sip/QtCore/qbytearray.sip"
#include <qbytearray.h>
#line 81 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 115 "sip/QtCore/qlist.sip"
#include <qlist.h>
#line 84 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 26 "sip/QtCore/qthread.sip"
#include <qthread.h>
#line 87 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 26 "sip/QtCore/qregexp.sip"
#include <qregexp.h>
#line 90 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 26 "sip/QtCore/qobjectdefs.sip"
#include <qobjectdefs.h>
#line 93 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 96 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 110 "sip/QtCore/qpoint.sip"
#include <qpoint.h>
#line 99 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 115 "sip/QtCore/qlist.sip"
#include <qlist.h>
#line 102 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 28 "sip/QtGui/qgraphicstransform.sip"
#include <qgraphicstransform.h>
#line 105 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 28 "sip/QtGui/qgraphicseffect.sip"
#include <qgraphicseffect.h>
#line 108 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 1138 "sip/QtGui/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 111 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 26 "sip/QtGui/qpainterpath.sip"
#include <qpainterpath.h>
#line 114 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 34 "sip/QtGui/qtransform.sip"
#include <qtransform.h>
#line 117 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 26 "sip/QtGui/qregion.sip"
#include <qregion.h>
#line 120 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 115 "sip/QtCore/qlist.sip"
#include <qlist.h>
#line 123 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 182 "sip/QtGui/qgraphicswidget.sip"
#include <qgraphicswidget.h>
#line 126 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 78 "sip/QtGui/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 129 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 48 "sip/QtGui/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 132 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 474 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 135 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 647 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 138 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 135 "sip/QtGui/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 141 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 505 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 144 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 188 "sip/QtGui/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 147 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 105 "sip/QtGui/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 150 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 350 "sip/QtGui/qpolygon.sip"
#include <qpolygon.h>
#line 153 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 30 "sip/QtGui/qmatrix.sip"
#include <qmatrix.h>
#line 156 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 159 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 26 "sip/QtGui/qcursor.sip"
#include <qcursor.h>
#line 162 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 28 "sip/QtGui/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 165 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 1098 "sip/QtGui/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 168 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 28 "sip/QtGui/qgraphicsscene.sip"
#include <qgraphicsscene.h>
#line 171 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtSvg/sipQtSvgQGraphicsSvgItem.cpp"


class sipQGraphicsSvgItem : public  ::QGraphicsSvgItem
{
public:
    sipQGraphicsSvgItem( ::QGraphicsItem*);
    sipQGraphicsSvgItem(const  ::QString&, ::QGraphicsItem*);
    virtual ~sipQGraphicsSvgItem();

    int qt_metacall(QMetaObject::Call,int,void **);
    void *qt_metacast(const char *);
    const QMetaObject *metaObject() const;

    /*
     * There is a protected method for every virtual method visible from
     * this class.
     */
protected:
    void disconnectNotify(const char*);
    void connectNotify(const char*);
    void customEvent( ::QEvent*);
    void childEvent( ::QChildEvent*);
    void timerEvent( ::QTimerEvent*);
    bool eventFilter( ::QObject*, ::QEvent*);
    bool event( ::QEvent*);
    void wheelEvent( ::QGraphicsSceneWheelEvent*);
    bool sceneEventFilter( ::QGraphicsItem*, ::QEvent*);
    bool sceneEvent( ::QEvent*);
    void mouseReleaseEvent( ::QGraphicsSceneMouseEvent*);
    void mousePressEvent( ::QGraphicsSceneMouseEvent*);
    void mouseMoveEvent( ::QGraphicsSceneMouseEvent*);
    void mouseDoubleClickEvent( ::QGraphicsSceneMouseEvent*);
    void keyReleaseEvent( ::QKeyEvent*);
    void keyPressEvent( ::QKeyEvent*);
     ::QVariant itemChange( ::QGraphicsItem::GraphicsItemChange,const  ::QVariant&);
     ::QVariant inputMethodQuery( ::Qt::InputMethodQuery) const;
    void inputMethodEvent( ::QInputMethodEvent*);
    void hoverMoveEvent( ::QGraphicsSceneHoverEvent*);
    void hoverLeaveEvent( ::QGraphicsSceneHoverEvent*);
    void hoverEnterEvent( ::QGraphicsSceneHoverEvent*);
    void focusOutEvent( ::QFocusEvent*);
    void focusInEvent( ::QFocusEvent*);
    void dropEvent( ::QGraphicsSceneDragDropEvent*);
    void dragMoveEvent( ::QGraphicsSceneDragDropEvent*);
    void dragLeaveEvent( ::QGraphicsSceneDragDropEvent*);
    void dragEnterEvent( ::QGraphicsSceneDragDropEvent*);
    void contextMenuEvent( ::QGraphicsSceneContextMenuEvent*);
    int type() const;
    void paint( ::QPainter*,const  ::QStyleOptionGraphicsItem*, ::QWidget*);
     ::QPainterPath opaqueArea() const;
    bool isObscuredBy(const  ::QGraphicsItem*) const;
    bool collidesWithPath(const  ::QPainterPath&, ::Qt::ItemSelectionMode) const;
    bool collidesWithItem(const  ::QGraphicsItem*, ::Qt::ItemSelectionMode) const;
    bool contains(const  ::QPointF&) const;
     ::QPainterPath shape() const;
     ::QRectF boundingRect() const;
    void advance(int);

public:
    sipSimpleWrapper *sipPySelf;

private:
    sipQGraphicsSvgItem(const sipQGraphicsSvgItem &);
    sipQGraphicsSvgItem &operator = (const sipQGraphicsSvgItem &);

    char sipPyMethods[39];
};

sipQGraphicsSvgItem::sipQGraphicsSvgItem( ::QGraphicsItem*a0):  ::QGraphicsSvgItem(a0), sipPySelf(0)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQGraphicsSvgItem::sipQGraphicsSvgItem(const  ::QString& a0, ::QGraphicsItem*a1):  ::QGraphicsSvgItem(a0,a1), sipPySelf(0)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQGraphicsSvgItem::~sipQGraphicsSvgItem()
{
    sipCommonDtor(sipPySelf);
}

const QMetaObject *sipQGraphicsSvgItem::metaObject() const
{
    return sip_QtSvg_qt_metaobject(sipPySelf,sipType_QGraphicsSvgItem);
}

int sipQGraphicsSvgItem::qt_metacall(QMetaObject::Call _c,int _id,void **_a)
{
    _id =  ::QGraphicsSvgItem::qt_metacall(_c,_id,_a);

    if (_id >= 0)
        _id = sip_QtSvg_qt_metacall(sipPySelf,sipType_QGraphicsSvgItem,_c,_id,_a);

    return _id;
}

void *sipQGraphicsSvgItem::qt_metacast(const char *_clname)
{
    return (sip_QtSvg_qt_metacast(sipPySelf, sipType_QGraphicsSvgItem, _clname)) ? this :  ::QGraphicsSvgItem::qt_metacast(_clname);
}

void sipQGraphicsSvgItem::disconnectNotify(const char*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[0],sipPySelf,NULL,sipName_disconnectNotify);

    if (!sipMeth)
    {
         ::QGraphicsSvgItem::disconnectNotify(a0);
        return;
    }

    extern void sipVH_QtSvg_25(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const char*);

    sipVH_QtSvg_25(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsSvgItem::connectNotify(const char*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[1],sipPySelf,NULL,sipName_connectNotify);

    if (!sipMeth)
    {
         ::QGraphicsSvgItem::connectNotify(a0);
        return;
    }

    extern void sipVH_QtSvg_25(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const char*);

    sipVH_QtSvg_25(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsSvgItem::customEvent( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[2],sipPySelf,NULL,sipName_customEvent);

    if (!sipMeth)
    {
         ::QGraphicsSvgItem::customEvent(a0);
        return;
    }

    extern void sipVH_QtSvg_24(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    sipVH_QtSvg_24(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsSvgItem::childEvent( ::QChildEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[3],sipPySelf,NULL,sipName_childEvent);

    if (!sipMeth)
    {
         ::QGraphicsSvgItem::childEvent(a0);
        return;
    }

    extern void sipVH_QtSvg_23(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QChildEvent*);

    sipVH_QtSvg_23(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsSvgItem::timerEvent( ::QTimerEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[4],sipPySelf,NULL,sipName_timerEvent);

    if (!sipMeth)
    {
         ::QGraphicsSvgItem::timerEvent(a0);
        return;
    }

    extern void sipVH_QtSvg_22(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QTimerEvent*);

    sipVH_QtSvg_22(sipGILState, 0, sipPySelf, sipMeth, a0);
}

bool sipQGraphicsSvgItem::eventFilter( ::QObject*a0, ::QEvent*a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[5],sipPySelf,NULL,sipName_eventFilter);

    if (!sipMeth)
        return  ::QGraphicsSvgItem::eventFilter(a0,a1);

    extern bool sipVH_QtSvg_21(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QObject*, ::QEvent*);

    return sipVH_QtSvg_21(sipGILState, 0, sipPySelf, sipMeth, a0, a1);
}

bool sipQGraphicsSvgItem::event( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[6],sipPySelf,NULL,sipName_event);

    if (!sipMeth)
        return  ::QGraphicsSvgItem::event(a0);

    extern bool sipVH_QtSvg_18(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    return sipVH_QtSvg_18(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsSvgItem::wheelEvent( ::QGraphicsSceneWheelEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[7],sipPySelf,NULL,sipName_wheelEvent);

    if (!sipMeth)
    {
         ::QGraphicsSvgItem::wheelEvent(a0);
        return;
    }

    extern void sipVH_QtSvg_20(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneWheelEvent*);

    sipVH_QtSvg_20(sipGILState, 0, sipPySelf, sipMeth, a0);
}

bool sipQGraphicsSvgItem::sceneEventFilter( ::QGraphicsItem*a0, ::QEvent*a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[8],sipPySelf,NULL,sipName_sceneEventFilter);

    if (!sipMeth)
        return  ::QGraphicsSvgItem::sceneEventFilter(a0,a1);

    extern bool sipVH_QtSvg_19(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsItem*, ::QEvent*);

    return sipVH_QtSvg_19(sipGILState, 0, sipPySelf, sipMeth, a0, a1);
}

bool sipQGraphicsSvgItem::sceneEvent( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[9],sipPySelf,NULL,sipName_sceneEvent);

    if (!sipMeth)
        return  ::QGraphicsSvgItem::sceneEvent(a0);

    extern bool sipVH_QtSvg_18(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    return sipVH_QtSvg_18(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsSvgItem::mouseReleaseEvent( ::QGraphicsSceneMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[10],sipPySelf,NULL,sipName_mouseReleaseEvent);

    if (!sipMeth)
    {
         ::QGraphicsSvgItem::mouseReleaseEvent(a0);
        return;
    }

    extern void sipVH_QtSvg_17(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneMouseEvent*);

    sipVH_QtSvg_17(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsSvgItem::mousePressEvent( ::QGraphicsSceneMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[11],sipPySelf,NULL,sipName_mousePressEvent);

    if (!sipMeth)
    {
         ::QGraphicsSvgItem::mousePressEvent(a0);
        return;
    }

    extern void sipVH_QtSvg_17(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneMouseEvent*);

    sipVH_QtSvg_17(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsSvgItem::mouseMoveEvent( ::QGraphicsSceneMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[12],sipPySelf,NULL,sipName_mouseMoveEvent);

    if (!sipMeth)
    {
         ::QGraphicsSvgItem::mouseMoveEvent(a0);
        return;
    }

    extern void sipVH_QtSvg_17(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneMouseEvent*);

    sipVH_QtSvg_17(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsSvgItem::mouseDoubleClickEvent( ::QGraphicsSceneMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[13],sipPySelf,NULL,sipName_mouseDoubleClickEvent);

    if (!sipMeth)
    {
         ::QGraphicsSvgItem::mouseDoubleClickEvent(a0);
        return;
    }

    extern void sipVH_QtSvg_17(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneMouseEvent*);

    sipVH_QtSvg_17(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsSvgItem::keyReleaseEvent( ::QKeyEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[14],sipPySelf,NULL,sipName_keyReleaseEvent);

    if (!sipMeth)
    {
         ::QGraphicsSvgItem::keyReleaseEvent(a0);
        return;
    }

    extern void sipVH_QtSvg_16(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QKeyEvent*);

    sipVH_QtSvg_16(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsSvgItem::keyPressEvent( ::QKeyEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[15],sipPySelf,NULL,sipName_keyPressEvent);

    if (!sipMeth)
    {
         ::QGraphicsSvgItem::keyPressEvent(a0);
        return;
    }

    extern void sipVH_QtSvg_16(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QKeyEvent*);

    sipVH_QtSvg_16(sipGILState, 0, sipPySelf, sipMeth, a0);
}

 ::QVariant sipQGraphicsSvgItem::itemChange( ::QGraphicsItem::GraphicsItemChange a0,const  ::QVariant& a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[16],sipPySelf,NULL,sipName_itemChange);

    if (!sipMeth)
        return  ::QGraphicsSvgItem::itemChange(a0,a1);

    extern  ::QVariant sipVH_QtSvg_15(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsItem::GraphicsItemChange,const  ::QVariant&);

    return sipVH_QtSvg_15(sipGILState, 0, sipPySelf, sipMeth, a0, a1);
}

 ::QVariant sipQGraphicsSvgItem::inputMethodQuery( ::Qt::InputMethodQuery a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[17]),sipPySelf,NULL,sipName_inputMethodQuery);

    if (!sipMeth)
        return  ::QGraphicsSvgItem::inputMethodQuery(a0);

    extern  ::QVariant sipVH_QtSvg_14(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::Qt::InputMethodQuery);

    return sipVH_QtSvg_14(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsSvgItem::inputMethodEvent( ::QInputMethodEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[18],sipPySelf,NULL,sipName_inputMethodEvent);

    if (!sipMeth)
    {
         ::QGraphicsSvgItem::inputMethodEvent(a0);
        return;
    }

    extern void sipVH_QtSvg_13(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QInputMethodEvent*);

    sipVH_QtSvg_13(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsSvgItem::hoverMoveEvent( ::QGraphicsSceneHoverEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[19],sipPySelf,NULL,sipName_hoverMoveEvent);

    if (!sipMeth)
    {
         ::QGraphicsSvgItem::hoverMoveEvent(a0);
        return;
    }

    extern void sipVH_QtSvg_12(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneHoverEvent*);

    sipVH_QtSvg_12(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsSvgItem::hoverLeaveEvent( ::QGraphicsSceneHoverEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[20],sipPySelf,NULL,sipName_hoverLeaveEvent);

    if (!sipMeth)
    {
         ::QGraphicsSvgItem::hoverLeaveEvent(a0);
        return;
    }

    extern void sipVH_QtSvg_12(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneHoverEvent*);

    sipVH_QtSvg_12(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsSvgItem::hoverEnterEvent( ::QGraphicsSceneHoverEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[21],sipPySelf,NULL,sipName_hoverEnterEvent);

    if (!sipMeth)
    {
         ::QGraphicsSvgItem::hoverEnterEvent(a0);
        return;
    }

    extern void sipVH_QtSvg_12(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneHoverEvent*);

    sipVH_QtSvg_12(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsSvgItem::focusOutEvent( ::QFocusEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[22],sipPySelf,NULL,sipName_focusOutEvent);

    if (!sipMeth)
    {
         ::QGraphicsSvgItem::focusOutEvent(a0);
        return;
    }

    extern void sipVH_QtSvg_11(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QFocusEvent*);

    sipVH_QtSvg_11(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsSvgItem::focusInEvent( ::QFocusEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[23],sipPySelf,NULL,sipName_focusInEvent);

    if (!sipMeth)
    {
         ::QGraphicsSvgItem::focusInEvent(a0);
        return;
    }

    extern void sipVH_QtSvg_11(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QFocusEvent*);

    sipVH_QtSvg_11(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsSvgItem::dropEvent( ::QGraphicsSceneDragDropEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[24],sipPySelf,NULL,sipName_dropEvent);

    if (!sipMeth)
    {
         ::QGraphicsSvgItem::dropEvent(a0);
        return;
    }

    extern void sipVH_QtSvg_10(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneDragDropEvent*);

    sipVH_QtSvg_10(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsSvgItem::dragMoveEvent( ::QGraphicsSceneDragDropEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[25],sipPySelf,NULL,sipName_dragMoveEvent);

    if (!sipMeth)
    {
         ::QGraphicsSvgItem::dragMoveEvent(a0);
        return;
    }

    extern void sipVH_QtSvg_10(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneDragDropEvent*);

    sipVH_QtSvg_10(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsSvgItem::dragLeaveEvent( ::QGraphicsSceneDragDropEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[26],sipPySelf,NULL,sipName_dragLeaveEvent);

    if (!sipMeth)
    {
         ::QGraphicsSvgItem::dragLeaveEvent(a0);
        return;
    }

    extern void sipVH_QtSvg_10(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneDragDropEvent*);

    sipVH_QtSvg_10(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsSvgItem::dragEnterEvent( ::QGraphicsSceneDragDropEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[27],sipPySelf,NULL,sipName_dragEnterEvent);

    if (!sipMeth)
    {
         ::QGraphicsSvgItem::dragEnterEvent(a0);
        return;
    }

    extern void sipVH_QtSvg_10(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneDragDropEvent*);

    sipVH_QtSvg_10(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsSvgItem::contextMenuEvent( ::QGraphicsSceneContextMenuEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[28],sipPySelf,NULL,sipName_contextMenuEvent);

    if (!sipMeth)
    {
         ::QGraphicsSvgItem::contextMenuEvent(a0);
        return;
    }

    extern void sipVH_QtSvg_9(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneContextMenuEvent*);

    sipVH_QtSvg_9(sipGILState, 0, sipPySelf, sipMeth, a0);
}

int sipQGraphicsSvgItem::type() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[29]),sipPySelf,NULL,sipName_type);

    if (!sipMeth)
        return  ::QGraphicsSvgItem::type();

    extern int sipVH_QtSvg_8(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtSvg_8(sipGILState, 0, sipPySelf, sipMeth);
}

void sipQGraphicsSvgItem::paint( ::QPainter*a0,const  ::QStyleOptionGraphicsItem*a1, ::QWidget*a2)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[30],sipPySelf,NULL,sipName_paint);

    if (!sipMeth)
    {
         ::QGraphicsSvgItem::paint(a0,a1,a2);
        return;
    }

    extern void sipVH_QtSvg_7(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QPainter*,const  ::QStyleOptionGraphicsItem*, ::QWidget*);

    sipVH_QtSvg_7(sipGILState, 0, sipPySelf, sipMeth, a0, a1, a2);
}

 ::QPainterPath sipQGraphicsSvgItem::opaqueArea() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[31]),sipPySelf,NULL,sipName_opaqueArea);

    if (!sipMeth)
        return  ::QGraphicsSvgItem::opaqueArea();

    extern  ::QPainterPath sipVH_QtSvg_2(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtSvg_2(sipGILState, 0, sipPySelf, sipMeth);
}

bool sipQGraphicsSvgItem::isObscuredBy(const  ::QGraphicsItem*a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[32]),sipPySelf,NULL,sipName_isObscuredBy);

    if (!sipMeth)
        return  ::QGraphicsSvgItem::isObscuredBy(a0);

    extern bool sipVH_QtSvg_6(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QGraphicsItem*);

    return sipVH_QtSvg_6(sipGILState, 0, sipPySelf, sipMeth, a0);
}

bool sipQGraphicsSvgItem::collidesWithPath(const  ::QPainterPath& a0, ::Qt::ItemSelectionMode a1) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[33]),sipPySelf,NULL,sipName_collidesWithPath);

    if (!sipMeth)
        return  ::QGraphicsSvgItem::collidesWithPath(a0,a1);

    extern bool sipVH_QtSvg_5(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QPainterPath&, ::Qt::ItemSelectionMode);

    return sipVH_QtSvg_5(sipGILState, 0, sipPySelf, sipMeth, a0, a1);
}

bool sipQGraphicsSvgItem::collidesWithItem(const  ::QGraphicsItem*a0, ::Qt::ItemSelectionMode a1) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[34]),sipPySelf,NULL,sipName_collidesWithItem);

    if (!sipMeth)
        return  ::QGraphicsSvgItem::collidesWithItem(a0,a1);

    extern bool sipVH_QtSvg_4(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QGraphicsItem*, ::Qt::ItemSelectionMode);

    return sipVH_QtSvg_4(sipGILState, 0, sipPySelf, sipMeth, a0, a1);
}

bool sipQGraphicsSvgItem::contains(const  ::QPointF& a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[35]),sipPySelf,NULL,sipName_contains);

    if (!sipMeth)
        return  ::QGraphicsSvgItem::contains(a0);

    extern bool sipVH_QtSvg_3(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QPointF&);

    return sipVH_QtSvg_3(sipGILState, 0, sipPySelf, sipMeth, a0);
}

 ::QPainterPath sipQGraphicsSvgItem::shape() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[36]),sipPySelf,NULL,sipName_shape);

    if (!sipMeth)
        return  ::QGraphicsSvgItem::shape();

    extern  ::QPainterPath sipVH_QtSvg_2(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtSvg_2(sipGILState, 0, sipPySelf, sipMeth);
}

 ::QRectF sipQGraphicsSvgItem::boundingRect() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[37]),sipPySelf,NULL,sipName_boundingRect);

    if (!sipMeth)
        return  ::QGraphicsSvgItem::boundingRect();

    extern  ::QRectF sipVH_QtSvg_1(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtSvg_1(sipGILState, 0, sipPySelf, sipMeth);
}

void sipQGraphicsSvgItem::advance(int a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[38],sipPySelf,NULL,sipName_advance);

    if (!sipMeth)
    {
         ::QGraphicsSvgItem::advance(a0);
        return;
    }

    extern void sipVH_QtSvg_0(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, int);

    sipVH_QtSvg_0(sipGILState, 0, sipPySelf, sipMeth, a0);
}


PyDoc_STRVAR(doc_QGraphicsSvgItem_setSharedRenderer, "setSharedRenderer(self, QSvgRenderer)");

extern "C" {static PyObject *meth_QGraphicsSvgItem_setSharedRenderer(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsSvgItem_setSharedRenderer(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::QSvgRenderer* a0;
        PyObject *a0Keep;
         ::QGraphicsSvgItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B@J8", &sipSelf, sipType_QGraphicsSvgItem, &sipCpp, &a0Keep, sipType_QSvgRenderer, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setSharedRenderer(a0);
            Py_END_ALLOW_THREADS

            sipKeepReference(sipSelf, -2, a0Keep);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsSvgItem, sipName_setSharedRenderer, doc_QGraphicsSvgItem_setSharedRenderer);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsSvgItem_renderer, "renderer(self) -> QSvgRenderer");

extern "C" {static PyObject *meth_QGraphicsSvgItem_renderer(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsSvgItem_renderer(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QGraphicsSvgItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsSvgItem, &sipCpp))
        {
             ::QSvgRenderer*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->renderer();
            Py_END_ALLOW_THREADS

            return sipConvertFromType(sipRes,sipType_QSvgRenderer,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsSvgItem, sipName_renderer, doc_QGraphicsSvgItem_renderer);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsSvgItem_setElementId, "setElementId(self, str)");

extern "C" {static PyObject *meth_QGraphicsSvgItem_setElementId(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsSvgItem_setElementId(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QString* a0;
        int a0State = 0;
         ::QGraphicsSvgItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QGraphicsSvgItem, &sipCpp, sipType_QString,&a0, &a0State))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setElementId(*a0);
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::QString *>(a0),sipType_QString,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsSvgItem, sipName_setElementId, doc_QGraphicsSvgItem_setElementId);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsSvgItem_elementId, "elementId(self) -> str");

extern "C" {static PyObject *meth_QGraphicsSvgItem_elementId(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsSvgItem_elementId(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QGraphicsSvgItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsSvgItem, &sipCpp))
        {
             ::QString*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::QString(sipCpp->elementId());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QString,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsSvgItem, sipName_elementId, doc_QGraphicsSvgItem_elementId);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsSvgItem_setCachingEnabled, "setCachingEnabled(self, bool)");

extern "C" {static PyObject *meth_QGraphicsSvgItem_setCachingEnabled(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsSvgItem_setCachingEnabled(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        bool a0;
         ::QGraphicsSvgItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bb", &sipSelf, sipType_QGraphicsSvgItem, &sipCpp, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setCachingEnabled(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsSvgItem, sipName_setCachingEnabled, doc_QGraphicsSvgItem_setCachingEnabled);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsSvgItem_isCachingEnabled, "isCachingEnabled(self) -> bool");

extern "C" {static PyObject *meth_QGraphicsSvgItem_isCachingEnabled(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsSvgItem_isCachingEnabled(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QGraphicsSvgItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsSvgItem, &sipCpp))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->isCachingEnabled();
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsSvgItem, sipName_isCachingEnabled, doc_QGraphicsSvgItem_isCachingEnabled);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsSvgItem_setMaximumCacheSize, "setMaximumCacheSize(self, QSize)");

extern "C" {static PyObject *meth_QGraphicsSvgItem_setMaximumCacheSize(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsSvgItem_setMaximumCacheSize(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QSize* a0;
         ::QGraphicsSvgItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsSvgItem, &sipCpp, sipType_QSize, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setMaximumCacheSize(*a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsSvgItem, sipName_setMaximumCacheSize, doc_QGraphicsSvgItem_setMaximumCacheSize);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsSvgItem_maximumCacheSize, "maximumCacheSize(self) -> QSize");

extern "C" {static PyObject *meth_QGraphicsSvgItem_maximumCacheSize(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsSvgItem_maximumCacheSize(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QGraphicsSvgItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsSvgItem, &sipCpp))
        {
             ::QSize*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::QSize(sipCpp->maximumCacheSize());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QSize,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsSvgItem, sipName_maximumCacheSize, doc_QGraphicsSvgItem_maximumCacheSize);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsSvgItem_boundingRect, "boundingRect(self) -> QRectF");

extern "C" {static PyObject *meth_QGraphicsSvgItem_boundingRect(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsSvgItem_boundingRect(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QGraphicsSvgItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsSvgItem, &sipCpp))
        {
             ::QRectF*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::QRectF((sipSelfWasArg ? sipCpp-> ::QGraphicsSvgItem::boundingRect() : sipCpp->boundingRect()));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QRectF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsSvgItem, sipName_boundingRect, doc_QGraphicsSvgItem_boundingRect);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsSvgItem_paint, "paint(self, QPainter, QStyleOptionGraphicsItem, widget: QWidget = None)");

extern "C" {static PyObject *meth_QGraphicsSvgItem_paint(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsSvgItem_paint(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QPainter* a0;
        const  ::QStyleOptionGraphicsItem* a1;
         ::QWidget* a2 = 0;
         ::QGraphicsSvgItem *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            NULL,
            sipName_widget,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BJ8J8|J8", &sipSelf, sipType_QGraphicsSvgItem, &sipCpp, sipType_QPainter, &a0, sipType_QStyleOptionGraphicsItem, &a1, sipType_QWidget, &a2))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp-> ::QGraphicsSvgItem::paint(a0,a1,a2) : sipCpp->paint(a0,a1,a2));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsSvgItem, sipName_paint, doc_QGraphicsSvgItem_paint);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsSvgItem_type, "type(self) -> int");

extern "C" {static PyObject *meth_QGraphicsSvgItem_type(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsSvgItem_type(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QGraphicsSvgItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsSvgItem, &sipCpp))
        {
            int sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = (sipSelfWasArg ? sipCpp-> ::QGraphicsSvgItem::type() : sipCpp->type());
            Py_END_ALLOW_THREADS

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsSvgItem, sipName_type, doc_QGraphicsSvgItem_type);

    return NULL;
}


/* Cast a pointer to a type somewhere in its inheritance hierarchy. */
extern "C" {static void *cast_QGraphicsSvgItem(void *, const sipTypeDef *);}
static void *cast_QGraphicsSvgItem(void *sipCppV, const sipTypeDef *targetType)
{
     ::QGraphicsSvgItem *sipCpp = reinterpret_cast< ::QGraphicsSvgItem *>(sipCppV);

    if (targetType == sipType_QGraphicsObject)
        return static_cast< ::QGraphicsObject *>(sipCpp);

    if (targetType == sipType_QObject)
        return static_cast< ::QObject *>(sipCpp);

    if (targetType == sipType_QGraphicsItem)
        return static_cast< ::QGraphicsItem *>(sipCpp);

    return sipCppV;
}


/* Call the instance's destructor. */
extern "C" {static void release_QGraphicsSvgItem(void *, int);}
static void release_QGraphicsSvgItem(void *sipCppV, int)
{
     ::QGraphicsSvgItem *sipCpp = reinterpret_cast< ::QGraphicsSvgItem *>(sipCppV);

    Py_BEGIN_ALLOW_THREADS

    if (QThread::currentThread() == sipCpp->thread())
        delete sipCpp;
    else
        sipCpp->deleteLater();

    Py_END_ALLOW_THREADS
}


extern "C" {static void dealloc_QGraphicsSvgItem(sipSimpleWrapper *);}
static void dealloc_QGraphicsSvgItem(sipSimpleWrapper *sipSelf)
{
    if (sipIsDerivedClass(sipSelf))
        reinterpret_cast<sipQGraphicsSvgItem *>(sipGetAddress(sipSelf))->sipPySelf = NULL;

    if (sipIsOwnedByPython(sipSelf))
    {
        release_QGraphicsSvgItem(sipGetAddress(sipSelf), sipIsDerivedClass(sipSelf));
    }
}


extern "C" {static void *init_type_QGraphicsSvgItem(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_QGraphicsSvgItem(sipSimpleWrapper *sipSelf, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **sipOwner, PyObject **sipParseErr)
{
    sipQGraphicsSvgItem *sipCpp = 0;

    {
         ::QGraphicsItem* a0 = 0;

        static const char *sipKwdList[] = {
            sipName_parent,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "|JH", sipType_QGraphicsItem, &a0, sipOwner))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp = new sipQGraphicsSvgItem(a0);
            Py_END_ALLOW_THREADS

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    {
        const  ::QString* a0;
        int a0State = 0;
         ::QGraphicsItem* a1 = 0;

        static const char *sipKwdList[] = {
            NULL,
            sipName_parent,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "J1|JH", sipType_QString,&a0, &a0State, sipType_QGraphicsItem, &a1, sipOwner))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp = new sipQGraphicsSvgItem(*a0,a1);
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::QString *>(a0),sipType_QString,a0State);

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    return NULL;
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_QGraphicsSvgItem[] = {{11, 1, 1}};


static PyMethodDef methods_QGraphicsSvgItem[] = {
    {SIP_MLNAME_CAST(sipName_boundingRect), meth_QGraphicsSvgItem_boundingRect, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsSvgItem_boundingRect)},
    {SIP_MLNAME_CAST(sipName_elementId), meth_QGraphicsSvgItem_elementId, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsSvgItem_elementId)},
    {SIP_MLNAME_CAST(sipName_isCachingEnabled), meth_QGraphicsSvgItem_isCachingEnabled, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsSvgItem_isCachingEnabled)},
    {SIP_MLNAME_CAST(sipName_maximumCacheSize), meth_QGraphicsSvgItem_maximumCacheSize, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsSvgItem_maximumCacheSize)},
    {SIP_MLNAME_CAST(sipName_paint), (PyCFunction)meth_QGraphicsSvgItem_paint, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QGraphicsSvgItem_paint)},
    {SIP_MLNAME_CAST(sipName_renderer), meth_QGraphicsSvgItem_renderer, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsSvgItem_renderer)},
    {SIP_MLNAME_CAST(sipName_setCachingEnabled), meth_QGraphicsSvgItem_setCachingEnabled, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsSvgItem_setCachingEnabled)},
    {SIP_MLNAME_CAST(sipName_setElementId), meth_QGraphicsSvgItem_setElementId, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsSvgItem_setElementId)},
    {SIP_MLNAME_CAST(sipName_setMaximumCacheSize), meth_QGraphicsSvgItem_setMaximumCacheSize, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsSvgItem_setMaximumCacheSize)},
    {SIP_MLNAME_CAST(sipName_setSharedRenderer), meth_QGraphicsSvgItem_setSharedRenderer, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsSvgItem_setSharedRenderer)},
    {SIP_MLNAME_CAST(sipName_type), meth_QGraphicsSvgItem_type, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsSvgItem_type)}
};

PyDoc_STRVAR(doc_QGraphicsSvgItem, "\1QGraphicsSvgItem(parent: QGraphicsItem = None)\n"
    "QGraphicsSvgItem(str, parent: QGraphicsItem = None)");


static pyqt4ClassPluginDef plugin_QGraphicsSvgItem = {
    & ::QGraphicsSvgItem::staticMetaObject,
    0,
    0
};


sipClassTypeDef sipTypeDef_QtSvg_QGraphicsSvgItem = {
    {
        -1,
        0,
        0,
        SIP_TYPE_SCC|SIP_TYPE_CLASS,
        sipNameNr_QGraphicsSvgItem,
        {0},
        &plugin_QGraphicsSvgItem
    },
    {
        sipNameNr_QGraphicsSvgItem,
        {0, 0, 1},
        11, methods_QGraphicsSvgItem,
        0, 0,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    doc_QGraphicsSvgItem,
    -1,
    -1,
    supers_QGraphicsSvgItem,
    0,
    init_type_QGraphicsSvgItem,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_QGraphicsSvgItem,
    0,
    0,
    0,
    release_QGraphicsSvgItem,
    cast_QGraphicsSvgItem,
    0,
    0,
    0,
    0,
    0,
    0
};
