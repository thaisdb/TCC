/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.19.2
 *
 * Copyright (c) 2016 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt4.
 * 
 * This file may be used under the terms of the GNU General Public License
 * version 3.0 as published by the Free Software Foundation and appearing in
 * the file LICENSE included in the packaging of this file.  Please review the
 * following information to ensure the GNU General Public License version 3.0
 * requirements will be met: http://www.gnu.org/copyleft/gpl.html.
 * 
 * If you do not wish to use this file under the terms of the GPL version 3.0
 * then you may purchase a commercial license.  For more information contact
 * info@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtCore.h"

#line 171 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtCore/qobjectdefs.sip"
#include <qobjectdefs.h>
#line 29 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtCore/sipQtCoreQGenericReturnArgument.cpp"



/* Call the instance's destructor. */
extern "C" {static void release_QGenericReturnArgument(void *, int);}
static void release_QGenericReturnArgument(void *sipCppV, int)
{
    Py_BEGIN_ALLOW_THREADS

    delete reinterpret_cast< ::QGenericReturnArgument *>(sipCppV);

    Py_END_ALLOW_THREADS
}


extern "C" {static void dealloc_QGenericReturnArgument(sipSimpleWrapper *);}
static void dealloc_QGenericReturnArgument(sipSimpleWrapper *sipSelf)
{
    if (sipIsOwnedByPython(sipSelf))
    {
        release_QGenericReturnArgument(sipGetAddress(sipSelf), 0);
    }
}


static pyqt4ClassPluginDef plugin_QGenericReturnArgument = {
    0,
    0,
    0
};


sipClassTypeDef sipTypeDef_QtCore_QGenericReturnArgument = {
    {
        -1,
        0,
        0,
        SIP_TYPE_CLASS,
        sipNameNr_QGenericReturnArgument,
        {0},
        &plugin_QGenericReturnArgument
    },
    {
        sipNameNr_QGenericReturnArgument,
        {0, 0, 1},
        0, 0,
        0, 0,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    0,
    sipNameNr_PyQt4_QtCore_pyqtWrapperType,
    sipNameNr_sip_simplewrapper,
    0,
    0,
    0,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_QGenericReturnArgument,
    0,
    0,
    0,
    release_QGenericReturnArgument,
    0,
    0,
    0,
    0,
    0,
    0,
    0
};
