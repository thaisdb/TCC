/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.19.2
 *
 * Copyright (c) 2016 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt4.
 * 
 * This file may be used under the terms of the GNU General Public License
 * version 3.0 as published by the Free Software Foundation and appearing in
 * the file LICENSE included in the packaging of this file.  Please review the
 * following information to ensure the GNU General Public License version 3.0
 * requirements will be met: http://www.gnu.org/copyleft/gpl.html.
 * 
 * If you do not wish to use this file under the terms of the GPL version 3.0
 * then you may purchase a commercial license.  For more information contact
 * info@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtHelp.h"

#line 28 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtHelp/qhelpindexwidget.sip"
#include <qhelpindexwidget.h>
#line 29 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtHelp/sipQtHelpQHelpIndexModel.cpp"

#line 28 "sip/QtCore/qmap.sip"
#include <qmap.h>
#line 33 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtHelp/sipQtHelpQHelpIndexModel.cpp"
#line 68 "sip/QtCore/qstring.sip"
#include <qstring.h>
#line 36 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtHelp/sipQtHelpQHelpIndexModel.cpp"
#line 98 "sip/QtCore/qurl.sip"
#include <qurl.h>
#line 39 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtHelp/sipQtHelpQHelpIndexModel.cpp"
#line 27 "sip/QtCore/qstring.sip"
#include <qstring.h>
#line 42 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtHelp/sipQtHelpQHelpIndexModel.cpp"
#line 26 "sip/QtCore/qabstractitemmodel.sip"
#include <qabstractitemmodel.h>
#line 45 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtHelp/sipQtHelpQHelpIndexModel.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 48 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtHelp/sipQtHelpQHelpIndexModel.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 51 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtHelp/sipQtHelpQHelpIndexModel.cpp"
#line 27 "sip/QtCore/qstringlist.sip"
#include <qstringlist.h>
#line 54 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtHelp/sipQtHelpQHelpIndexModel.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 57 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtHelp/sipQtHelpQHelpIndexModel.cpp"
#line 265 "sip/QtCore/qvariant.sip"
#include <qvariant.h>
#line 60 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtHelp/sipQtHelpQHelpIndexModel.cpp"
#line 26 "sip/QtCore/qmimedata.sip"
#include <qmimedata.h>
#line 63 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtHelp/sipQtHelpQHelpIndexModel.cpp"
#line 139 "sip/QtCore/qhash.sip"
#include <qhash.h>
#line 66 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtHelp/sipQtHelpQHelpIndexModel.cpp"
#line 32 "sip/QtCore/qbytearray.sip"
#include <qbytearray.h>
#line 69 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtHelp/sipQtHelpQHelpIndexModel.cpp"
#line 28 "sip/QtCore/qlist.sip"
#include <qlist.h>
#line 72 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtHelp/sipQtHelpQHelpIndexModel.cpp"
#line 26 "sip/QtCore/qdatastream.sip"
#include <qdatastream.h>
#line 75 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtHelp/sipQtHelpQHelpIndexModel.cpp"
#line 26 "sip/QtCore/qsize.sip"
#include <qsize.h>
#line 78 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtHelp/sipQtHelpQHelpIndexModel.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 81 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtHelp/sipQtHelpQHelpIndexModel.cpp"
#line 139 "sip/QtCore/qmap.sip"
#include <qmap.h>
#line 84 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtHelp/sipQtHelpQHelpIndexModel.cpp"
#line 26 "sip/QtCore/qvariant.sip"
#include <qvariant.h>
#line 87 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtHelp/sipQtHelpQHelpIndexModel.cpp"
#line 26 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 90 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtHelp/sipQtHelpQHelpIndexModel.cpp"
#line 368 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 93 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtHelp/sipQtHelpQHelpIndexModel.cpp"
#line 351 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 96 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtHelp/sipQtHelpQHelpIndexModel.cpp"
#line 29 "sip/QtCore/qobject.sip"
#include <qobject.h>
#line 99 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtHelp/sipQtHelpQHelpIndexModel.cpp"
#line 28 "sip/QtCore/qlist.sip"
#include <qlist.h>
#line 102 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtHelp/sipQtHelpQHelpIndexModel.cpp"
#line 115 "sip/QtCore/qlist.sip"
#include <qlist.h>
#line 105 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtHelp/sipQtHelpQHelpIndexModel.cpp"
#line 26 "sip/QtCore/qthread.sip"
#include <qthread.h>
#line 108 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtHelp/sipQtHelpQHelpIndexModel.cpp"
#line 26 "sip/QtCore/qregexp.sip"
#include <qregexp.h>
#line 111 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtHelp/sipQtHelpQHelpIndexModel.cpp"
#line 26 "sip/QtCore/qobjectdefs.sip"
#include <qobjectdefs.h>
#line 114 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtHelp/sipQtHelpQHelpIndexModel.cpp"


PyDoc_STRVAR(doc_QHelpIndexModel_createIndex, "createIndex(self, str)");

extern "C" {static PyObject *meth_QHelpIndexModel_createIndex(PyObject *, PyObject *);}
static PyObject *meth_QHelpIndexModel_createIndex(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QString* a0;
        int a0State = 0;
         ::QHelpIndexModel *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QHelpIndexModel, &sipCpp, sipType_QString,&a0, &a0State))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->createIndex(*a0);
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::QString *>(a0),sipType_QString,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QHelpIndexModel, sipName_createIndex, doc_QHelpIndexModel_createIndex);

    return NULL;
}


PyDoc_STRVAR(doc_QHelpIndexModel_filter, "filter(self, str, wildcard: str = '') -> QModelIndex");

extern "C" {static PyObject *meth_QHelpIndexModel_filter(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QHelpIndexModel_filter(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QString* a0;
        int a0State = 0;
        const  ::QString& a1def = QString();
        const  ::QString* a1 = &a1def;
        int a1State = 0;
         ::QHelpIndexModel *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            sipName_wildcard,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BJ1|J1", &sipSelf, sipType_QHelpIndexModel, &sipCpp, sipType_QString,&a0, &a0State, sipType_QString,&a1, &a1State))
        {
             ::QModelIndex*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::QModelIndex(sipCpp->filter(*a0,*a1));
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::QString *>(a0),sipType_QString,a0State);
            sipReleaseType(const_cast< ::QString *>(a1),sipType_QString,a1State);

            return sipConvertFromNewType(sipRes,sipType_QModelIndex,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QHelpIndexModel, sipName_filter, doc_QHelpIndexModel_filter);

    return NULL;
}


PyDoc_STRVAR(doc_QHelpIndexModel_linksForKeyword, "linksForKeyword(self, str) -> Dict[QString, QUrl]");

extern "C" {static PyObject *meth_QHelpIndexModel_linksForKeyword(PyObject *, PyObject *);}
static PyObject *meth_QHelpIndexModel_linksForKeyword(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QString* a0;
        int a0State = 0;
        const  ::QHelpIndexModel *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QHelpIndexModel, &sipCpp, sipType_QString,&a0, &a0State))
        {
            QMap< ::QString, ::QUrl>*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QMap< ::QString, ::QUrl>(sipCpp->linksForKeyword(*a0));
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::QString *>(a0),sipType_QString,a0State);

            return sipConvertFromNewType(sipRes,sipType_QMap_0100QString_0100QUrl,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QHelpIndexModel, sipName_linksForKeyword, doc_QHelpIndexModel_linksForKeyword);

    return NULL;
}


PyDoc_STRVAR(doc_QHelpIndexModel_isCreatingIndex, "isCreatingIndex(self) -> bool");

extern "C" {static PyObject *meth_QHelpIndexModel_isCreatingIndex(PyObject *, PyObject *);}
static PyObject *meth_QHelpIndexModel_isCreatingIndex(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QHelpIndexModel *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QHelpIndexModel, &sipCpp))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->isCreatingIndex();
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QHelpIndexModel, sipName_isCreatingIndex, doc_QHelpIndexModel_isCreatingIndex);

    return NULL;
}


/* Cast a pointer to a type somewhere in its inheritance hierarchy. */
extern "C" {static void *cast_QHelpIndexModel(void *, const sipTypeDef *);}
static void *cast_QHelpIndexModel(void *sipCppV, const sipTypeDef *targetType)
{
     ::QHelpIndexModel *sipCpp = reinterpret_cast< ::QHelpIndexModel *>(sipCppV);

    if (targetType == sipType_QStringListModel)
        return static_cast< ::QStringListModel *>(sipCpp);

    if (targetType == sipType_QAbstractListModel)
        return static_cast< ::QAbstractListModel *>(sipCpp);

    if (targetType == sipType_QAbstractItemModel)
        return static_cast< ::QAbstractItemModel *>(sipCpp);

    if (targetType == sipType_QObject)
        return static_cast< ::QObject *>(sipCpp);

    return sipCppV;
}


/* Call the instance's destructor. */
extern "C" {static void release_QHelpIndexModel(void *, int);}
static void release_QHelpIndexModel(void *, int)
{
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_QHelpIndexModel[] = {{34, 1, 1}};


static PyMethodDef methods_QHelpIndexModel[] = {
    {SIP_MLNAME_CAST(sipName_createIndex), meth_QHelpIndexModel_createIndex, METH_VARARGS, SIP_MLDOC_CAST(doc_QHelpIndexModel_createIndex)},
    {SIP_MLNAME_CAST(sipName_filter), (PyCFunction)meth_QHelpIndexModel_filter, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QHelpIndexModel_filter)},
    {SIP_MLNAME_CAST(sipName_isCreatingIndex), meth_QHelpIndexModel_isCreatingIndex, METH_VARARGS, SIP_MLDOC_CAST(doc_QHelpIndexModel_isCreatingIndex)},
    {SIP_MLNAME_CAST(sipName_linksForKeyword), meth_QHelpIndexModel_linksForKeyword, METH_VARARGS, SIP_MLDOC_CAST(doc_QHelpIndexModel_linksForKeyword)}
};


/* Define this type's signals. */
static const pyqt4QtSignal signals_QHelpIndexModel[] = {
    {"indexCreated()", "\1indexCreated(self)", 0, 0},
    {"indexCreationStarted()", "\1indexCreationStarted(self)", 0, 0},
    {0, 0, 0, 0}
};


static pyqt4ClassPluginDef plugin_QHelpIndexModel = {
    & ::QHelpIndexModel::staticMetaObject,
    0,
    signals_QHelpIndexModel
};


sipClassTypeDef sipTypeDef_QtHelp_QHelpIndexModel = {
    {
        -1,
        0,
        0,
        SIP_TYPE_SCC|SIP_TYPE_CLASS,
        sipNameNr_QHelpIndexModel,
        {0},
        &plugin_QHelpIndexModel
    },
    {
        sipNameNr_QHelpIndexModel,
        {0, 0, 1},
        4, methods_QHelpIndexModel,
        0, 0,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    0,
    -1,
    -1,
    supers_QHelpIndexModel,
    0,
    0,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    0,
    0,
    0,
    0,
    release_QHelpIndexModel,
    cast_QHelpIndexModel,
    0,
    0,
    0,
    0,
    0,
    0
};
