/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.19.2
 *
 * Copyright (c) 2016 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt4.
 * 
 * This file may be used under the terms of the GNU General Public License
 * version 3.0 as published by the Free Software Foundation and appearing in
 * the file LICENSE included in the packaging of this file.  Please review the
 * following information to ensure the GNU General Public License version 3.0
 * requirements will be met: http://www.gnu.org/copyleft/gpl.html.
 * 
 * If you do not wish to use this file under the terms of the GPL version 3.0
 * then you may purchase a commercial license.  For more information contact
 * info@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtDesigner.h"

#line 26 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtDesigner/abstractformeditor.sip"
#include <abstractformeditor.h>
#line 29 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtDesigner/sipQtDesignerQDesignerFormEditorInterface.cpp"

#line 29 "sip/QtCore/qobject.sip"
#include <qobject.h>
#line 33 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtDesigner/sipQtDesignerQDesignerFormEditorInterface.cpp"
#line 26 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtDesigner/abstractactioneditor.sip"
#include <abstractactioneditor.h>
#line 36 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtDesigner/sipQtDesignerQDesignerFormEditorInterface.cpp"
#line 26 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtDesigner/abstractobjectinspector.sip"
#include <abstractobjectinspector.h>
#line 39 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtDesigner/sipQtDesignerQDesignerFormEditorInterface.cpp"
#line 26 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtDesigner/abstractpropertyeditor.sip"
#include <abstractpropertyeditor.h>
#line 42 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtDesigner/sipQtDesignerQDesignerFormEditorInterface.cpp"
#line 26 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtDesigner/abstractwidgetbox.sip"
#include <abstractwidgetbox.h>
#line 45 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtDesigner/sipQtDesignerQDesignerFormEditorInterface.cpp"
#line 26 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtDesigner/abstractformwindowmanager.sip"
#include <abstractformwindowmanager.h>
#line 48 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtDesigner/sipQtDesignerQDesignerFormEditorInterface.cpp"
#line 28 "sip/QtGui/qwidget.sip"
#include <qwidget.h>
#line 51 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtDesigner/sipQtDesignerQDesignerFormEditorInterface.cpp"
#line 26 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtDesigner/qextensionmanager.sip"
#include <qextensionmanager.h>
#line 54 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtDesigner/sipQtDesignerQDesignerFormEditorInterface.cpp"
#line 26 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 57 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtDesigner/sipQtDesignerQDesignerFormEditorInterface.cpp"
#line 368 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 60 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtDesigner/sipQtDesignerQDesignerFormEditorInterface.cpp"
#line 351 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 63 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtDesigner/sipQtDesignerQDesignerFormEditorInterface.cpp"
#line 265 "sip/QtCore/qvariant.sip"
#include <qvariant.h>
#line 66 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtDesigner/sipQtDesignerQDesignerFormEditorInterface.cpp"
#line 28 "sip/QtCore/qlist.sip"
#include <qlist.h>
#line 69 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtDesigner/sipQtDesignerQDesignerFormEditorInterface.cpp"
#line 32 "sip/QtCore/qbytearray.sip"
#include <qbytearray.h>
#line 72 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtDesigner/sipQtDesignerQDesignerFormEditorInterface.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 75 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtDesigner/sipQtDesignerQDesignerFormEditorInterface.cpp"
#line 115 "sip/QtCore/qlist.sip"
#include <qlist.h>
#line 78 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtDesigner/sipQtDesignerQDesignerFormEditorInterface.cpp"
#line 26 "sip/QtCore/qthread.sip"
#include <qthread.h>
#line 81 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtDesigner/sipQtDesignerQDesignerFormEditorInterface.cpp"
#line 27 "sip/QtCore/qstring.sip"
#include <qstring.h>
#line 84 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtDesigner/sipQtDesignerQDesignerFormEditorInterface.cpp"
#line 26 "sip/QtCore/qregexp.sip"
#include <qregexp.h>
#line 87 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtDesigner/sipQtDesignerQDesignerFormEditorInterface.cpp"
#line 26 "sip/QtCore/qobjectdefs.sip"
#include <qobjectdefs.h>
#line 90 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtDesigner/sipQtDesignerQDesignerFormEditorInterface.cpp"


class sipQDesignerFormEditorInterface : public  ::QDesignerFormEditorInterface
{
public:
    sipQDesignerFormEditorInterface( ::QObject*);
    virtual ~sipQDesignerFormEditorInterface();

    int qt_metacall(QMetaObject::Call,int,void **);
    void *qt_metacast(const char *);
    const QMetaObject *metaObject() const;

    /*
     * There is a protected method for every virtual method visible from
     * this class.
     */
protected:
    bool event( ::QEvent*);
    bool eventFilter( ::QObject*, ::QEvent*);
    void timerEvent( ::QTimerEvent*);
    void childEvent( ::QChildEvent*);
    void customEvent( ::QEvent*);
    void connectNotify(const char*);
    void disconnectNotify(const char*);

public:
    sipSimpleWrapper *sipPySelf;

private:
    sipQDesignerFormEditorInterface(const sipQDesignerFormEditorInterface &);
    sipQDesignerFormEditorInterface &operator = (const sipQDesignerFormEditorInterface &);

    char sipPyMethods[7];
};

sipQDesignerFormEditorInterface::sipQDesignerFormEditorInterface( ::QObject*a0):  ::QDesignerFormEditorInterface(a0), sipPySelf(0)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQDesignerFormEditorInterface::~sipQDesignerFormEditorInterface()
{
    sipCommonDtor(sipPySelf);
}

const QMetaObject *sipQDesignerFormEditorInterface::metaObject() const
{
    return sip_QtDesigner_qt_metaobject(sipPySelf,sipType_QDesignerFormEditorInterface);
}

int sipQDesignerFormEditorInterface::qt_metacall(QMetaObject::Call _c,int _id,void **_a)
{
    _id =  ::QDesignerFormEditorInterface::qt_metacall(_c,_id,_a);

    if (_id >= 0)
        _id = sip_QtDesigner_qt_metacall(sipPySelf,sipType_QDesignerFormEditorInterface,_c,_id,_a);

    return _id;
}

void *sipQDesignerFormEditorInterface::qt_metacast(const char *_clname)
{
    return (sip_QtDesigner_qt_metacast(sipPySelf, sipType_QDesignerFormEditorInterface, _clname)) ? this :  ::QDesignerFormEditorInterface::qt_metacast(_clname);
}

bool sipQDesignerFormEditorInterface::event( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[0],sipPySelf,NULL,sipName_event);

    if (!sipMeth)
        return  ::QDesignerFormEditorInterface::event(a0);

    extern bool sipVH_QtDesigner_30(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    return sipVH_QtDesigner_30(sipGILState, 0, sipPySelf, sipMeth, a0);
}

bool sipQDesignerFormEditorInterface::eventFilter( ::QObject*a0, ::QEvent*a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[1],sipPySelf,NULL,sipName_eventFilter);

    if (!sipMeth)
        return  ::QDesignerFormEditorInterface::eventFilter(a0,a1);

    extern bool sipVH_QtDesigner_31(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QObject*, ::QEvent*);

    return sipVH_QtDesigner_31(sipGILState, 0, sipPySelf, sipMeth, a0, a1);
}

void sipQDesignerFormEditorInterface::timerEvent( ::QTimerEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[2],sipPySelf,NULL,sipName_timerEvent);

    if (!sipMeth)
    {
         ::QDesignerFormEditorInterface::timerEvent(a0);
        return;
    }

    extern void sipVH_QtDesigner_32(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QTimerEvent*);

    sipVH_QtDesigner_32(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQDesignerFormEditorInterface::childEvent( ::QChildEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[3],sipPySelf,NULL,sipName_childEvent);

    if (!sipMeth)
    {
         ::QDesignerFormEditorInterface::childEvent(a0);
        return;
    }

    extern void sipVH_QtDesigner_33(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QChildEvent*);

    sipVH_QtDesigner_33(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQDesignerFormEditorInterface::customEvent( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[4],sipPySelf,NULL,sipName_customEvent);

    if (!sipMeth)
    {
         ::QDesignerFormEditorInterface::customEvent(a0);
        return;
    }

    extern void sipVH_QtDesigner_7(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    sipVH_QtDesigner_7(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQDesignerFormEditorInterface::connectNotify(const char*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[5],sipPySelf,NULL,sipName_connectNotify);

    if (!sipMeth)
    {
         ::QDesignerFormEditorInterface::connectNotify(a0);
        return;
    }

    extern void sipVH_QtDesigner_34(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const char*);

    sipVH_QtDesigner_34(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQDesignerFormEditorInterface::disconnectNotify(const char*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[6],sipPySelf,NULL,sipName_disconnectNotify);

    if (!sipMeth)
    {
         ::QDesignerFormEditorInterface::disconnectNotify(a0);
        return;
    }

    extern void sipVH_QtDesigner_34(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const char*);

    sipVH_QtDesigner_34(sipGILState, 0, sipPySelf, sipMeth, a0);
}


PyDoc_STRVAR(doc_QDesignerFormEditorInterface_extensionManager, "extensionManager(self) -> QExtensionManager");

extern "C" {static PyObject *meth_QDesignerFormEditorInterface_extensionManager(PyObject *, PyObject *);}
static PyObject *meth_QDesignerFormEditorInterface_extensionManager(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QDesignerFormEditorInterface *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QDesignerFormEditorInterface, &sipCpp))
        {
             ::QExtensionManager*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->extensionManager();
            Py_END_ALLOW_THREADS

            return sipConvertFromType(sipRes,sipType_QExtensionManager,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QDesignerFormEditorInterface, sipName_extensionManager, doc_QDesignerFormEditorInterface_extensionManager);

    return NULL;
}


PyDoc_STRVAR(doc_QDesignerFormEditorInterface_topLevel, "topLevel(self) -> QWidget");

extern "C" {static PyObject *meth_QDesignerFormEditorInterface_topLevel(PyObject *, PyObject *);}
static PyObject *meth_QDesignerFormEditorInterface_topLevel(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QDesignerFormEditorInterface *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QDesignerFormEditorInterface, &sipCpp))
        {
             ::QWidget*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->topLevel();
            Py_END_ALLOW_THREADS

            return sipConvertFromType(sipRes,sipType_QWidget,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QDesignerFormEditorInterface, sipName_topLevel, doc_QDesignerFormEditorInterface_topLevel);

    return NULL;
}


PyDoc_STRVAR(doc_QDesignerFormEditorInterface_widgetBox, "widgetBox(self) -> QDesignerWidgetBoxInterface");

extern "C" {static PyObject *meth_QDesignerFormEditorInterface_widgetBox(PyObject *, PyObject *);}
static PyObject *meth_QDesignerFormEditorInterface_widgetBox(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QDesignerFormEditorInterface *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QDesignerFormEditorInterface, &sipCpp))
        {
             ::QDesignerWidgetBoxInterface*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->widgetBox();
            Py_END_ALLOW_THREADS

            return sipConvertFromType(sipRes,sipType_QDesignerWidgetBoxInterface,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QDesignerFormEditorInterface, sipName_widgetBox, doc_QDesignerFormEditorInterface_widgetBox);

    return NULL;
}


PyDoc_STRVAR(doc_QDesignerFormEditorInterface_propertyEditor, "propertyEditor(self) -> QDesignerPropertyEditorInterface");

extern "C" {static PyObject *meth_QDesignerFormEditorInterface_propertyEditor(PyObject *, PyObject *);}
static PyObject *meth_QDesignerFormEditorInterface_propertyEditor(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QDesignerFormEditorInterface *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QDesignerFormEditorInterface, &sipCpp))
        {
             ::QDesignerPropertyEditorInterface*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->propertyEditor();
            Py_END_ALLOW_THREADS

            return sipConvertFromType(sipRes,sipType_QDesignerPropertyEditorInterface,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QDesignerFormEditorInterface, sipName_propertyEditor, doc_QDesignerFormEditorInterface_propertyEditor);

    return NULL;
}


PyDoc_STRVAR(doc_QDesignerFormEditorInterface_objectInspector, "objectInspector(self) -> QDesignerObjectInspectorInterface");

extern "C" {static PyObject *meth_QDesignerFormEditorInterface_objectInspector(PyObject *, PyObject *);}
static PyObject *meth_QDesignerFormEditorInterface_objectInspector(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QDesignerFormEditorInterface *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QDesignerFormEditorInterface, &sipCpp))
        {
             ::QDesignerObjectInspectorInterface*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->objectInspector();
            Py_END_ALLOW_THREADS

            return sipConvertFromType(sipRes,sipType_QDesignerObjectInspectorInterface,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QDesignerFormEditorInterface, sipName_objectInspector, doc_QDesignerFormEditorInterface_objectInspector);

    return NULL;
}


PyDoc_STRVAR(doc_QDesignerFormEditorInterface_formWindowManager, "formWindowManager(self) -> QDesignerFormWindowManagerInterface");

extern "C" {static PyObject *meth_QDesignerFormEditorInterface_formWindowManager(PyObject *, PyObject *);}
static PyObject *meth_QDesignerFormEditorInterface_formWindowManager(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QDesignerFormEditorInterface *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QDesignerFormEditorInterface, &sipCpp))
        {
             ::QDesignerFormWindowManagerInterface*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->formWindowManager();
            Py_END_ALLOW_THREADS

            return sipConvertFromType(sipRes,sipType_QDesignerFormWindowManagerInterface,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QDesignerFormEditorInterface, sipName_formWindowManager, doc_QDesignerFormEditorInterface_formWindowManager);

    return NULL;
}


PyDoc_STRVAR(doc_QDesignerFormEditorInterface_actionEditor, "actionEditor(self) -> QDesignerActionEditorInterface");

extern "C" {static PyObject *meth_QDesignerFormEditorInterface_actionEditor(PyObject *, PyObject *);}
static PyObject *meth_QDesignerFormEditorInterface_actionEditor(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QDesignerFormEditorInterface *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QDesignerFormEditorInterface, &sipCpp))
        {
             ::QDesignerActionEditorInterface*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->actionEditor();
            Py_END_ALLOW_THREADS

            return sipConvertFromType(sipRes,sipType_QDesignerActionEditorInterface,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QDesignerFormEditorInterface, sipName_actionEditor, doc_QDesignerFormEditorInterface_actionEditor);

    return NULL;
}


PyDoc_STRVAR(doc_QDesignerFormEditorInterface_setWidgetBox, "setWidgetBox(self, QDesignerWidgetBoxInterface)");

extern "C" {static PyObject *meth_QDesignerFormEditorInterface_setWidgetBox(PyObject *, PyObject *);}
static PyObject *meth_QDesignerFormEditorInterface_setWidgetBox(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::QDesignerWidgetBoxInterface* a0;
        PyObject *a0Keep;
         ::QDesignerFormEditorInterface *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B@J8", &sipSelf, sipType_QDesignerFormEditorInterface, &sipCpp, &a0Keep, sipType_QDesignerWidgetBoxInterface, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setWidgetBox(a0);
            Py_END_ALLOW_THREADS

            sipKeepReference(sipSelf, -2, a0Keep);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QDesignerFormEditorInterface, sipName_setWidgetBox, doc_QDesignerFormEditorInterface_setWidgetBox);

    return NULL;
}


PyDoc_STRVAR(doc_QDesignerFormEditorInterface_setPropertyEditor, "setPropertyEditor(self, QDesignerPropertyEditorInterface)");

extern "C" {static PyObject *meth_QDesignerFormEditorInterface_setPropertyEditor(PyObject *, PyObject *);}
static PyObject *meth_QDesignerFormEditorInterface_setPropertyEditor(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::QDesignerPropertyEditorInterface* a0;
        PyObject *a0Keep;
         ::QDesignerFormEditorInterface *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B@J8", &sipSelf, sipType_QDesignerFormEditorInterface, &sipCpp, &a0Keep, sipType_QDesignerPropertyEditorInterface, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setPropertyEditor(a0);
            Py_END_ALLOW_THREADS

            sipKeepReference(sipSelf, -3, a0Keep);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QDesignerFormEditorInterface, sipName_setPropertyEditor, doc_QDesignerFormEditorInterface_setPropertyEditor);

    return NULL;
}


PyDoc_STRVAR(doc_QDesignerFormEditorInterface_setObjectInspector, "setObjectInspector(self, QDesignerObjectInspectorInterface)");

extern "C" {static PyObject *meth_QDesignerFormEditorInterface_setObjectInspector(PyObject *, PyObject *);}
static PyObject *meth_QDesignerFormEditorInterface_setObjectInspector(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::QDesignerObjectInspectorInterface* a0;
        PyObject *a0Keep;
         ::QDesignerFormEditorInterface *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B@J8", &sipSelf, sipType_QDesignerFormEditorInterface, &sipCpp, &a0Keep, sipType_QDesignerObjectInspectorInterface, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setObjectInspector(a0);
            Py_END_ALLOW_THREADS

            sipKeepReference(sipSelf, -4, a0Keep);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QDesignerFormEditorInterface, sipName_setObjectInspector, doc_QDesignerFormEditorInterface_setObjectInspector);

    return NULL;
}


PyDoc_STRVAR(doc_QDesignerFormEditorInterface_setActionEditor, "setActionEditor(self, QDesignerActionEditorInterface)");

extern "C" {static PyObject *meth_QDesignerFormEditorInterface_setActionEditor(PyObject *, PyObject *);}
static PyObject *meth_QDesignerFormEditorInterface_setActionEditor(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::QDesignerActionEditorInterface* a0;
        PyObject *a0Keep;
         ::QDesignerFormEditorInterface *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B@J8", &sipSelf, sipType_QDesignerFormEditorInterface, &sipCpp, &a0Keep, sipType_QDesignerActionEditorInterface, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setActionEditor(a0);
            Py_END_ALLOW_THREADS

            sipKeepReference(sipSelf, -5, a0Keep);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QDesignerFormEditorInterface, sipName_setActionEditor, doc_QDesignerFormEditorInterface_setActionEditor);

    return NULL;
}


/* Cast a pointer to a type somewhere in its inheritance hierarchy. */
extern "C" {static void *cast_QDesignerFormEditorInterface(void *, const sipTypeDef *);}
static void *cast_QDesignerFormEditorInterface(void *sipCppV, const sipTypeDef *targetType)
{
     ::QDesignerFormEditorInterface *sipCpp = reinterpret_cast< ::QDesignerFormEditorInterface *>(sipCppV);

    if (targetType == sipType_QObject)
        return static_cast< ::QObject *>(sipCpp);

    return sipCppV;
}


/* Call the instance's destructor. */
extern "C" {static void release_QDesignerFormEditorInterface(void *, int);}
static void release_QDesignerFormEditorInterface(void *sipCppV, int)
{
     ::QDesignerFormEditorInterface *sipCpp = reinterpret_cast< ::QDesignerFormEditorInterface *>(sipCppV);

    Py_BEGIN_ALLOW_THREADS

    if (QThread::currentThread() == sipCpp->thread())
        delete sipCpp;
    else
        sipCpp->deleteLater();

    Py_END_ALLOW_THREADS
}


extern "C" {static void dealloc_QDesignerFormEditorInterface(sipSimpleWrapper *);}
static void dealloc_QDesignerFormEditorInterface(sipSimpleWrapper *sipSelf)
{
    if (sipIsDerivedClass(sipSelf))
        reinterpret_cast<sipQDesignerFormEditorInterface *>(sipGetAddress(sipSelf))->sipPySelf = NULL;

    if (sipIsOwnedByPython(sipSelf))
    {
        release_QDesignerFormEditorInterface(sipGetAddress(sipSelf), sipIsDerivedClass(sipSelf));
    }
}


extern "C" {static void *init_type_QDesignerFormEditorInterface(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_QDesignerFormEditorInterface(sipSimpleWrapper *sipSelf, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **sipOwner, PyObject **sipParseErr)
{
    sipQDesignerFormEditorInterface *sipCpp = 0;

    {
         ::QObject* a0 = 0;

        static const char *sipKwdList[] = {
            sipName_parent,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "|JH", sipType_QObject, &a0, sipOwner))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp = new sipQDesignerFormEditorInterface(a0);
            Py_END_ALLOW_THREADS

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    return NULL;
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_QDesignerFormEditorInterface[] = {{5, 0, 1}};


static PyMethodDef methods_QDesignerFormEditorInterface[] = {
    {SIP_MLNAME_CAST(sipName_actionEditor), meth_QDesignerFormEditorInterface_actionEditor, METH_VARARGS, SIP_MLDOC_CAST(doc_QDesignerFormEditorInterface_actionEditor)},
    {SIP_MLNAME_CAST(sipName_extensionManager), meth_QDesignerFormEditorInterface_extensionManager, METH_VARARGS, SIP_MLDOC_CAST(doc_QDesignerFormEditorInterface_extensionManager)},
    {SIP_MLNAME_CAST(sipName_formWindowManager), meth_QDesignerFormEditorInterface_formWindowManager, METH_VARARGS, SIP_MLDOC_CAST(doc_QDesignerFormEditorInterface_formWindowManager)},
    {SIP_MLNAME_CAST(sipName_objectInspector), meth_QDesignerFormEditorInterface_objectInspector, METH_VARARGS, SIP_MLDOC_CAST(doc_QDesignerFormEditorInterface_objectInspector)},
    {SIP_MLNAME_CAST(sipName_propertyEditor), meth_QDesignerFormEditorInterface_propertyEditor, METH_VARARGS, SIP_MLDOC_CAST(doc_QDesignerFormEditorInterface_propertyEditor)},
    {SIP_MLNAME_CAST(sipName_setActionEditor), meth_QDesignerFormEditorInterface_setActionEditor, METH_VARARGS, SIP_MLDOC_CAST(doc_QDesignerFormEditorInterface_setActionEditor)},
    {SIP_MLNAME_CAST(sipName_setObjectInspector), meth_QDesignerFormEditorInterface_setObjectInspector, METH_VARARGS, SIP_MLDOC_CAST(doc_QDesignerFormEditorInterface_setObjectInspector)},
    {SIP_MLNAME_CAST(sipName_setPropertyEditor), meth_QDesignerFormEditorInterface_setPropertyEditor, METH_VARARGS, SIP_MLDOC_CAST(doc_QDesignerFormEditorInterface_setPropertyEditor)},
    {SIP_MLNAME_CAST(sipName_setWidgetBox), meth_QDesignerFormEditorInterface_setWidgetBox, METH_VARARGS, SIP_MLDOC_CAST(doc_QDesignerFormEditorInterface_setWidgetBox)},
    {SIP_MLNAME_CAST(sipName_topLevel), meth_QDesignerFormEditorInterface_topLevel, METH_VARARGS, SIP_MLDOC_CAST(doc_QDesignerFormEditorInterface_topLevel)},
    {SIP_MLNAME_CAST(sipName_widgetBox), meth_QDesignerFormEditorInterface_widgetBox, METH_VARARGS, SIP_MLDOC_CAST(doc_QDesignerFormEditorInterface_widgetBox)}
};

PyDoc_STRVAR(doc_QDesignerFormEditorInterface, "\1QDesignerFormEditorInterface(parent: QObject = None)");


static pyqt4ClassPluginDef plugin_QDesignerFormEditorInterface = {
    & ::QDesignerFormEditorInterface::staticMetaObject,
    0,
    0
};


sipClassTypeDef sipTypeDef_QtDesigner_QDesignerFormEditorInterface = {
    {
        -1,
        0,
        0,
        SIP_TYPE_SCC|SIP_TYPE_CLASS,
        sipNameNr_QDesignerFormEditorInterface,
        {0},
        &plugin_QDesignerFormEditorInterface
    },
    {
        sipNameNr_QDesignerFormEditorInterface,
        {0, 0, 1},
        11, methods_QDesignerFormEditorInterface,
        0, 0,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    doc_QDesignerFormEditorInterface,
    -1,
    -1,
    supers_QDesignerFormEditorInterface,
    0,
    init_type_QDesignerFormEditorInterface,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_QDesignerFormEditorInterface,
    0,
    0,
    0,
    release_QDesignerFormEditorInterface,
    cast_QDesignerFormEditorInterface,
    0,
    0,
    0,
    0,
    0,
    0
};
