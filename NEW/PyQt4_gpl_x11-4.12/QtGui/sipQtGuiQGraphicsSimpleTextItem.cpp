/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.19.2
 *
 * Copyright (c) 2016 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt4.
 * 
 * This file may be used under the terms of the GNU General Public License
 * version 3.0 as published by the Free Software Foundation and appearing in
 * the file LICENSE included in the packaging of this file.  Please review the
 * following information to ensure the GNU General Public License version 3.0
 * requirements will be met: http://www.gnu.org/copyleft/gpl.html.
 * 
 * If you do not wish to use this file under the terms of the GPL version 3.0
 * then you may purchase a commercial license.  For more information contact
 * info@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtGui.h"

#line 1059 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 29 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQGraphicsSimpleTextItem.cpp"

#line 28 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 33 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQGraphicsSimpleTextItem.cpp"
#line 28 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qgraphicsscene.sip"
#include <qgraphicsscene.h>
#line 36 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQGraphicsSimpleTextItem.cpp"
#line 27 "sip/QtCore/qstring.sip"
#include <qstring.h>
#line 39 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQGraphicsSimpleTextItem.cpp"
#line 26 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qpainterpath.sip"
#include <qpainterpath.h>
#line 42 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQGraphicsSimpleTextItem.cpp"
#line 26 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qpainter.sip"
#include <qpainter.h>
#line 45 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQGraphicsSimpleTextItem.cpp"
#line 1966 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qstyleoption.sip"
#include <qstyleoption.h>
#line 48 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQGraphicsSimpleTextItem.cpp"
#line 28 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qwidget.sip"
#include <qwidget.h>
#line 51 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQGraphicsSimpleTextItem.cpp"
#line 110 "sip/QtCore/qpoint.sip"
#include <qpoint.h>
#line 54 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQGraphicsSimpleTextItem.cpp"
#line 159 "sip/QtCore/qrect.sip"
#include <qrect.h>
#line 57 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQGraphicsSimpleTextItem.cpp"
#line 26 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qfont.sip"
#include <qfont.h>
#line 60 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQGraphicsSimpleTextItem.cpp"
#line 26 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qbrush.sip"
#include <qbrush.h>
#line 63 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQGraphicsSimpleTextItem.cpp"
#line 26 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qpen.sip"
#include <qpen.h>
#line 66 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQGraphicsSimpleTextItem.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 69 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQGraphicsSimpleTextItem.cpp"
#line 115 "sip/QtCore/qlist.sip"
#include <qlist.h>
#line 72 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQGraphicsSimpleTextItem.cpp"
#line 28 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qgraphicstransform.sip"
#include <qgraphicstransform.h>
#line 75 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQGraphicsSimpleTextItem.cpp"
#line 28 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qgraphicseffect.sip"
#include <qgraphicseffect.h>
#line 78 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQGraphicsSimpleTextItem.cpp"
#line 1138 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 81 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQGraphicsSimpleTextItem.cpp"
#line 34 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qtransform.sip"
#include <qtransform.h>
#line 84 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQGraphicsSimpleTextItem.cpp"
#line 26 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qregion.sip"
#include <qregion.h>
#line 87 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQGraphicsSimpleTextItem.cpp"
#line 26 "sip/QtCore/qsize.sip"
#include <qsize.h>
#line 90 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQGraphicsSimpleTextItem.cpp"
#line 115 "sip/QtCore/qlist.sip"
#include <qlist.h>
#line 93 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQGraphicsSimpleTextItem.cpp"
#line 182 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qgraphicswidget.sip"
#include <qgraphicswidget.h>
#line 96 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQGraphicsSimpleTextItem.cpp"
#line 78 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 99 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQGraphicsSimpleTextItem.cpp"
#line 26 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 102 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQGraphicsSimpleTextItem.cpp"
#line 48 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 105 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQGraphicsSimpleTextItem.cpp"
#line 474 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 108 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQGraphicsSimpleTextItem.cpp"
#line 265 "sip/QtCore/qvariant.sip"
#include <qvariant.h>
#line 111 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQGraphicsSimpleTextItem.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 114 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQGraphicsSimpleTextItem.cpp"
#line 647 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 117 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQGraphicsSimpleTextItem.cpp"
#line 135 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 120 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQGraphicsSimpleTextItem.cpp"
#line 505 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 123 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQGraphicsSimpleTextItem.cpp"
#line 188 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 126 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQGraphicsSimpleTextItem.cpp"
#line 105 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 129 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQGraphicsSimpleTextItem.cpp"
#line 350 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qpolygon.sip"
#include <qpolygon.h>
#line 132 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQGraphicsSimpleTextItem.cpp"
#line 30 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qmatrix.sip"
#include <qmatrix.h>
#line 135 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQGraphicsSimpleTextItem.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 138 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQGraphicsSimpleTextItem.cpp"
#line 26 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qcursor.sip"
#include <qcursor.h>
#line 141 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQGraphicsSimpleTextItem.cpp"
#line 28 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 144 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQGraphicsSimpleTextItem.cpp"
#line 1098 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 147 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQGraphicsSimpleTextItem.cpp"


class sipQGraphicsSimpleTextItem : public  ::QGraphicsSimpleTextItem
{
public:
    sipQGraphicsSimpleTextItem( ::QGraphicsItem*, ::QGraphicsScene*);
    sipQGraphicsSimpleTextItem(const  ::QString&, ::QGraphicsItem*, ::QGraphicsScene*);
    virtual ~sipQGraphicsSimpleTextItem();

    /*
     * There is a protected method for every virtual method visible from
     * this class.
     */
protected:
    void wheelEvent( ::QGraphicsSceneWheelEvent*);
    bool sceneEventFilter( ::QGraphicsItem*, ::QEvent*);
    bool sceneEvent( ::QEvent*);
    void mouseReleaseEvent( ::QGraphicsSceneMouseEvent*);
    void mousePressEvent( ::QGraphicsSceneMouseEvent*);
    void mouseMoveEvent( ::QGraphicsSceneMouseEvent*);
    void mouseDoubleClickEvent( ::QGraphicsSceneMouseEvent*);
    void keyReleaseEvent( ::QKeyEvent*);
    void keyPressEvent( ::QKeyEvent*);
     ::QVariant itemChange( ::QGraphicsItem::GraphicsItemChange,const  ::QVariant&);
     ::QVariant inputMethodQuery( ::Qt::InputMethodQuery) const;
    void inputMethodEvent( ::QInputMethodEvent*);
    void hoverMoveEvent( ::QGraphicsSceneHoverEvent*);
    void hoverLeaveEvent( ::QGraphicsSceneHoverEvent*);
    void hoverEnterEvent( ::QGraphicsSceneHoverEvent*);
    void focusOutEvent( ::QFocusEvent*);
    void focusInEvent( ::QFocusEvent*);
    void dropEvent( ::QGraphicsSceneDragDropEvent*);
    void dragMoveEvent( ::QGraphicsSceneDragDropEvent*);
    void dragLeaveEvent( ::QGraphicsSceneDragDropEvent*);
    void dragEnterEvent( ::QGraphicsSceneDragDropEvent*);
    void contextMenuEvent( ::QGraphicsSceneContextMenuEvent*);
    int type() const;
    void paint( ::QPainter*,const  ::QStyleOptionGraphicsItem*, ::QWidget*);
     ::QPainterPath opaqueArea() const;
    bool isObscuredBy(const  ::QGraphicsItem*) const;
    bool collidesWithPath(const  ::QPainterPath&, ::Qt::ItemSelectionMode) const;
    bool collidesWithItem(const  ::QGraphicsItem*, ::Qt::ItemSelectionMode) const;
    bool contains(const  ::QPointF&) const;
     ::QPainterPath shape() const;
     ::QRectF boundingRect() const;
    void advance(int);

public:
    sipSimpleWrapper *sipPySelf;

private:
    sipQGraphicsSimpleTextItem(const sipQGraphicsSimpleTextItem &);
    sipQGraphicsSimpleTextItem &operator = (const sipQGraphicsSimpleTextItem &);

    char sipPyMethods[32];
};

sipQGraphicsSimpleTextItem::sipQGraphicsSimpleTextItem( ::QGraphicsItem*a0, ::QGraphicsScene*a1):  ::QGraphicsSimpleTextItem(a0,a1), sipPySelf(0)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQGraphicsSimpleTextItem::sipQGraphicsSimpleTextItem(const  ::QString& a0, ::QGraphicsItem*a1, ::QGraphicsScene*a2):  ::QGraphicsSimpleTextItem(a0,a1,a2), sipPySelf(0)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQGraphicsSimpleTextItem::~sipQGraphicsSimpleTextItem()
{
    sipCommonDtor(sipPySelf);
}

void sipQGraphicsSimpleTextItem::wheelEvent( ::QGraphicsSceneWheelEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[0],sipPySelf,NULL,sipName_wheelEvent);

    if (!sipMeth)
    {
         ::QGraphicsSimpleTextItem::wheelEvent(a0);
        return;
    }

    extern void sipVH_QtGui_168(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneWheelEvent*);

    sipVH_QtGui_168(sipGILState, 0, sipPySelf, sipMeth, a0);
}

bool sipQGraphicsSimpleTextItem::sceneEventFilter( ::QGraphicsItem*a0, ::QEvent*a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[1],sipPySelf,NULL,sipName_sceneEventFilter);

    if (!sipMeth)
        return  ::QGraphicsSimpleTextItem::sceneEventFilter(a0,a1);

    extern bool sipVH_QtGui_167(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsItem*, ::QEvent*);

    return sipVH_QtGui_167(sipGILState, 0, sipPySelf, sipMeth, a0, a1);
}

bool sipQGraphicsSimpleTextItem::sceneEvent( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[2],sipPySelf,NULL,sipName_sceneEvent);

    if (!sipMeth)
        return  ::QGraphicsSimpleTextItem::sceneEvent(a0);

    extern bool sipVH_QtGui_7(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    return sipVH_QtGui_7(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsSimpleTextItem::mouseReleaseEvent( ::QGraphicsSceneMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[3],sipPySelf,NULL,sipName_mouseReleaseEvent);

    if (!sipMeth)
    {
         ::QGraphicsSimpleTextItem::mouseReleaseEvent(a0);
        return;
    }

    extern void sipVH_QtGui_166(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneMouseEvent*);

    sipVH_QtGui_166(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsSimpleTextItem::mousePressEvent( ::QGraphicsSceneMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[4],sipPySelf,NULL,sipName_mousePressEvent);

    if (!sipMeth)
    {
         ::QGraphicsSimpleTextItem::mousePressEvent(a0);
        return;
    }

    extern void sipVH_QtGui_166(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneMouseEvent*);

    sipVH_QtGui_166(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsSimpleTextItem::mouseMoveEvent( ::QGraphicsSceneMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[5],sipPySelf,NULL,sipName_mouseMoveEvent);

    if (!sipMeth)
    {
         ::QGraphicsSimpleTextItem::mouseMoveEvent(a0);
        return;
    }

    extern void sipVH_QtGui_166(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneMouseEvent*);

    sipVH_QtGui_166(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsSimpleTextItem::mouseDoubleClickEvent( ::QGraphicsSceneMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[6],sipPySelf,NULL,sipName_mouseDoubleClickEvent);

    if (!sipMeth)
    {
         ::QGraphicsSimpleTextItem::mouseDoubleClickEvent(a0);
        return;
    }

    extern void sipVH_QtGui_166(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneMouseEvent*);

    sipVH_QtGui_166(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsSimpleTextItem::keyReleaseEvent( ::QKeyEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[7],sipPySelf,NULL,sipName_keyReleaseEvent);

    if (!sipMeth)
    {
         ::QGraphicsSimpleTextItem::keyReleaseEvent(a0);
        return;
    }

    extern void sipVH_QtGui_14(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QKeyEvent*);

    sipVH_QtGui_14(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsSimpleTextItem::keyPressEvent( ::QKeyEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[8],sipPySelf,NULL,sipName_keyPressEvent);

    if (!sipMeth)
    {
         ::QGraphicsSimpleTextItem::keyPressEvent(a0);
        return;
    }

    extern void sipVH_QtGui_14(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QKeyEvent*);

    sipVH_QtGui_14(sipGILState, 0, sipPySelf, sipMeth, a0);
}

 ::QVariant sipQGraphicsSimpleTextItem::itemChange( ::QGraphicsItem::GraphicsItemChange a0,const  ::QVariant& a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[9],sipPySelf,NULL,sipName_itemChange);

    if (!sipMeth)
        return  ::QGraphicsSimpleTextItem::itemChange(a0,a1);

    extern  ::QVariant sipVH_QtGui_165(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsItem::GraphicsItemChange,const  ::QVariant&);

    return sipVH_QtGui_165(sipGILState, 0, sipPySelf, sipMeth, a0, a1);
}

 ::QVariant sipQGraphicsSimpleTextItem::inputMethodQuery( ::Qt::InputMethodQuery a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[10]),sipPySelf,NULL,sipName_inputMethodQuery);

    if (!sipMeth)
        return  ::QGraphicsSimpleTextItem::inputMethodQuery(a0);

    extern  ::QVariant sipVH_QtGui_30(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::Qt::InputMethodQuery);

    return sipVH_QtGui_30(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsSimpleTextItem::inputMethodEvent( ::QInputMethodEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[11],sipPySelf,NULL,sipName_inputMethodEvent);

    if (!sipMeth)
    {
         ::QGraphicsSimpleTextItem::inputMethodEvent(a0);
        return;
    }

    extern void sipVH_QtGui_29(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QInputMethodEvent*);

    sipVH_QtGui_29(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsSimpleTextItem::hoverMoveEvent( ::QGraphicsSceneHoverEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[12],sipPySelf,NULL,sipName_hoverMoveEvent);

    if (!sipMeth)
    {
         ::QGraphicsSimpleTextItem::hoverMoveEvent(a0);
        return;
    }

    extern void sipVH_QtGui_164(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneHoverEvent*);

    sipVH_QtGui_164(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsSimpleTextItem::hoverLeaveEvent( ::QGraphicsSceneHoverEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[13],sipPySelf,NULL,sipName_hoverLeaveEvent);

    if (!sipMeth)
    {
         ::QGraphicsSimpleTextItem::hoverLeaveEvent(a0);
        return;
    }

    extern void sipVH_QtGui_164(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneHoverEvent*);

    sipVH_QtGui_164(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsSimpleTextItem::hoverEnterEvent( ::QGraphicsSceneHoverEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[14],sipPySelf,NULL,sipName_hoverEnterEvent);

    if (!sipMeth)
    {
         ::QGraphicsSimpleTextItem::hoverEnterEvent(a0);
        return;
    }

    extern void sipVH_QtGui_164(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneHoverEvent*);

    sipVH_QtGui_164(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsSimpleTextItem::focusOutEvent( ::QFocusEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[15],sipPySelf,NULL,sipName_focusOutEvent);

    if (!sipMeth)
    {
         ::QGraphicsSimpleTextItem::focusOutEvent(a0);
        return;
    }

    extern void sipVH_QtGui_15(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QFocusEvent*);

    sipVH_QtGui_15(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsSimpleTextItem::focusInEvent( ::QFocusEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[16],sipPySelf,NULL,sipName_focusInEvent);

    if (!sipMeth)
    {
         ::QGraphicsSimpleTextItem::focusInEvent(a0);
        return;
    }

    extern void sipVH_QtGui_15(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QFocusEvent*);

    sipVH_QtGui_15(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsSimpleTextItem::dropEvent( ::QGraphicsSceneDragDropEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[17],sipPySelf,NULL,sipName_dropEvent);

    if (!sipMeth)
    {
         ::QGraphicsSimpleTextItem::dropEvent(a0);
        return;
    }

    extern void sipVH_QtGui_163(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneDragDropEvent*);

    sipVH_QtGui_163(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsSimpleTextItem::dragMoveEvent( ::QGraphicsSceneDragDropEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[18],sipPySelf,NULL,sipName_dragMoveEvent);

    if (!sipMeth)
    {
         ::QGraphicsSimpleTextItem::dragMoveEvent(a0);
        return;
    }

    extern void sipVH_QtGui_163(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneDragDropEvent*);

    sipVH_QtGui_163(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsSimpleTextItem::dragLeaveEvent( ::QGraphicsSceneDragDropEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[19],sipPySelf,NULL,sipName_dragLeaveEvent);

    if (!sipMeth)
    {
         ::QGraphicsSimpleTextItem::dragLeaveEvent(a0);
        return;
    }

    extern void sipVH_QtGui_163(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneDragDropEvent*);

    sipVH_QtGui_163(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsSimpleTextItem::dragEnterEvent( ::QGraphicsSceneDragDropEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[20],sipPySelf,NULL,sipName_dragEnterEvent);

    if (!sipMeth)
    {
         ::QGraphicsSimpleTextItem::dragEnterEvent(a0);
        return;
    }

    extern void sipVH_QtGui_163(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneDragDropEvent*);

    sipVH_QtGui_163(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsSimpleTextItem::contextMenuEvent( ::QGraphicsSceneContextMenuEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[21],sipPySelf,NULL,sipName_contextMenuEvent);

    if (!sipMeth)
    {
         ::QGraphicsSimpleTextItem::contextMenuEvent(a0);
        return;
    }

    extern void sipVH_QtGui_162(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneContextMenuEvent*);

    sipVH_QtGui_162(sipGILState, 0, sipPySelf, sipMeth, a0);
}

int sipQGraphicsSimpleTextItem::type() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[22]),sipPySelf,NULL,sipName_type);

    if (!sipMeth)
        return  ::QGraphicsSimpleTextItem::type();

    extern int sipVH_QtGui_8(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtGui_8(sipGILState, 0, sipPySelf, sipMeth);
}

void sipQGraphicsSimpleTextItem::paint( ::QPainter*a0,const  ::QStyleOptionGraphicsItem*a1, ::QWidget*a2)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[23],sipPySelf,NULL,sipName_paint);

    if (!sipMeth)
    {
         ::QGraphicsSimpleTextItem::paint(a0,a1,a2);
        return;
    }

    extern void sipVH_QtGui_161(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QPainter*,const  ::QStyleOptionGraphicsItem*, ::QWidget*);

    sipVH_QtGui_161(sipGILState, 0, sipPySelf, sipMeth, a0, a1, a2);
}

 ::QPainterPath sipQGraphicsSimpleTextItem::opaqueArea() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[24]),sipPySelf,NULL,sipName_opaqueArea);

    if (!sipMeth)
        return  ::QGraphicsSimpleTextItem::opaqueArea();

    extern  ::QPainterPath sipVH_QtGui_156(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtGui_156(sipGILState, 0, sipPySelf, sipMeth);
}

bool sipQGraphicsSimpleTextItem::isObscuredBy(const  ::QGraphicsItem*a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[25]),sipPySelf,NULL,sipName_isObscuredBy);

    if (!sipMeth)
        return  ::QGraphicsSimpleTextItem::isObscuredBy(a0);

    extern bool sipVH_QtGui_160(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QGraphicsItem*);

    return sipVH_QtGui_160(sipGILState, 0, sipPySelf, sipMeth, a0);
}

bool sipQGraphicsSimpleTextItem::collidesWithPath(const  ::QPainterPath& a0, ::Qt::ItemSelectionMode a1) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[26]),sipPySelf,NULL,sipName_collidesWithPath);

    if (!sipMeth)
        return  ::QGraphicsSimpleTextItem::collidesWithPath(a0,a1);

    extern bool sipVH_QtGui_159(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QPainterPath&, ::Qt::ItemSelectionMode);

    return sipVH_QtGui_159(sipGILState, 0, sipPySelf, sipMeth, a0, a1);
}

bool sipQGraphicsSimpleTextItem::collidesWithItem(const  ::QGraphicsItem*a0, ::Qt::ItemSelectionMode a1) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[27]),sipPySelf,NULL,sipName_collidesWithItem);

    if (!sipMeth)
        return  ::QGraphicsSimpleTextItem::collidesWithItem(a0,a1);

    extern bool sipVH_QtGui_158(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QGraphicsItem*, ::Qt::ItemSelectionMode);

    return sipVH_QtGui_158(sipGILState, 0, sipPySelf, sipMeth, a0, a1);
}

bool sipQGraphicsSimpleTextItem::contains(const  ::QPointF& a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[28]),sipPySelf,NULL,sipName_contains);

    if (!sipMeth)
        return  ::QGraphicsSimpleTextItem::contains(a0);

    extern bool sipVH_QtGui_157(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QPointF&);

    return sipVH_QtGui_157(sipGILState, 0, sipPySelf, sipMeth, a0);
}

 ::QPainterPath sipQGraphicsSimpleTextItem::shape() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[29]),sipPySelf,NULL,sipName_shape);

    if (!sipMeth)
        return  ::QGraphicsSimpleTextItem::shape();

    extern  ::QPainterPath sipVH_QtGui_156(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtGui_156(sipGILState, 0, sipPySelf, sipMeth);
}

 ::QRectF sipQGraphicsSimpleTextItem::boundingRect() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[30]),sipPySelf,NULL,sipName_boundingRect);

    if (!sipMeth)
        return  ::QGraphicsSimpleTextItem::boundingRect();

    extern  ::QRectF sipVH_QtGui_155(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtGui_155(sipGILState, 0, sipPySelf, sipMeth);
}

void sipQGraphicsSimpleTextItem::advance(int a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[31],sipPySelf,NULL,sipName_advance);

    if (!sipMeth)
    {
         ::QGraphicsSimpleTextItem::advance(a0);
        return;
    }

    extern void sipVH_QtGui_54(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, int);

    sipVH_QtGui_54(sipGILState, 0, sipPySelf, sipMeth, a0);
}


PyDoc_STRVAR(doc_QGraphicsSimpleTextItem_setText, "setText(self, str)");

extern "C" {static PyObject *meth_QGraphicsSimpleTextItem_setText(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsSimpleTextItem_setText(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QString* a0;
        int a0State = 0;
         ::QGraphicsSimpleTextItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QGraphicsSimpleTextItem, &sipCpp, sipType_QString,&a0, &a0State))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setText(*a0);
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::QString *>(a0),sipType_QString,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsSimpleTextItem, sipName_setText, doc_QGraphicsSimpleTextItem_setText);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsSimpleTextItem_text, "text(self) -> str");

extern "C" {static PyObject *meth_QGraphicsSimpleTextItem_text(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsSimpleTextItem_text(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QGraphicsSimpleTextItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsSimpleTextItem, &sipCpp))
        {
             ::QString*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::QString(sipCpp->text());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QString,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsSimpleTextItem, sipName_text, doc_QGraphicsSimpleTextItem_text);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsSimpleTextItem_setFont, "setFont(self, QFont)");

extern "C" {static PyObject *meth_QGraphicsSimpleTextItem_setFont(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsSimpleTextItem_setFont(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QFont* a0;
         ::QGraphicsSimpleTextItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsSimpleTextItem, &sipCpp, sipType_QFont, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setFont(*a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsSimpleTextItem, sipName_setFont, doc_QGraphicsSimpleTextItem_setFont);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsSimpleTextItem_font, "font(self) -> QFont");

extern "C" {static PyObject *meth_QGraphicsSimpleTextItem_font(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsSimpleTextItem_font(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QGraphicsSimpleTextItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsSimpleTextItem, &sipCpp))
        {
             ::QFont*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::QFont(sipCpp->font());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QFont,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsSimpleTextItem, sipName_font, doc_QGraphicsSimpleTextItem_font);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsSimpleTextItem_boundingRect, "boundingRect(self) -> QRectF");

extern "C" {static PyObject *meth_QGraphicsSimpleTextItem_boundingRect(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsSimpleTextItem_boundingRect(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QGraphicsSimpleTextItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsSimpleTextItem, &sipCpp))
        {
             ::QRectF*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::QRectF((sipSelfWasArg ? sipCpp-> ::QGraphicsSimpleTextItem::boundingRect() : sipCpp->boundingRect()));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QRectF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsSimpleTextItem, sipName_boundingRect, doc_QGraphicsSimpleTextItem_boundingRect);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsSimpleTextItem_shape, "shape(self) -> QPainterPath");

extern "C" {static PyObject *meth_QGraphicsSimpleTextItem_shape(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsSimpleTextItem_shape(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QGraphicsSimpleTextItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsSimpleTextItem, &sipCpp))
        {
             ::QPainterPath*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::QPainterPath((sipSelfWasArg ? sipCpp-> ::QGraphicsSimpleTextItem::shape() : sipCpp->shape()));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPainterPath,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsSimpleTextItem, sipName_shape, doc_QGraphicsSimpleTextItem_shape);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsSimpleTextItem_contains, "contains(self, Union[QPointF, QPoint]) -> bool");

extern "C" {static PyObject *meth_QGraphicsSimpleTextItem_contains(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsSimpleTextItem_contains(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QPointF* a0;
        int a0State = 0;
        const  ::QGraphicsSimpleTextItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QGraphicsSimpleTextItem, &sipCpp, sipType_QPointF, &a0, &a0State))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = (sipSelfWasArg ? sipCpp-> ::QGraphicsSimpleTextItem::contains(*a0) : sipCpp->contains(*a0));
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::QPointF *>(a0),sipType_QPointF,a0State);

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsSimpleTextItem, sipName_contains, doc_QGraphicsSimpleTextItem_contains);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsSimpleTextItem_paint, "paint(self, QPainter, QStyleOptionGraphicsItem, QWidget)");

extern "C" {static PyObject *meth_QGraphicsSimpleTextItem_paint(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsSimpleTextItem_paint(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QPainter* a0;
        const  ::QStyleOptionGraphicsItem* a1;
         ::QWidget* a2;
         ::QGraphicsSimpleTextItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8J8J8", &sipSelf, sipType_QGraphicsSimpleTextItem, &sipCpp, sipType_QPainter, &a0, sipType_QStyleOptionGraphicsItem, &a1, sipType_QWidget, &a2))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp-> ::QGraphicsSimpleTextItem::paint(a0,a1,a2) : sipCpp->paint(a0,a1,a2));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsSimpleTextItem, sipName_paint, doc_QGraphicsSimpleTextItem_paint);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsSimpleTextItem_isObscuredBy, "isObscuredBy(self, QGraphicsItem) -> bool");

extern "C" {static PyObject *meth_QGraphicsSimpleTextItem_isObscuredBy(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsSimpleTextItem_isObscuredBy(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QGraphicsItem* a0;
        const  ::QGraphicsSimpleTextItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsSimpleTextItem, &sipCpp, sipType_QGraphicsItem, &a0))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = (sipSelfWasArg ? sipCpp-> ::QGraphicsSimpleTextItem::isObscuredBy(a0) : sipCpp->isObscuredBy(a0));
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsSimpleTextItem, sipName_isObscuredBy, doc_QGraphicsSimpleTextItem_isObscuredBy);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsSimpleTextItem_opaqueArea, "opaqueArea(self) -> QPainterPath");

extern "C" {static PyObject *meth_QGraphicsSimpleTextItem_opaqueArea(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsSimpleTextItem_opaqueArea(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QGraphicsSimpleTextItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsSimpleTextItem, &sipCpp))
        {
             ::QPainterPath*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::QPainterPath((sipSelfWasArg ? sipCpp-> ::QGraphicsSimpleTextItem::opaqueArea() : sipCpp->opaqueArea()));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPainterPath,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsSimpleTextItem, sipName_opaqueArea, doc_QGraphicsSimpleTextItem_opaqueArea);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsSimpleTextItem_type, "type(self) -> int");

extern "C" {static PyObject *meth_QGraphicsSimpleTextItem_type(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsSimpleTextItem_type(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QGraphicsSimpleTextItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsSimpleTextItem, &sipCpp))
        {
            int sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = (sipSelfWasArg ? sipCpp-> ::QGraphicsSimpleTextItem::type() : sipCpp->type());
            Py_END_ALLOW_THREADS

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsSimpleTextItem, sipName_type, doc_QGraphicsSimpleTextItem_type);

    return NULL;
}


/* Cast a pointer to a type somewhere in its inheritance hierarchy. */
extern "C" {static void *cast_QGraphicsSimpleTextItem(void *, const sipTypeDef *);}
static void *cast_QGraphicsSimpleTextItem(void *sipCppV, const sipTypeDef *targetType)
{
     ::QGraphicsSimpleTextItem *sipCpp = reinterpret_cast< ::QGraphicsSimpleTextItem *>(sipCppV);

    if (targetType == sipType_QAbstractGraphicsShapeItem)
        return static_cast< ::QAbstractGraphicsShapeItem *>(sipCpp);

    if (targetType == sipType_QGraphicsItem)
        return static_cast< ::QGraphicsItem *>(sipCpp);

    return sipCppV;
}


/* Call the instance's destructor. */
extern "C" {static void release_QGraphicsSimpleTextItem(void *, int);}
static void release_QGraphicsSimpleTextItem(void *sipCppV, int sipIsDerived)
{
    Py_BEGIN_ALLOW_THREADS

    if (sipIsDerived)
        delete reinterpret_cast<sipQGraphicsSimpleTextItem *>(sipCppV);
    else
        delete reinterpret_cast< ::QGraphicsSimpleTextItem *>(sipCppV);

    Py_END_ALLOW_THREADS
}


extern "C" {static void dealloc_QGraphicsSimpleTextItem(sipSimpleWrapper *);}
static void dealloc_QGraphicsSimpleTextItem(sipSimpleWrapper *sipSelf)
{
    if (sipIsDerivedClass(sipSelf))
        reinterpret_cast<sipQGraphicsSimpleTextItem *>(sipGetAddress(sipSelf))->sipPySelf = NULL;

    if (sipIsOwnedByPython(sipSelf))
    {
        release_QGraphicsSimpleTextItem(sipGetAddress(sipSelf), sipIsDerivedClass(sipSelf));
    }
}


extern "C" {static void *init_type_QGraphicsSimpleTextItem(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_QGraphicsSimpleTextItem(sipSimpleWrapper *sipSelf, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **sipOwner, PyObject **sipParseErr)
{
    sipQGraphicsSimpleTextItem *sipCpp = 0;

    {
         ::QGraphicsItem* a0 = 0;
         ::QGraphicsScene* a1 = 0;

        static const char *sipKwdList[] = {
            sipName_parent,
            sipName_scene,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "|JHJH", sipType_QGraphicsItem, &a0, sipOwner, sipType_QGraphicsScene, &a1, sipOwner))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp = new sipQGraphicsSimpleTextItem(a0,a1);
            Py_END_ALLOW_THREADS

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    {
        const  ::QString* a0;
        int a0State = 0;
         ::QGraphicsItem* a1 = 0;
         ::QGraphicsScene* a2 = 0;

        static const char *sipKwdList[] = {
            NULL,
            sipName_parent,
            sipName_scene,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "J1|JHJH", sipType_QString,&a0, &a0State, sipType_QGraphicsItem, &a1, sipOwner, sipType_QGraphicsScene, &a2, sipOwner))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp = new sipQGraphicsSimpleTextItem(*a0,a1,a2);
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::QString *>(a0),sipType_QString,a0State);

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    return NULL;
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_QGraphicsSimpleTextItem[] = {{2, 255, 1}};


static PyMethodDef methods_QGraphicsSimpleTextItem[] = {
    {SIP_MLNAME_CAST(sipName_boundingRect), meth_QGraphicsSimpleTextItem_boundingRect, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsSimpleTextItem_boundingRect)},
    {SIP_MLNAME_CAST(sipName_contains), meth_QGraphicsSimpleTextItem_contains, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsSimpleTextItem_contains)},
    {SIP_MLNAME_CAST(sipName_font), meth_QGraphicsSimpleTextItem_font, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsSimpleTextItem_font)},
    {SIP_MLNAME_CAST(sipName_isObscuredBy), meth_QGraphicsSimpleTextItem_isObscuredBy, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsSimpleTextItem_isObscuredBy)},
    {SIP_MLNAME_CAST(sipName_opaqueArea), meth_QGraphicsSimpleTextItem_opaqueArea, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsSimpleTextItem_opaqueArea)},
    {SIP_MLNAME_CAST(sipName_paint), meth_QGraphicsSimpleTextItem_paint, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsSimpleTextItem_paint)},
    {SIP_MLNAME_CAST(sipName_setFont), meth_QGraphicsSimpleTextItem_setFont, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsSimpleTextItem_setFont)},
    {SIP_MLNAME_CAST(sipName_setText), meth_QGraphicsSimpleTextItem_setText, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsSimpleTextItem_setText)},
    {SIP_MLNAME_CAST(sipName_shape), meth_QGraphicsSimpleTextItem_shape, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsSimpleTextItem_shape)},
    {SIP_MLNAME_CAST(sipName_text), meth_QGraphicsSimpleTextItem_text, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsSimpleTextItem_text)},
    {SIP_MLNAME_CAST(sipName_type), meth_QGraphicsSimpleTextItem_type, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsSimpleTextItem_type)}
};

PyDoc_STRVAR(doc_QGraphicsSimpleTextItem, "\1QGraphicsSimpleTextItem(parent: QGraphicsItem = None, scene: QGraphicsScene = None)\n"
    "QGraphicsSimpleTextItem(str, parent: QGraphicsItem = None, scene: QGraphicsScene = None)");


static pyqt4ClassPluginDef plugin_QGraphicsSimpleTextItem = {
    0,
    0,
    0
};


sipClassTypeDef sipTypeDef_QtGui_QGraphicsSimpleTextItem = {
    {
        -1,
        0,
        0,
        SIP_TYPE_SCC|SIP_TYPE_CLASS,
        sipNameNr_QGraphicsSimpleTextItem,
        {0},
        &plugin_QGraphicsSimpleTextItem
    },
    {
        sipNameNr_QGraphicsSimpleTextItem,
        {0, 0, 1},
        11, methods_QGraphicsSimpleTextItem,
        0, 0,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    doc_QGraphicsSimpleTextItem,
    -1,
    -1,
    supers_QGraphicsSimpleTextItem,
    0,
    init_type_QGraphicsSimpleTextItem,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_QGraphicsSimpleTextItem,
    0,
    0,
    0,
    release_QGraphicsSimpleTextItem,
    cast_QGraphicsSimpleTextItem,
    0,
    0,
    0,
    0,
    0,
    0
};
