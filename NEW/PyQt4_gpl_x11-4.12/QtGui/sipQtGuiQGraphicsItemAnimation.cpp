/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.19.2
 *
 * Copyright (c) 2016 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt4.
 * 
 * This file may be used under the terms of the GNU General Public License
 * version 3.0 as published by the Free Software Foundation and appearing in
 * the file LICENSE included in the packaging of this file.  Please review the
 * following information to ensure the GNU General Public License version 3.0
 * requirements will be met: http://www.gnu.org/copyleft/gpl.html.
 * 
 * If you do not wish to use this file under the terms of the GPL version 3.0
 * then you may purchase a commercial license.  For more information contact
 * info@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtGui.h"

#line 28 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qgraphicsitemanimation.sip"
#include <qgraphicsitemanimation.h>
#line 29 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQGraphicsItemAnimation.cpp"

#line 29 "sip/QtCore/qobject.sip"
#include <qobject.h>
#line 33 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQGraphicsItemAnimation.cpp"
#line 506 "sip/QtCore/qlist.sip"
#include <qlist.h>
#include <qpair.h>
#line 37 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQGraphicsItemAnimation.cpp"
#line 110 "sip/QtCore/qpoint.sip"
#include <qpoint.h>
#line 40 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQGraphicsItemAnimation.cpp"
#line 410 "sip/QtCore/qlist.sip"
#include <qlist.h>
#include <qpair.h>
#line 44 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQGraphicsItemAnimation.cpp"
#line 30 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qmatrix.sip"
#include <qmatrix.h>
#line 47 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQGraphicsItemAnimation.cpp"
#line 28 "sip/QtCore/qtimeline.sip"
#include <qtimeline.h>
#line 50 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQGraphicsItemAnimation.cpp"
#line 28 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 53 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQGraphicsItemAnimation.cpp"
#line 26 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 56 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQGraphicsItemAnimation.cpp"
#line 368 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 59 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQGraphicsItemAnimation.cpp"
#line 351 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 62 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQGraphicsItemAnimation.cpp"
#line 265 "sip/QtCore/qvariant.sip"
#include <qvariant.h>
#line 65 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQGraphicsItemAnimation.cpp"
#line 28 "sip/QtCore/qlist.sip"
#include <qlist.h>
#line 68 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQGraphicsItemAnimation.cpp"
#line 32 "sip/QtCore/qbytearray.sip"
#include <qbytearray.h>
#line 71 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQGraphicsItemAnimation.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 74 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQGraphicsItemAnimation.cpp"
#line 115 "sip/QtCore/qlist.sip"
#include <qlist.h>
#line 77 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQGraphicsItemAnimation.cpp"
#line 26 "sip/QtCore/qthread.sip"
#include <qthread.h>
#line 80 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQGraphicsItemAnimation.cpp"
#line 27 "sip/QtCore/qstring.sip"
#include <qstring.h>
#line 83 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQGraphicsItemAnimation.cpp"
#line 26 "sip/QtCore/qregexp.sip"
#include <qregexp.h>
#line 86 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQGraphicsItemAnimation.cpp"
#line 26 "sip/QtCore/qobjectdefs.sip"
#include <qobjectdefs.h>
#line 89 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQGraphicsItemAnimation.cpp"


class sipQGraphicsItemAnimation : public  ::QGraphicsItemAnimation
{
public:
    sipQGraphicsItemAnimation( ::QObject*);
    virtual ~sipQGraphicsItemAnimation();

    int qt_metacall(QMetaObject::Call,int,void **);
    void *qt_metacast(const char *);
    const QMetaObject *metaObject() const;

    /*
     * There is a protected method for every virtual method visible from
     * this class.
     */
protected:
    void beforeAnimationStep( ::qreal);
    void afterAnimationStep( ::qreal);
    bool event( ::QEvent*);
    bool eventFilter( ::QObject*, ::QEvent*);
    void timerEvent( ::QTimerEvent*);
    void childEvent( ::QChildEvent*);
    void customEvent( ::QEvent*);
    void connectNotify(const char*);
    void disconnectNotify(const char*);

public:
    sipSimpleWrapper *sipPySelf;

private:
    sipQGraphicsItemAnimation(const sipQGraphicsItemAnimation &);
    sipQGraphicsItemAnimation &operator = (const sipQGraphicsItemAnimation &);

    char sipPyMethods[9];
};

sipQGraphicsItemAnimation::sipQGraphicsItemAnimation( ::QObject*a0):  ::QGraphicsItemAnimation(a0), sipPySelf(0)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQGraphicsItemAnimation::~sipQGraphicsItemAnimation()
{
    sipCommonDtor(sipPySelf);
}

const QMetaObject *sipQGraphicsItemAnimation::metaObject() const
{
    return sip_QtGui_qt_metaobject(sipPySelf,sipType_QGraphicsItemAnimation);
}

int sipQGraphicsItemAnimation::qt_metacall(QMetaObject::Call _c,int _id,void **_a)
{
    _id =  ::QGraphicsItemAnimation::qt_metacall(_c,_id,_a);

    if (_id >= 0)
        _id = sip_QtGui_qt_metacall(sipPySelf,sipType_QGraphicsItemAnimation,_c,_id,_a);

    return _id;
}

void *sipQGraphicsItemAnimation::qt_metacast(const char *_clname)
{
    return (sip_QtGui_qt_metacast(sipPySelf, sipType_QGraphicsItemAnimation, _clname)) ? this :  ::QGraphicsItemAnimation::qt_metacast(_clname);
}

void sipQGraphicsItemAnimation::beforeAnimationStep( ::qreal a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[0],sipPySelf,NULL,sipName_beforeAnimationStep);

    if (!sipMeth)
    {
         ::QGraphicsItemAnimation::beforeAnimationStep(a0);
        return;
    }

    extern void sipVH_QtGui_169(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::qreal);

    sipVH_QtGui_169(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsItemAnimation::afterAnimationStep( ::qreal a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[1],sipPySelf,NULL,sipName_afterAnimationStep);

    if (!sipMeth)
    {
         ::QGraphicsItemAnimation::afterAnimationStep(a0);
        return;
    }

    extern void sipVH_QtGui_169(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::qreal);

    sipVH_QtGui_169(sipGILState, 0, sipPySelf, sipMeth, a0);
}

bool sipQGraphicsItemAnimation::event( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[2],sipPySelf,NULL,sipName_event);

    if (!sipMeth)
        return  ::QGraphicsItemAnimation::event(a0);

    extern bool sipVH_QtGui_7(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    return sipVH_QtGui_7(sipGILState, 0, sipPySelf, sipMeth, a0);
}

bool sipQGraphicsItemAnimation::eventFilter( ::QObject*a0, ::QEvent*a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[3],sipPySelf,NULL,sipName_eventFilter);

    if (!sipMeth)
        return  ::QGraphicsItemAnimation::eventFilter(a0,a1);

    extern bool sipVH_QtGui_6(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QObject*, ::QEvent*);

    return sipVH_QtGui_6(sipGILState, 0, sipPySelf, sipMeth, a0, a1);
}

void sipQGraphicsItemAnimation::timerEvent( ::QTimerEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[4],sipPySelf,NULL,sipName_timerEvent);

    if (!sipMeth)
    {
         ::QGraphicsItemAnimation::timerEvent(a0);
        return;
    }

    extern void sipVH_QtGui_5(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QTimerEvent*);

    sipVH_QtGui_5(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsItemAnimation::childEvent( ::QChildEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[5],sipPySelf,NULL,sipName_childEvent);

    if (!sipMeth)
    {
         ::QGraphicsItemAnimation::childEvent(a0);
        return;
    }

    extern void sipVH_QtGui_4(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QChildEvent*);

    sipVH_QtGui_4(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsItemAnimation::customEvent( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[6],sipPySelf,NULL,sipName_customEvent);

    if (!sipMeth)
    {
         ::QGraphicsItemAnimation::customEvent(a0);
        return;
    }

    extern void sipVH_QtGui_3(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    sipVH_QtGui_3(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsItemAnimation::connectNotify(const char*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[7],sipPySelf,NULL,sipName_connectNotify);

    if (!sipMeth)
    {
         ::QGraphicsItemAnimation::connectNotify(a0);
        return;
    }

    extern void sipVH_QtGui_2(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const char*);

    sipVH_QtGui_2(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsItemAnimation::disconnectNotify(const char*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[8],sipPySelf,NULL,sipName_disconnectNotify);

    if (!sipMeth)
    {
         ::QGraphicsItemAnimation::disconnectNotify(a0);
        return;
    }

    extern void sipVH_QtGui_2(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const char*);

    sipVH_QtGui_2(sipGILState, 0, sipPySelf, sipMeth, a0);
}


PyDoc_STRVAR(doc_QGraphicsItemAnimation_item, "item(self) -> QGraphicsItem");

extern "C" {static PyObject *meth_QGraphicsItemAnimation_item(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItemAnimation_item(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QGraphicsItemAnimation *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItemAnimation, &sipCpp))
        {
             ::QGraphicsItem*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->item();
            Py_END_ALLOW_THREADS

            return sipConvertFromType(sipRes,sipType_QGraphicsItem,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItemAnimation, sipName_item, doc_QGraphicsItemAnimation_item);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItemAnimation_setItem, "setItem(self, QGraphicsItem)");

extern "C" {static PyObject *meth_QGraphicsItemAnimation_setItem(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItemAnimation_setItem(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::QGraphicsItem* a0;
        PyObject *a0Keep;
         ::QGraphicsItemAnimation *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B@J8", &sipSelf, sipType_QGraphicsItemAnimation, &sipCpp, &a0Keep, sipType_QGraphicsItem, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setItem(a0);
            Py_END_ALLOW_THREADS

            sipKeepReference(sipSelf, -30, a0Keep);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItemAnimation, sipName_setItem, doc_QGraphicsItemAnimation_setItem);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItemAnimation_timeLine, "timeLine(self) -> QTimeLine");

extern "C" {static PyObject *meth_QGraphicsItemAnimation_timeLine(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItemAnimation_timeLine(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QGraphicsItemAnimation *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItemAnimation, &sipCpp))
        {
             ::QTimeLine*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->timeLine();
            Py_END_ALLOW_THREADS

            return sipConvertFromType(sipRes,sipType_QTimeLine,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItemAnimation, sipName_timeLine, doc_QGraphicsItemAnimation_timeLine);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItemAnimation_setTimeLine, "setTimeLine(self, QTimeLine)");

extern "C" {static PyObject *meth_QGraphicsItemAnimation_setTimeLine(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItemAnimation_setTimeLine(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::QTimeLine* a0;
        PyObject *a0Keep;
         ::QGraphicsItemAnimation *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B@J8", &sipSelf, sipType_QGraphicsItemAnimation, &sipCpp, &a0Keep, sipType_QTimeLine, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setTimeLine(a0);
            Py_END_ALLOW_THREADS

            sipKeepReference(sipSelf, -31, a0Keep);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItemAnimation, sipName_setTimeLine, doc_QGraphicsItemAnimation_setTimeLine);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItemAnimation_posAt, "posAt(self, float) -> QPointF");

extern "C" {static PyObject *meth_QGraphicsItemAnimation_posAt(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItemAnimation_posAt(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::qreal a0;
        const  ::QGraphicsItemAnimation *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bd", &sipSelf, sipType_QGraphicsItemAnimation, &sipCpp, &a0))
        {
             ::QPointF*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::QPointF(sipCpp->posAt(a0));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPointF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItemAnimation, sipName_posAt, doc_QGraphicsItemAnimation_posAt);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItemAnimation_setPosAt, "setPosAt(self, float, Union[QPointF, QPoint])");

extern "C" {static PyObject *meth_QGraphicsItemAnimation_setPosAt(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItemAnimation_setPosAt(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::qreal a0;
        const  ::QPointF* a1;
        int a1State = 0;
         ::QGraphicsItemAnimation *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BdJ1", &sipSelf, sipType_QGraphicsItemAnimation, &sipCpp, &a0, sipType_QPointF, &a1, &a1State))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setPosAt(a0,*a1);
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast< ::QPointF *>(a1),sipType_QPointF,a1State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItemAnimation, sipName_setPosAt, doc_QGraphicsItemAnimation_setPosAt);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItemAnimation_matrixAt, "matrixAt(self, float) -> QMatrix");

extern "C" {static PyObject *meth_QGraphicsItemAnimation_matrixAt(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItemAnimation_matrixAt(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::qreal a0;
        const  ::QGraphicsItemAnimation *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bd", &sipSelf, sipType_QGraphicsItemAnimation, &sipCpp, &a0))
        {
             ::QMatrix*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::QMatrix(sipCpp->matrixAt(a0));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QMatrix,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItemAnimation, sipName_matrixAt, doc_QGraphicsItemAnimation_matrixAt);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItemAnimation_rotationAt, "rotationAt(self, float) -> float");

extern "C" {static PyObject *meth_QGraphicsItemAnimation_rotationAt(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItemAnimation_rotationAt(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::qreal a0;
        const  ::QGraphicsItemAnimation *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bd", &sipSelf, sipType_QGraphicsItemAnimation, &sipCpp, &a0))
        {
             ::qreal sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->rotationAt(a0);
            Py_END_ALLOW_THREADS

            return PyFloat_FromDouble(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItemAnimation, sipName_rotationAt, doc_QGraphicsItemAnimation_rotationAt);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItemAnimation_setRotationAt, "setRotationAt(self, float, float)");

extern "C" {static PyObject *meth_QGraphicsItemAnimation_setRotationAt(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItemAnimation_setRotationAt(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::qreal a0;
         ::qreal a1;
         ::QGraphicsItemAnimation *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdd", &sipSelf, sipType_QGraphicsItemAnimation, &sipCpp, &a0, &a1))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setRotationAt(a0,a1);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItemAnimation, sipName_setRotationAt, doc_QGraphicsItemAnimation_setRotationAt);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItemAnimation_xTranslationAt, "xTranslationAt(self, float) -> float");

extern "C" {static PyObject *meth_QGraphicsItemAnimation_xTranslationAt(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItemAnimation_xTranslationAt(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::qreal a0;
        const  ::QGraphicsItemAnimation *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bd", &sipSelf, sipType_QGraphicsItemAnimation, &sipCpp, &a0))
        {
             ::qreal sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->xTranslationAt(a0);
            Py_END_ALLOW_THREADS

            return PyFloat_FromDouble(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItemAnimation, sipName_xTranslationAt, doc_QGraphicsItemAnimation_xTranslationAt);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItemAnimation_yTranslationAt, "yTranslationAt(self, float) -> float");

extern "C" {static PyObject *meth_QGraphicsItemAnimation_yTranslationAt(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItemAnimation_yTranslationAt(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::qreal a0;
        const  ::QGraphicsItemAnimation *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bd", &sipSelf, sipType_QGraphicsItemAnimation, &sipCpp, &a0))
        {
             ::qreal sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->yTranslationAt(a0);
            Py_END_ALLOW_THREADS

            return PyFloat_FromDouble(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItemAnimation, sipName_yTranslationAt, doc_QGraphicsItemAnimation_yTranslationAt);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItemAnimation_setTranslationAt, "setTranslationAt(self, float, float, float)");

extern "C" {static PyObject *meth_QGraphicsItemAnimation_setTranslationAt(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItemAnimation_setTranslationAt(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::qreal a0;
         ::qreal a1;
         ::qreal a2;
         ::QGraphicsItemAnimation *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bddd", &sipSelf, sipType_QGraphicsItemAnimation, &sipCpp, &a0, &a1, &a2))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setTranslationAt(a0,a1,a2);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItemAnimation, sipName_setTranslationAt, doc_QGraphicsItemAnimation_setTranslationAt);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItemAnimation_verticalScaleAt, "verticalScaleAt(self, float) -> float");

extern "C" {static PyObject *meth_QGraphicsItemAnimation_verticalScaleAt(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItemAnimation_verticalScaleAt(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::qreal a0;
        const  ::QGraphicsItemAnimation *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bd", &sipSelf, sipType_QGraphicsItemAnimation, &sipCpp, &a0))
        {
             ::qreal sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->verticalScaleAt(a0);
            Py_END_ALLOW_THREADS

            return PyFloat_FromDouble(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItemAnimation, sipName_verticalScaleAt, doc_QGraphicsItemAnimation_verticalScaleAt);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItemAnimation_horizontalScaleAt, "horizontalScaleAt(self, float) -> float");

extern "C" {static PyObject *meth_QGraphicsItemAnimation_horizontalScaleAt(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItemAnimation_horizontalScaleAt(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::qreal a0;
        const  ::QGraphicsItemAnimation *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bd", &sipSelf, sipType_QGraphicsItemAnimation, &sipCpp, &a0))
        {
             ::qreal sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->horizontalScaleAt(a0);
            Py_END_ALLOW_THREADS

            return PyFloat_FromDouble(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItemAnimation, sipName_horizontalScaleAt, doc_QGraphicsItemAnimation_horizontalScaleAt);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItemAnimation_setScaleAt, "setScaleAt(self, float, float, float)");

extern "C" {static PyObject *meth_QGraphicsItemAnimation_setScaleAt(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItemAnimation_setScaleAt(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::qreal a0;
         ::qreal a1;
         ::qreal a2;
         ::QGraphicsItemAnimation *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bddd", &sipSelf, sipType_QGraphicsItemAnimation, &sipCpp, &a0, &a1, &a2))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setScaleAt(a0,a1,a2);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItemAnimation, sipName_setScaleAt, doc_QGraphicsItemAnimation_setScaleAt);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItemAnimation_verticalShearAt, "verticalShearAt(self, float) -> float");

extern "C" {static PyObject *meth_QGraphicsItemAnimation_verticalShearAt(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItemAnimation_verticalShearAt(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::qreal a0;
        const  ::QGraphicsItemAnimation *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bd", &sipSelf, sipType_QGraphicsItemAnimation, &sipCpp, &a0))
        {
             ::qreal sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->verticalShearAt(a0);
            Py_END_ALLOW_THREADS

            return PyFloat_FromDouble(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItemAnimation, sipName_verticalShearAt, doc_QGraphicsItemAnimation_verticalShearAt);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItemAnimation_horizontalShearAt, "horizontalShearAt(self, float) -> float");

extern "C" {static PyObject *meth_QGraphicsItemAnimation_horizontalShearAt(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItemAnimation_horizontalShearAt(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::qreal a0;
        const  ::QGraphicsItemAnimation *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bd", &sipSelf, sipType_QGraphicsItemAnimation, &sipCpp, &a0))
        {
             ::qreal sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->horizontalShearAt(a0);
            Py_END_ALLOW_THREADS

            return PyFloat_FromDouble(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItemAnimation, sipName_horizontalShearAt, doc_QGraphicsItemAnimation_horizontalShearAt);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItemAnimation_setShearAt, "setShearAt(self, float, float, float)");

extern "C" {static PyObject *meth_QGraphicsItemAnimation_setShearAt(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItemAnimation_setShearAt(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::qreal a0;
         ::qreal a1;
         ::qreal a2;
         ::QGraphicsItemAnimation *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bddd", &sipSelf, sipType_QGraphicsItemAnimation, &sipCpp, &a0, &a1, &a2))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setShearAt(a0,a1,a2);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItemAnimation, sipName_setShearAt, doc_QGraphicsItemAnimation_setShearAt);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItemAnimation_clear, "clear(self)");

extern "C" {static PyObject *meth_QGraphicsItemAnimation_clear(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItemAnimation_clear(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::QGraphicsItemAnimation *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItemAnimation, &sipCpp))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->clear();
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItemAnimation, sipName_clear, doc_QGraphicsItemAnimation_clear);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItemAnimation_reset, "reset(self)");

extern "C" {static PyObject *meth_QGraphicsItemAnimation_reset(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItemAnimation_reset(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::QGraphicsItemAnimation *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItemAnimation, &sipCpp))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->reset();
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItemAnimation, sipName_reset, doc_QGraphicsItemAnimation_reset);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItemAnimation_setStep, "setStep(self, float)");

extern "C" {static PyObject *meth_QGraphicsItemAnimation_setStep(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItemAnimation_setStep(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::qreal a0;
         ::QGraphicsItemAnimation *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bd", &sipSelf, sipType_QGraphicsItemAnimation, &sipCpp, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setStep(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItemAnimation, sipName_setStep, doc_QGraphicsItemAnimation_setStep);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItemAnimation_afterAnimationStep, "afterAnimationStep(self, float)");

extern "C" {static PyObject *meth_QGraphicsItemAnimation_afterAnimationStep(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItemAnimation_afterAnimationStep(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::qreal a0;
         ::QGraphicsItemAnimation *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pd", &sipSelf, sipType_QGraphicsItemAnimation, &sipCpp, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp-> ::QGraphicsItemAnimation::afterAnimationStep(a0) : sipCpp->afterAnimationStep(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItemAnimation, sipName_afterAnimationStep, doc_QGraphicsItemAnimation_afterAnimationStep);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItemAnimation_beforeAnimationStep, "beforeAnimationStep(self, float)");

extern "C" {static PyObject *meth_QGraphicsItemAnimation_beforeAnimationStep(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItemAnimation_beforeAnimationStep(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::qreal a0;
         ::QGraphicsItemAnimation *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pd", &sipSelf, sipType_QGraphicsItemAnimation, &sipCpp, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp-> ::QGraphicsItemAnimation::beforeAnimationStep(a0) : sipCpp->beforeAnimationStep(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItemAnimation, sipName_beforeAnimationStep, doc_QGraphicsItemAnimation_beforeAnimationStep);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItemAnimation_posList, "posList(self) -> object");

extern "C" {static PyObject *meth_QGraphicsItemAnimation_posList(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItemAnimation_posList(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QGraphicsItemAnimation *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItemAnimation, &sipCpp))
        {
            QList<QPair< ::qreal,QPointF> >*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QList<QPair< ::qreal,QPointF> >(sipCpp->posList());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QList_0600QPair_2400_0100QPointF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItemAnimation, sipName_posList, doc_QGraphicsItemAnimation_posList);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItemAnimation_rotationList, "rotationList(self) -> List[Tuple[float, float]]");

extern "C" {static PyObject *meth_QGraphicsItemAnimation_rotationList(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItemAnimation_rotationList(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QGraphicsItemAnimation *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItemAnimation, &sipCpp))
        {
             ::QList<QPair< ::qreal, ::qreal> >*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::QList<QPair< ::qreal, ::qreal> >(sipCpp->rotationList());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QList_0600QPair_2400_2400,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItemAnimation, sipName_rotationList, doc_QGraphicsItemAnimation_rotationList);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItemAnimation_translationList, "translationList(self) -> List[Tuple[float, QPointF]]");

extern "C" {static PyObject *meth_QGraphicsItemAnimation_translationList(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItemAnimation_translationList(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QGraphicsItemAnimation *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItemAnimation, &sipCpp))
        {
            QList<QPair< ::qreal,QPointF> >*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QList<QPair< ::qreal,QPointF> >(sipCpp->translationList());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QList_0600QPair_2400_0100QPointF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItemAnimation, sipName_translationList, doc_QGraphicsItemAnimation_translationList);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItemAnimation_scaleList, "scaleList(self) -> List[Tuple[float, QPointF]]");

extern "C" {static PyObject *meth_QGraphicsItemAnimation_scaleList(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItemAnimation_scaleList(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QGraphicsItemAnimation *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItemAnimation, &sipCpp))
        {
            QList<QPair< ::qreal,QPointF> >*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QList<QPair< ::qreal,QPointF> >(sipCpp->scaleList());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QList_0600QPair_2400_0100QPointF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItemAnimation, sipName_scaleList, doc_QGraphicsItemAnimation_scaleList);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItemAnimation_shearList, "shearList(self) -> List[Tuple[float, QPointF]]");

extern "C" {static PyObject *meth_QGraphicsItemAnimation_shearList(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItemAnimation_shearList(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QGraphicsItemAnimation *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItemAnimation, &sipCpp))
        {
            QList<QPair< ::qreal,QPointF> >*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QList<QPair< ::qreal,QPointF> >(sipCpp->shearList());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QList_0600QPair_2400_0100QPointF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItemAnimation, sipName_shearList, doc_QGraphicsItemAnimation_shearList);

    return NULL;
}


/* Cast a pointer to a type somewhere in its inheritance hierarchy. */
extern "C" {static void *cast_QGraphicsItemAnimation(void *, const sipTypeDef *);}
static void *cast_QGraphicsItemAnimation(void *sipCppV, const sipTypeDef *targetType)
{
     ::QGraphicsItemAnimation *sipCpp = reinterpret_cast< ::QGraphicsItemAnimation *>(sipCppV);

    if (targetType == sipType_QObject)
        return static_cast< ::QObject *>(sipCpp);

    return sipCppV;
}


/* Call the instance's destructor. */
extern "C" {static void release_QGraphicsItemAnimation(void *, int);}
static void release_QGraphicsItemAnimation(void *sipCppV, int)
{
     ::QGraphicsItemAnimation *sipCpp = reinterpret_cast< ::QGraphicsItemAnimation *>(sipCppV);

    Py_BEGIN_ALLOW_THREADS

    if (QThread::currentThread() == sipCpp->thread())
        delete sipCpp;
    else
        sipCpp->deleteLater();

    Py_END_ALLOW_THREADS
}


extern "C" {static void dealloc_QGraphicsItemAnimation(sipSimpleWrapper *);}
static void dealloc_QGraphicsItemAnimation(sipSimpleWrapper *sipSelf)
{
    if (sipIsDerivedClass(sipSelf))
        reinterpret_cast<sipQGraphicsItemAnimation *>(sipGetAddress(sipSelf))->sipPySelf = NULL;

    if (sipIsOwnedByPython(sipSelf))
    {
        release_QGraphicsItemAnimation(sipGetAddress(sipSelf), sipIsDerivedClass(sipSelf));
    }
}


extern "C" {static void *init_type_QGraphicsItemAnimation(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_QGraphicsItemAnimation(sipSimpleWrapper *sipSelf, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **sipOwner, PyObject **sipParseErr)
{
    sipQGraphicsItemAnimation *sipCpp = 0;

    {
         ::QObject* a0 = 0;

        static const char *sipKwdList[] = {
            sipName_parent,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "|JH", sipType_QObject, &a0, sipOwner))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp = new sipQGraphicsItemAnimation(a0);
            Py_END_ALLOW_THREADS

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    return NULL;
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_QGraphicsItemAnimation[] = {{34, 0, 1}};


static PyMethodDef methods_QGraphicsItemAnimation[] = {
    {SIP_MLNAME_CAST(sipName_afterAnimationStep), meth_QGraphicsItemAnimation_afterAnimationStep, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItemAnimation_afterAnimationStep)},
    {SIP_MLNAME_CAST(sipName_beforeAnimationStep), meth_QGraphicsItemAnimation_beforeAnimationStep, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItemAnimation_beforeAnimationStep)},
    {SIP_MLNAME_CAST(sipName_clear), meth_QGraphicsItemAnimation_clear, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItemAnimation_clear)},
    {SIP_MLNAME_CAST(sipName_horizontalScaleAt), meth_QGraphicsItemAnimation_horizontalScaleAt, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItemAnimation_horizontalScaleAt)},
    {SIP_MLNAME_CAST(sipName_horizontalShearAt), meth_QGraphicsItemAnimation_horizontalShearAt, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItemAnimation_horizontalShearAt)},
    {SIP_MLNAME_CAST(sipName_item), meth_QGraphicsItemAnimation_item, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItemAnimation_item)},
    {SIP_MLNAME_CAST(sipName_matrixAt), meth_QGraphicsItemAnimation_matrixAt, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItemAnimation_matrixAt)},
    {SIP_MLNAME_CAST(sipName_posAt), meth_QGraphicsItemAnimation_posAt, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItemAnimation_posAt)},
    {SIP_MLNAME_CAST(sipName_posList), meth_QGraphicsItemAnimation_posList, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItemAnimation_posList)},
    {SIP_MLNAME_CAST(sipName_reset), meth_QGraphicsItemAnimation_reset, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItemAnimation_reset)},
    {SIP_MLNAME_CAST(sipName_rotationAt), meth_QGraphicsItemAnimation_rotationAt, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItemAnimation_rotationAt)},
    {SIP_MLNAME_CAST(sipName_rotationList), meth_QGraphicsItemAnimation_rotationList, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItemAnimation_rotationList)},
    {SIP_MLNAME_CAST(sipName_scaleList), meth_QGraphicsItemAnimation_scaleList, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItemAnimation_scaleList)},
    {SIP_MLNAME_CAST(sipName_setItem), meth_QGraphicsItemAnimation_setItem, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItemAnimation_setItem)},
    {SIP_MLNAME_CAST(sipName_setPosAt), meth_QGraphicsItemAnimation_setPosAt, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItemAnimation_setPosAt)},
    {SIP_MLNAME_CAST(sipName_setRotationAt), meth_QGraphicsItemAnimation_setRotationAt, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItemAnimation_setRotationAt)},
    {SIP_MLNAME_CAST(sipName_setScaleAt), meth_QGraphicsItemAnimation_setScaleAt, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItemAnimation_setScaleAt)},
    {SIP_MLNAME_CAST(sipName_setShearAt), meth_QGraphicsItemAnimation_setShearAt, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItemAnimation_setShearAt)},
    {SIP_MLNAME_CAST(sipName_setStep), meth_QGraphicsItemAnimation_setStep, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItemAnimation_setStep)},
    {SIP_MLNAME_CAST(sipName_setTimeLine), meth_QGraphicsItemAnimation_setTimeLine, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItemAnimation_setTimeLine)},
    {SIP_MLNAME_CAST(sipName_setTranslationAt), meth_QGraphicsItemAnimation_setTranslationAt, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItemAnimation_setTranslationAt)},
    {SIP_MLNAME_CAST(sipName_shearList), meth_QGraphicsItemAnimation_shearList, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItemAnimation_shearList)},
    {SIP_MLNAME_CAST(sipName_timeLine), meth_QGraphicsItemAnimation_timeLine, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItemAnimation_timeLine)},
    {SIP_MLNAME_CAST(sipName_translationList), meth_QGraphicsItemAnimation_translationList, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItemAnimation_translationList)},
    {SIP_MLNAME_CAST(sipName_verticalScaleAt), meth_QGraphicsItemAnimation_verticalScaleAt, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItemAnimation_verticalScaleAt)},
    {SIP_MLNAME_CAST(sipName_verticalShearAt), meth_QGraphicsItemAnimation_verticalShearAt, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItemAnimation_verticalShearAt)},
    {SIP_MLNAME_CAST(sipName_xTranslationAt), meth_QGraphicsItemAnimation_xTranslationAt, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItemAnimation_xTranslationAt)},
    {SIP_MLNAME_CAST(sipName_yTranslationAt), meth_QGraphicsItemAnimation_yTranslationAt, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItemAnimation_yTranslationAt)}
};

PyDoc_STRVAR(doc_QGraphicsItemAnimation, "\1QGraphicsItemAnimation(parent: QObject = None)");


static pyqt4ClassPluginDef plugin_QGraphicsItemAnimation = {
    & ::QGraphicsItemAnimation::staticMetaObject,
    0,
    0
};


sipClassTypeDef sipTypeDef_QtGui_QGraphicsItemAnimation = {
    {
        -1,
        0,
        0,
        SIP_TYPE_SCC|SIP_TYPE_CLASS,
        sipNameNr_QGraphicsItemAnimation,
        {0},
        &plugin_QGraphicsItemAnimation
    },
    {
        sipNameNr_QGraphicsItemAnimation,
        {0, 0, 1},
        28, methods_QGraphicsItemAnimation,
        0, 0,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    doc_QGraphicsItemAnimation,
    -1,
    -1,
    supers_QGraphicsItemAnimation,
    0,
    init_type_QGraphicsItemAnimation,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_QGraphicsItemAnimation,
    0,
    0,
    0,
    release_QGraphicsItemAnimation,
    cast_QGraphicsItemAnimation,
    0,
    0,
    0,
    0,
    0,
    0
};
