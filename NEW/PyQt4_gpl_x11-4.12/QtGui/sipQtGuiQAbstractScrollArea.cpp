/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.19.2
 *
 * Copyright (c) 2016 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt4.
 * 
 * This file may be used under the terms of the GNU General Public License
 * version 3.0 as published by the Free Software Foundation and appearing in
 * the file LICENSE included in the packaging of this file.  Please review the
 * following information to ensure the GNU General Public License version 3.0
 * requirements will be met: http://www.gnu.org/copyleft/gpl.html.
 * 
 * If you do not wish to use this file under the terms of the GPL version 3.0
 * then you may purchase a commercial license.  For more information contact
 * info@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtGui.h"

#line 26 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qabstractscrollarea.sip"
#include <qabstractscrollarea.h>
#line 29 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQAbstractScrollArea.cpp"

#line 28 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qwidget.sip"
#include <qwidget.h>
#line 33 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 115 "sip/QtCore/qlist.sip"
#include <qlist.h>
#line 36 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 39 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 26 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qscrollbar.sip"
#include <qscrollbar.h>
#line 42 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 474 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 45 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 739 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 48 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 792 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 51 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 765 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 54 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 781 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 57 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 618 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 60 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 347 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 63 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 252 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 66 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 524 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 69 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 561 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 72 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 26 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 75 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 28 "sip/QtCore/qmargins.sip"
#include <qmargins.h>
#line 78 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 26 "sip/QtCore/qsize.sip"
#include <qsize.h>
#line 81 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 84 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 26 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qpainter.sip"
#include <qpainter.h>
#line 87 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 26 "sip/QtCore/qrect.sip"
#include <qrect.h>
#line 90 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 26 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qframe.sip"
#include <qframe.h>
#line 93 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 96 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 99 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 28 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qgraphicseffect.sip"
#include <qgraphicseffect.h>
#line 102 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 28 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qgraphicsproxywidget.sip"
#include <qgraphicsproxywidget.h>
#line 105 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 27 "sip/QtCore/qstring.sip"
#include <qstring.h>
#line 108 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 26 "sip/QtCore/qlocale.sip"
#include <qlocale.h>
#line 111 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 26 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qpaintdevice.sip"
#include <qpaintdevice.h>
#line 114 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 26 "sip/QtCore/qpoint.sip"
#include <qpoint.h>
#line 117 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 26 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qregion.sip"
#include <qregion.h>
#line 120 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 28 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qwidget.sip"
#include <qwidget.h>
#line 123 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 32 "sip/QtCore/qbytearray.sip"
#include <qbytearray.h>
#line 126 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 26 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qfontinfo.sip"
#include <qfontinfo.h>
#line 129 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 26 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qfontmetrics.sip"
#include <qfontmetrics.h>
#line 132 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 26 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qfont.sip"
#include <qfont.h>
#line 135 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 138 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 26 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qpalette.sip"
#include <qpalette.h>
#line 141 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 265 "sip/QtCore/qvariant.sip"
#include <qvariant.h>
#line 144 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 647 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 147 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 607 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 150 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 596 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 153 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 854 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 156 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 403 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 159 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 574 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 162 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 548 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 165 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 505 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 168 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 28 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qinputcontext.sip"
#include <qinputcontext.h>
#line 171 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 52 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qpaintengine.sip"
#include <qpaintengine.h>
#line 174 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 34 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qx11info_x11.sip"
#include <qx11info_x11.h>
#line 177 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 115 "sip/QtCore/qlist.sip"
#include <qlist.h>
#line 180 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 26 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qaction.sip"
#include <qaction.h>
#line 183 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 26 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qlayout.sip"
#include <qlayout.h>
#line 186 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 26 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qsizepolicy.sip"
#include <qsizepolicy.h>
#line 189 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 192 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 26 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qkeysequence.sip"
#include <qkeysequence.h>
#line 195 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 26 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qcursor.sip"
#include <qcursor.h>
#line 198 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 26 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qicon.sip"
#include <qicon.h>
#line 201 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 26 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qbitmap.sip"
#include <qbitmap.h>
#line 204 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 26 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/sip/QtGui/qstyle.sip"
#include <qstyle.h>
#line 207 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 368 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 210 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 351 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 213 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 29 "sip/QtCore/qobject.sip"
#include <qobject.h>
#line 216 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 28 "sip/QtCore/qlist.sip"
#include <qlist.h>
#line 219 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 115 "sip/QtCore/qlist.sip"
#include <qlist.h>
#line 222 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 26 "sip/QtCore/qthread.sip"
#include <qthread.h>
#line 225 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 26 "sip/QtCore/qregexp.sip"
#include <qregexp.h>
#line 228 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 26 "sip/QtCore/qobjectdefs.sip"
#include <qobjectdefs.h>
#line 231 "/home/thais/Faculdade/TCC/NEW/PyQt4_gpl_x11-4.12/QtGui/sipQtGuiQAbstractScrollArea.cpp"


class sipQAbstractScrollArea : public  ::QAbstractScrollArea
{
public:
    sipQAbstractScrollArea( ::QWidget*);
    virtual ~sipQAbstractScrollArea();

    int qt_metacall(QMetaObject::Call,int,void **);
    void *qt_metacast(const char *);
    const QMetaObject *metaObject() const;

    /*
     * There is a protected method for every virtual method visible from
     * this class.
     */
protected:
    void scrollContentsBy(int,int);
    bool viewportEvent( ::QEvent*);
    void languageChange();
    void windowActivationChange(bool);
    void fontChange(const  ::QFont&);
    void paletteChange(const  ::QPalette&);
    void enabledChange(bool);
    bool focusNextPrevChild(bool);
     ::QVariant inputMethodQuery( ::Qt::InputMethodQuery) const;
    void inputMethodEvent( ::QInputMethodEvent*);
    void changeEvent( ::QEvent*);
    void hideEvent( ::QHideEvent*);
    void showEvent( ::QShowEvent*);
    void dropEvent( ::QDropEvent*);
    void dragLeaveEvent( ::QDragLeaveEvent*);
    void dragMoveEvent( ::QDragMoveEvent*);
    void dragEnterEvent( ::QDragEnterEvent*);
    void actionEvent( ::QActionEvent*);
    void tabletEvent( ::QTabletEvent*);
    void contextMenuEvent( ::QContextMenuEvent*);
    void closeEvent( ::QCloseEvent*);
    void resizeEvent( ::QResizeEvent*);
    void moveEvent( ::QMoveEvent*);
    void paintEvent( ::QPaintEvent*);
    void leaveEvent( ::QEvent*);
    void enterEvent( ::QEvent*);
    void focusOutEvent( ::QFocusEvent*);
    void focusInEvent( ::QFocusEvent*);
    void keyReleaseEvent( ::QKeyEvent*);
    void keyPressEvent( ::QKeyEvent*);
    void wheelEvent( ::QWheelEvent*);
    void mouseMoveEvent( ::QMouseEvent*);
    void mouseDoubleClickEvent( ::QMouseEvent*);
    void mouseReleaseEvent( ::QMouseEvent*);
    void mousePressEvent( ::QMouseEvent*);
    int heightForWidth(int) const;
     ::QSize minimumSizeHint() const;
     ::QSize sizeHint() const;
    void setVisible(bool);
    int devType() const;
     ::QPaintEngine* paintEngine() const;
    int metric( ::QPaintDevice::PaintDeviceMetric) const;
    bool event( ::QEvent*);
    bool eventFilter( ::QObject*, ::QEvent*);
    void timerEvent( ::QTimerEvent*);
    void childEvent( ::QChildEvent*);
    void customEvent( ::QEvent*);
    void connectNotify(const char*);
    void disconnectNotify(const char*);

public:
    sipSimpleWrapper *sipPySelf;

private:
    sipQAbstractScrollArea(const sipQAbstractScrollArea &);
    sipQAbstractScrollArea &operator = (const sipQAbstractScrollArea &);

    char sipPyMethods[49];
};

sipQAbstractScrollArea::sipQAbstractScrollArea( ::QWidget*a0):  ::QAbstractScrollArea(a0), sipPySelf(0)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQAbstractScrollArea::~sipQAbstractScrollArea()
{
    sipCommonDtor(sipPySelf);
}

const QMetaObject *sipQAbstractScrollArea::metaObject() const
{
    return sip_QtGui_qt_metaobject(sipPySelf,sipType_QAbstractScrollArea);
}

int sipQAbstractScrollArea::qt_metacall(QMetaObject::Call _c,int _id,void **_a)
{
    _id =  ::QAbstractScrollArea::qt_metacall(_c,_id,_a);

    if (_id >= 0)
        _id = sip_QtGui_qt_metacall(sipPySelf,sipType_QAbstractScrollArea,_c,_id,_a);

    return _id;
}

void *sipQAbstractScrollArea::qt_metacast(const char *_clname)
{
    return (sip_QtGui_qt_metacast(sipPySelf, sipType_QAbstractScrollArea, _clname)) ? this :  ::QAbstractScrollArea::qt_metacast(_clname);
}

void sipQAbstractScrollArea::scrollContentsBy(int a0,int a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[0],sipPySelf,NULL,sipName_scrollContentsBy);

    if (!sipMeth)
    {
         ::QAbstractScrollArea::scrollContentsBy(a0,a1);
        return;
    }

    extern void sipVH_QtGui_43(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, int,int);

    sipVH_QtGui_43(sipGILState, 0, sipPySelf, sipMeth, a0, a1);
}

bool sipQAbstractScrollArea::viewportEvent( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[1],sipPySelf,NULL,sipName_viewportEvent);

    if (!sipMeth)
        return  ::QAbstractScrollArea::viewportEvent(a0);

    extern bool sipVH_QtGui_7(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    return sipVH_QtGui_7(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQAbstractScrollArea::languageChange()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[2],sipPySelf,NULL,sipName_languageChange);

    if (!sipMeth)
    {
         ::QAbstractScrollArea::languageChange();
        return;
    }

    extern void sipVH_QtGui_34(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    sipVH_QtGui_34(sipGILState, 0, sipPySelf, sipMeth);
}

void sipQAbstractScrollArea::windowActivationChange(bool a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[3],sipPySelf,NULL,sipName_windowActivationChange);

    if (!sipMeth)
    {
         ::QAbstractScrollArea::windowActivationChange(a0);
        return;
    }

    extern void sipVH_QtGui_9(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, bool);

    sipVH_QtGui_9(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQAbstractScrollArea::fontChange(const  ::QFont& a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[4],sipPySelf,NULL,sipName_fontChange);

    if (!sipMeth)
    {
         ::QAbstractScrollArea::fontChange(a0);
        return;
    }

    extern void sipVH_QtGui_33(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QFont&);

    sipVH_QtGui_33(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQAbstractScrollArea::paletteChange(const  ::QPalette& a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[5],sipPySelf,NULL,sipName_paletteChange);

    if (!sipMeth)
    {
         ::QAbstractScrollArea::paletteChange(a0);
        return;
    }

    extern void sipVH_QtGui_32(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QPalette&);

    sipVH_QtGui_32(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQAbstractScrollArea::enabledChange(bool a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[6],sipPySelf,NULL,sipName_enabledChange);

    if (!sipMeth)
    {
         ::QAbstractScrollArea::enabledChange(a0);
        return;
    }

    extern void sipVH_QtGui_9(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, bool);

    sipVH_QtGui_9(sipGILState, 0, sipPySelf, sipMeth, a0);
}

bool sipQAbstractScrollArea::focusNextPrevChild(bool a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[7],sipPySelf,NULL,sipName_focusNextPrevChild);

    if (!sipMeth)
        return  ::QAbstractScrollArea::focusNextPrevChild(a0);

    extern bool sipVH_QtGui_31(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, bool);

    return sipVH_QtGui_31(sipGILState, 0, sipPySelf, sipMeth, a0);
}

 ::QVariant sipQAbstractScrollArea::inputMethodQuery( ::Qt::InputMethodQuery a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[8]),sipPySelf,NULL,sipName_inputMethodQuery);

    if (!sipMeth)
        return  ::QAbstractScrollArea::inputMethodQuery(a0);

    extern  ::QVariant sipVH_QtGui_30(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::Qt::InputMethodQuery);

    return sipVH_QtGui_30(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQAbstractScrollArea::inputMethodEvent( ::QInputMethodEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[9],sipPySelf,NULL,sipName_inputMethodEvent);

    if (!sipMeth)
    {
         ::QAbstractScrollArea::inputMethodEvent(a0);
        return;
    }

    extern void sipVH_QtGui_29(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QInputMethodEvent*);

    sipVH_QtGui_29(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQAbstractScrollArea::changeEvent( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[10],sipPySelf,NULL,sipName_changeEvent);

    if (!sipMeth)
    {
         ::QAbstractScrollArea::changeEvent(a0);
        return;
    }

    extern void sipVH_QtGui_3(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    sipVH_QtGui_3(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQAbstractScrollArea::hideEvent( ::QHideEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[11],sipPySelf,NULL,sipName_hideEvent);

    if (!sipMeth)
    {
         ::QAbstractScrollArea::hideEvent(a0);
        return;
    }

    extern void sipVH_QtGui_28(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QHideEvent*);

    sipVH_QtGui_28(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQAbstractScrollArea::showEvent( ::QShowEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[12],sipPySelf,NULL,sipName_showEvent);

    if (!sipMeth)
    {
         ::QAbstractScrollArea::showEvent(a0);
        return;
    }

    extern void sipVH_QtGui_27(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QShowEvent*);

    sipVH_QtGui_27(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQAbstractScrollArea::dropEvent( ::QDropEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[13],sipPySelf,NULL,sipName_dropEvent);

    if (!sipMeth)
    {
         ::QAbstractScrollArea::dropEvent(a0);
        return;
    }

    extern void sipVH_QtGui_26(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QDropEvent*);

    sipVH_QtGui_26(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQAbstractScrollArea::dragLeaveEvent( ::QDragLeaveEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[14],sipPySelf,NULL,sipName_dragLeaveEvent);

    if (!sipMeth)
    {
         ::QAbstractScrollArea::dragLeaveEvent(a0);
        return;
    }

    extern void sipVH_QtGui_25(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QDragLeaveEvent*);

    sipVH_QtGui_25(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQAbstractScrollArea::dragMoveEvent( ::QDragMoveEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[15],sipPySelf,NULL,sipName_dragMoveEvent);

    if (!sipMeth)
    {
         ::QAbstractScrollArea::dragMoveEvent(a0);
        return;
    }

    extern void sipVH_QtGui_24(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QDragMoveEvent*);

    sipVH_QtGui_24(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQAbstractScrollArea::dragEnterEvent( ::QDragEnterEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[16],sipPySelf,NULL,sipName_dragEnterEvent);

    if (!sipMeth)
    {
         ::QAbstractScrollArea::dragEnterEvent(a0);
        return;
    }

    extern void sipVH_QtGui_23(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QDragEnterEvent*);

    sipVH_QtGui_23(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQAbstractScrollArea::actionEvent( ::QActionEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[17],sipPySelf,NULL,sipName_actionEvent);

    if (!sipMeth)
    {
         ::QAbstractScrollArea::actionEvent(a0);
        return;
    }

    extern void sipVH_QtGui_22(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QActionEvent*);

    sipVH_QtGui_22(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQAbstractScrollArea::tabletEvent( ::QTabletEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[18],sipPySelf,NULL,sipName_tabletEvent);

    if (!sipMeth)
    {
         ::QAbstractScrollArea::tabletEvent(a0);
        return;
    }

    extern void sipVH_QtGui_21(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QTabletEvent*);

    sipVH_QtGui_21(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQAbstractScrollArea::contextMenuEvent( ::QContextMenuEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[19],sipPySelf,NULL,sipName_contextMenuEvent);

    if (!sipMeth)
    {
         ::QAbstractScrollArea::contextMenuEvent(a0);
        return;
    }

    extern void sipVH_QtGui_20(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QContextMenuEvent*);

    sipVH_QtGui_20(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQAbstractScrollArea::closeEvent( ::QCloseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[20],sipPySelf,NULL,sipName_closeEvent);

    if (!sipMeth)
    {
         ::QAbstractScrollArea::closeEvent(a0);
        return;
    }

    extern void sipVH_QtGui_19(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QCloseEvent*);

    sipVH_QtGui_19(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQAbstractScrollArea::resizeEvent( ::QResizeEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[21],sipPySelf,NULL,sipName_resizeEvent);

    if (!sipMeth)
    {
         ::QAbstractScrollArea::resizeEvent(a0);
        return;
    }

    extern void sipVH_QtGui_18(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QResizeEvent*);

    sipVH_QtGui_18(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQAbstractScrollArea::moveEvent( ::QMoveEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[22],sipPySelf,NULL,sipName_moveEvent);

    if (!sipMeth)
    {
         ::QAbstractScrollArea::moveEvent(a0);
        return;
    }

    extern void sipVH_QtGui_17(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QMoveEvent*);

    sipVH_QtGui_17(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQAbstractScrollArea::paintEvent( ::QPaintEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[23],sipPySelf,NULL,sipName_paintEvent);

    if (!sipMeth)
    {
         ::QAbstractScrollArea::paintEvent(a0);
        return;
    }

    extern void sipVH_QtGui_16(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QPaintEvent*);

    sipVH_QtGui_16(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQAbstractScrollArea::leaveEvent( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[24],sipPySelf,NULL,sipName_leaveEvent);

    if (!sipMeth)
    {
         ::QAbstractScrollArea::leaveEvent(a0);
        return;
    }

    extern void sipVH_QtGui_3(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    sipVH_QtGui_3(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQAbstractScrollArea::enterEvent( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[25],sipPySelf,NULL,sipName_enterEvent);

    if (!sipMeth)
    {
         ::QAbstractScrollArea::enterEvent(a0);
        return;
    }

    extern void sipVH_QtGui_3(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    sipVH_QtGui_3(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQAbstractScrollArea::focusOutEvent( ::QFocusEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[26],sipPySelf,NULL,sipName_focusOutEvent);

    if (!sipMeth)
    {
         ::QAbstractScrollArea::focusOutEvent(a0);
        return;
    }

    extern void sipVH_QtGui_15(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QFocusEvent*);

    sipVH_QtGui_15(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQAbstractScrollArea::focusInEvent( ::QFocusEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[27],sipPySelf,NULL,sipName_focusInEvent);

    if (!sipMeth)
    {
         ::QAbstractScrollArea::focusInEvent(a0);
        return;
    }

    extern void sipVH_QtGui_15(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QFocusEvent*);

    sipVH_QtGui_15(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQAbstractScrollArea::keyReleaseEvent( ::QKeyEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[28],sipPySelf,NULL,sipName_keyReleaseEvent);

    if (!sipMeth)
    {
         ::QAbstractScrollArea::keyReleaseEvent(a0);
        return;
    }

    extern void sipVH_QtGui_14(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QKeyEvent*);

    sipVH_QtGui_14(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQAbstractScrollArea::keyPressEvent( ::QKeyEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[29],sipPySelf,NULL,sipName_keyPressEvent);

    if (!sipMeth)
    {
         ::QAbstractScrollArea::keyPressEvent(a0);
        return;
    }

    extern void sipVH_QtGui_14(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QKeyEvent*);

    sipVH_QtGui_14(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQAbstractScrollArea::wheelEvent( ::QWheelEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[30],sipPySelf,NULL,sipName_wheelEvent);

    if (!sipMeth)
    {
         ::QAbstractScrollArea::wheelEvent(a0);
        return;
    }

    extern void sipVH_QtGui_13(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QWheelEvent*);

    sipVH_QtGui_13(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQAbstractScrollArea::mouseMoveEvent( ::QMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[31],sipPySelf,NULL,sipName_mouseMoveEvent);

    if (!sipMeth)
    {
         ::QAbstractScrollArea::mouseMoveEvent(a0);
        return;
    }

    extern void sipVH_QtGui_12(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QMouseEvent*);

    sipVH_QtGui_12(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQAbstractScrollArea::mouseDoubleClickEvent( ::QMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[32],sipPySelf,NULL,sipName_mouseDoubleClickEvent);

    if (!sipMeth)
    {
         ::QAbstractScrollArea::mouseDoubleClickEvent(a0);
        return;
    }

    extern void sipVH_QtGui_12(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QMouseEvent*);

    sipVH_QtGui_12(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQAbstractScrollArea::mouseReleaseEvent( ::QMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[33],sipPySelf,NULL,sipName_mouseReleaseEvent);

    if (!sipMeth)
    {
         ::QAbstractScrollArea::mouseReleaseEvent(a0);
        return;
    }

    extern void sipVH_QtGui_12(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QMouseEvent*);

    sipVH_QtGui_12(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQAbstractScrollArea::mousePressEvent( ::QMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[34],sipPySelf,NULL,sipName_mousePressEvent);

    if (!sipMeth)
    {
         ::QAbstractScrollArea::mousePressEvent(a0);
        return;
    }

    extern void sipVH_QtGui_12(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QMouseEvent*);

    sipVH_QtGui_12(sipGILState, 0, sipPySelf, sipMeth, a0);
}

int sipQAbstractScrollArea::heightForWidth(int a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[35]),sipPySelf,NULL,sipName_heightForWidth);

    if (!sipMeth)
        return  ::QAbstractScrollArea::heightForWidth(a0);

    extern int sipVH_QtGui_11(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, int);

    return sipVH_QtGui_11(sipGILState, 0, sipPySelf, sipMeth, a0);
}

 ::QSize sipQAbstractScrollArea::minimumSizeHint() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[36]),sipPySelf,NULL,sipName_minimumSizeHint);

    if (!sipMeth)
        return  ::QAbstractScrollArea::minimumSizeHint();

    extern  ::QSize sipVH_QtGui_10(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtGui_10(sipGILState, 0, sipPySelf, sipMeth);
}

 ::QSize sipQAbstractScrollArea::sizeHint() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[37]),sipPySelf,NULL,sipName_sizeHint);

    if (!sipMeth)
        return  ::QAbstractScrollArea::sizeHint();

    extern  ::QSize sipVH_QtGui_10(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtGui_10(sipGILState, 0, sipPySelf, sipMeth);
}

void sipQAbstractScrollArea::setVisible(bool a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[38],sipPySelf,NULL,sipName_setVisible);

    if (!sipMeth)
    {
         ::QAbstractScrollArea::setVisible(a0);
        return;
    }

    extern void sipVH_QtGui_9(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, bool);

    sipVH_QtGui_9(sipGILState, 0, sipPySelf, sipMeth, a0);
}

int sipQAbstractScrollArea::devType() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[39]),sipPySelf,NULL,sipName_devType);

    if (!sipMeth)
        return  ::QAbstractScrollArea::devType();

    extern int sipVH_QtGui_8(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtGui_8(sipGILState, 0, sipPySelf, sipMeth);
}

 ::QPaintEngine* sipQAbstractScrollArea::paintEngine() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[40]),sipPySelf,NULL,sipName_paintEngine);

    if (!sipMeth)
        return  ::QAbstractScrollArea::paintEngine();

    extern  ::QPaintEngine* sipVH_QtGui_0(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtGui_0(sipGILState, 0, sipPySelf, sipMeth);
}

int sipQAbstractScrollArea::metric( ::QPaintDevice::PaintDeviceMetric a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[41]),sipPySelf,NULL,sipName_metric);

    if (!sipMeth)
        return  ::QAbstractScrollArea::metric(a0);

    extern int sipVH_QtGui_1(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QPaintDevice::PaintDeviceMetric);

    return sipVH_QtGui_1(sipGILState, 0, sipPySelf, sipMeth, a0);
}

bool sipQAbstractScrollArea::event( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[42],sipPySelf,NULL,sipName_event);

    if (!sipMeth)
        return  ::QAbstractScrollArea::event(a0);

    extern bool sipVH_QtGui_7(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    return sipVH_QtGui_7(sipGILState, 0, sipPySelf, sipMeth, a0);
}

bool sipQAbstractScrollArea::eventFilter( ::QObject*a0, ::QEvent*a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[43],sipPySelf,NULL,sipName_eventFilter);

    if (!sipMeth)
        return  ::QAbstractScrollArea::eventFilter(a0,a1);

    extern bool sipVH_QtGui_6(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QObject*, ::QEvent*);

    return sipVH_QtGui_6(sipGILState, 0, sipPySelf, sipMeth, a0, a1);
}

void sipQAbstractScrollArea::timerEvent( ::QTimerEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[44],sipPySelf,NULL,sipName_timerEvent);

    if (!sipMeth)
    {
         ::QAbstractScrollArea::timerEvent(a0);
        return;
    }

    extern void sipVH_QtGui_5(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QTimerEvent*);

    sipVH_QtGui_5(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQAbstractScrollArea::childEvent( ::QChildEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[45],sipPySelf,NULL,sipName_childEvent);

    if (!sipMeth)
    {
         ::QAbstractScrollArea::childEvent(a0);
        return;
    }

    extern void sipVH_QtGui_4(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QChildEvent*);

    sipVH_QtGui_4(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQAbstractScrollArea::customEvent( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[46],sipPySelf,NULL,sipName_customEvent);

    if (!sipMeth)
    {
         ::QAbstractScrollArea::customEvent(a0);
        return;
    }

    extern void sipVH_QtGui_3(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    sipVH_QtGui_3(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQAbstractScrollArea::connectNotify(const char*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[47],sipPySelf,NULL,sipName_connectNotify);

    if (!sipMeth)
    {
         ::QAbstractScrollArea::connectNotify(a0);
        return;
    }

    extern void sipVH_QtGui_2(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const char*);

    sipVH_QtGui_2(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQAbstractScrollArea::disconnectNotify(const char*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[48],sipPySelf,NULL,sipName_disconnectNotify);

    if (!sipMeth)
    {
         ::QAbstractScrollArea::disconnectNotify(a0);
        return;
    }

    extern void sipVH_QtGui_2(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const char*);

    sipVH_QtGui_2(sipGILState, 0, sipPySelf, sipMeth, a0);
}


PyDoc_STRVAR(doc_QAbstractScrollArea_verticalScrollBarPolicy, "verticalScrollBarPolicy(self) -> Qt.ScrollBarPolicy");

extern "C" {static PyObject *meth_QAbstractScrollArea_verticalScrollBarPolicy(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_verticalScrollBarPolicy(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QAbstractScrollArea, &sipCpp))
        {
             ::Qt::ScrollBarPolicy sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->verticalScrollBarPolicy();
            Py_END_ALLOW_THREADS

            return sipConvertFromEnum(sipRes,sipType_Qt_ScrollBarPolicy);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_verticalScrollBarPolicy, doc_QAbstractScrollArea_verticalScrollBarPolicy);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractScrollArea_setVerticalScrollBarPolicy, "setVerticalScrollBarPolicy(self, Qt.ScrollBarPolicy)");

extern "C" {static PyObject *meth_QAbstractScrollArea_setVerticalScrollBarPolicy(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_setVerticalScrollBarPolicy(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::Qt::ScrollBarPolicy a0;
         ::QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BE", &sipSelf, sipType_QAbstractScrollArea, &sipCpp, sipType_Qt_ScrollBarPolicy, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setVerticalScrollBarPolicy(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_setVerticalScrollBarPolicy, doc_QAbstractScrollArea_setVerticalScrollBarPolicy);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractScrollArea_verticalScrollBar, "verticalScrollBar(self) -> QScrollBar");

extern "C" {static PyObject *meth_QAbstractScrollArea_verticalScrollBar(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_verticalScrollBar(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QAbstractScrollArea, &sipCpp))
        {
             ::QScrollBar*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->verticalScrollBar();
            Py_END_ALLOW_THREADS

            return sipConvertFromType(sipRes,sipType_QScrollBar,sipSelf);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_verticalScrollBar, doc_QAbstractScrollArea_verticalScrollBar);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractScrollArea_horizontalScrollBarPolicy, "horizontalScrollBarPolicy(self) -> Qt.ScrollBarPolicy");

extern "C" {static PyObject *meth_QAbstractScrollArea_horizontalScrollBarPolicy(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_horizontalScrollBarPolicy(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QAbstractScrollArea, &sipCpp))
        {
             ::Qt::ScrollBarPolicy sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->horizontalScrollBarPolicy();
            Py_END_ALLOW_THREADS

            return sipConvertFromEnum(sipRes,sipType_Qt_ScrollBarPolicy);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_horizontalScrollBarPolicy, doc_QAbstractScrollArea_horizontalScrollBarPolicy);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractScrollArea_setHorizontalScrollBarPolicy, "setHorizontalScrollBarPolicy(self, Qt.ScrollBarPolicy)");

extern "C" {static PyObject *meth_QAbstractScrollArea_setHorizontalScrollBarPolicy(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_setHorizontalScrollBarPolicy(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::Qt::ScrollBarPolicy a0;
         ::QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BE", &sipSelf, sipType_QAbstractScrollArea, &sipCpp, sipType_Qt_ScrollBarPolicy, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setHorizontalScrollBarPolicy(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_setHorizontalScrollBarPolicy, doc_QAbstractScrollArea_setHorizontalScrollBarPolicy);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractScrollArea_horizontalScrollBar, "horizontalScrollBar(self) -> QScrollBar");

extern "C" {static PyObject *meth_QAbstractScrollArea_horizontalScrollBar(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_horizontalScrollBar(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QAbstractScrollArea, &sipCpp))
        {
             ::QScrollBar*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->horizontalScrollBar();
            Py_END_ALLOW_THREADS

            return sipConvertFromType(sipRes,sipType_QScrollBar,sipSelf);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_horizontalScrollBar, doc_QAbstractScrollArea_horizontalScrollBar);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractScrollArea_viewport, "viewport(self) -> QWidget");

extern "C" {static PyObject *meth_QAbstractScrollArea_viewport(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_viewport(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QAbstractScrollArea, &sipCpp))
        {
             ::QWidget*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->viewport();
            Py_END_ALLOW_THREADS

            return sipConvertFromType(sipRes,sipType_QWidget,sipSelf);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_viewport, doc_QAbstractScrollArea_viewport);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractScrollArea_maximumViewportSize, "maximumViewportSize(self) -> QSize");

extern "C" {static PyObject *meth_QAbstractScrollArea_maximumViewportSize(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_maximumViewportSize(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QAbstractScrollArea, &sipCpp))
        {
             ::QSize*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::QSize(sipCpp->maximumViewportSize());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QSize,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_maximumViewportSize, doc_QAbstractScrollArea_maximumViewportSize);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractScrollArea_minimumSizeHint, "minimumSizeHint(self) -> QSize");

extern "C" {static PyObject *meth_QAbstractScrollArea_minimumSizeHint(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_minimumSizeHint(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QAbstractScrollArea, &sipCpp))
        {
             ::QSize*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::QSize((sipSelfWasArg ? sipCpp-> ::QAbstractScrollArea::minimumSizeHint() : sipCpp->minimumSizeHint()));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QSize,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_minimumSizeHint, doc_QAbstractScrollArea_minimumSizeHint);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractScrollArea_sizeHint, "sizeHint(self) -> QSize");

extern "C" {static PyObject *meth_QAbstractScrollArea_sizeHint(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_sizeHint(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QAbstractScrollArea, &sipCpp))
        {
             ::QSize*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::QSize((sipSelfWasArg ? sipCpp-> ::QAbstractScrollArea::sizeHint() : sipCpp->sizeHint()));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QSize,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_sizeHint, doc_QAbstractScrollArea_sizeHint);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractScrollArea_setViewportMargins, "setViewportMargins(self, int, int, int, int)\n"
    "setViewportMargins(self, QMargins)");

extern "C" {static PyObject *meth_QAbstractScrollArea_setViewportMargins(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_setViewportMargins(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        int a0;
        int a1;
        int a2;
        int a3;
         ::QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "piiii", &sipSelf, sipType_QAbstractScrollArea, &sipCpp, &a0, &a1, &a2, &a3))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setViewportMargins(a0,a1,a2,a3);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
        const  ::QMargins* a0;
         ::QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ9", &sipSelf, sipType_QAbstractScrollArea, &sipCpp, sipType_QMargins, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setViewportMargins(*a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_setViewportMargins, doc_QAbstractScrollArea_setViewportMargins);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractScrollArea_event, "event(self, QEvent) -> bool");

extern "C" {static PyObject *meth_QAbstractScrollArea_event(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_event(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QEvent* a0;
         ::QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QAbstractScrollArea, &sipCpp, sipType_QEvent, &a0))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = (sipSelfWasArg ? sipCpp-> ::QAbstractScrollArea::event(a0) : sipCpp->event(a0));
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_event, doc_QAbstractScrollArea_event);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractScrollArea_viewportEvent, "viewportEvent(self, QEvent) -> bool");

extern "C" {static PyObject *meth_QAbstractScrollArea_viewportEvent(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_viewportEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QEvent* a0;
         ::QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QAbstractScrollArea, &sipCpp, sipType_QEvent, &a0))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = (sipSelfWasArg ? sipCpp-> ::QAbstractScrollArea::viewportEvent(a0) : sipCpp->viewportEvent(a0));
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_viewportEvent, doc_QAbstractScrollArea_viewportEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractScrollArea_resizeEvent, "resizeEvent(self, QResizeEvent)");

extern "C" {static PyObject *meth_QAbstractScrollArea_resizeEvent(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_resizeEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QResizeEvent* a0;
         ::QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QAbstractScrollArea, &sipCpp, sipType_QResizeEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp-> ::QAbstractScrollArea::resizeEvent(a0) : sipCpp->resizeEvent(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_resizeEvent, doc_QAbstractScrollArea_resizeEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractScrollArea_paintEvent, "paintEvent(self, QPaintEvent)");

extern "C" {static PyObject *meth_QAbstractScrollArea_paintEvent(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_paintEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QPaintEvent* a0;
         ::QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QAbstractScrollArea, &sipCpp, sipType_QPaintEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp-> ::QAbstractScrollArea::paintEvent(a0) : sipCpp->paintEvent(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_paintEvent, doc_QAbstractScrollArea_paintEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractScrollArea_mousePressEvent, "mousePressEvent(self, QMouseEvent)");

extern "C" {static PyObject *meth_QAbstractScrollArea_mousePressEvent(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_mousePressEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QMouseEvent* a0;
         ::QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QAbstractScrollArea, &sipCpp, sipType_QMouseEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp-> ::QAbstractScrollArea::mousePressEvent(a0) : sipCpp->mousePressEvent(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_mousePressEvent, doc_QAbstractScrollArea_mousePressEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractScrollArea_mouseReleaseEvent, "mouseReleaseEvent(self, QMouseEvent)");

extern "C" {static PyObject *meth_QAbstractScrollArea_mouseReleaseEvent(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_mouseReleaseEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QMouseEvent* a0;
         ::QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QAbstractScrollArea, &sipCpp, sipType_QMouseEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp-> ::QAbstractScrollArea::mouseReleaseEvent(a0) : sipCpp->mouseReleaseEvent(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_mouseReleaseEvent, doc_QAbstractScrollArea_mouseReleaseEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractScrollArea_mouseDoubleClickEvent, "mouseDoubleClickEvent(self, QMouseEvent)");

extern "C" {static PyObject *meth_QAbstractScrollArea_mouseDoubleClickEvent(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_mouseDoubleClickEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QMouseEvent* a0;
         ::QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QAbstractScrollArea, &sipCpp, sipType_QMouseEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp-> ::QAbstractScrollArea::mouseDoubleClickEvent(a0) : sipCpp->mouseDoubleClickEvent(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_mouseDoubleClickEvent, doc_QAbstractScrollArea_mouseDoubleClickEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractScrollArea_mouseMoveEvent, "mouseMoveEvent(self, QMouseEvent)");

extern "C" {static PyObject *meth_QAbstractScrollArea_mouseMoveEvent(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_mouseMoveEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QMouseEvent* a0;
         ::QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QAbstractScrollArea, &sipCpp, sipType_QMouseEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp-> ::QAbstractScrollArea::mouseMoveEvent(a0) : sipCpp->mouseMoveEvent(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_mouseMoveEvent, doc_QAbstractScrollArea_mouseMoveEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractScrollArea_wheelEvent, "wheelEvent(self, QWheelEvent)");

extern "C" {static PyObject *meth_QAbstractScrollArea_wheelEvent(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_wheelEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QWheelEvent* a0;
         ::QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QAbstractScrollArea, &sipCpp, sipType_QWheelEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp-> ::QAbstractScrollArea::wheelEvent(a0) : sipCpp->wheelEvent(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_wheelEvent, doc_QAbstractScrollArea_wheelEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractScrollArea_contextMenuEvent, "contextMenuEvent(self, QContextMenuEvent)");

extern "C" {static PyObject *meth_QAbstractScrollArea_contextMenuEvent(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_contextMenuEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QContextMenuEvent* a0;
         ::QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QAbstractScrollArea, &sipCpp, sipType_QContextMenuEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp-> ::QAbstractScrollArea::contextMenuEvent(a0) : sipCpp->contextMenuEvent(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_contextMenuEvent, doc_QAbstractScrollArea_contextMenuEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractScrollArea_dragEnterEvent, "dragEnterEvent(self, QDragEnterEvent)");

extern "C" {static PyObject *meth_QAbstractScrollArea_dragEnterEvent(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_dragEnterEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QDragEnterEvent* a0;
         ::QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QAbstractScrollArea, &sipCpp, sipType_QDragEnterEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp-> ::QAbstractScrollArea::dragEnterEvent(a0) : sipCpp->dragEnterEvent(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_dragEnterEvent, doc_QAbstractScrollArea_dragEnterEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractScrollArea_dragMoveEvent, "dragMoveEvent(self, QDragMoveEvent)");

extern "C" {static PyObject *meth_QAbstractScrollArea_dragMoveEvent(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_dragMoveEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QDragMoveEvent* a0;
         ::QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QAbstractScrollArea, &sipCpp, sipType_QDragMoveEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp-> ::QAbstractScrollArea::dragMoveEvent(a0) : sipCpp->dragMoveEvent(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_dragMoveEvent, doc_QAbstractScrollArea_dragMoveEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractScrollArea_dragLeaveEvent, "dragLeaveEvent(self, QDragLeaveEvent)");

extern "C" {static PyObject *meth_QAbstractScrollArea_dragLeaveEvent(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_dragLeaveEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QDragLeaveEvent* a0;
         ::QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QAbstractScrollArea, &sipCpp, sipType_QDragLeaveEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp-> ::QAbstractScrollArea::dragLeaveEvent(a0) : sipCpp->dragLeaveEvent(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_dragLeaveEvent, doc_QAbstractScrollArea_dragLeaveEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractScrollArea_dropEvent, "dropEvent(self, QDropEvent)");

extern "C" {static PyObject *meth_QAbstractScrollArea_dropEvent(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_dropEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QDropEvent* a0;
         ::QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QAbstractScrollArea, &sipCpp, sipType_QDropEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp-> ::QAbstractScrollArea::dropEvent(a0) : sipCpp->dropEvent(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_dropEvent, doc_QAbstractScrollArea_dropEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractScrollArea_keyPressEvent, "keyPressEvent(self, QKeyEvent)");

extern "C" {static PyObject *meth_QAbstractScrollArea_keyPressEvent(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_keyPressEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QKeyEvent* a0;
         ::QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QAbstractScrollArea, &sipCpp, sipType_QKeyEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp-> ::QAbstractScrollArea::keyPressEvent(a0) : sipCpp->keyPressEvent(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_keyPressEvent, doc_QAbstractScrollArea_keyPressEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractScrollArea_scrollContentsBy, "scrollContentsBy(self, int, int)");

extern "C" {static PyObject *meth_QAbstractScrollArea_scrollContentsBy(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_scrollContentsBy(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        int a0;
        int a1;
         ::QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pii", &sipSelf, sipType_QAbstractScrollArea, &sipCpp, &a0, &a1))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp-> ::QAbstractScrollArea::scrollContentsBy(a0,a1) : sipCpp->scrollContentsBy(a0,a1));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_scrollContentsBy, doc_QAbstractScrollArea_scrollContentsBy);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractScrollArea_setVerticalScrollBar, "setVerticalScrollBar(self, QScrollBar)");

extern "C" {static PyObject *meth_QAbstractScrollArea_setVerticalScrollBar(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_setVerticalScrollBar(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::QScrollBar* a0;
         ::QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ:", &sipSelf, sipType_QAbstractScrollArea, &sipCpp, sipType_QScrollBar, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setVerticalScrollBar(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_setVerticalScrollBar, doc_QAbstractScrollArea_setVerticalScrollBar);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractScrollArea_setHorizontalScrollBar, "setHorizontalScrollBar(self, QScrollBar)");

extern "C" {static PyObject *meth_QAbstractScrollArea_setHorizontalScrollBar(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_setHorizontalScrollBar(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::QScrollBar* a0;
         ::QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ:", &sipSelf, sipType_QAbstractScrollArea, &sipCpp, sipType_QScrollBar, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setHorizontalScrollBar(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_setHorizontalScrollBar, doc_QAbstractScrollArea_setHorizontalScrollBar);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractScrollArea_cornerWidget, "cornerWidget(self) -> QWidget");

extern "C" {static PyObject *meth_QAbstractScrollArea_cornerWidget(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_cornerWidget(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QAbstractScrollArea, &sipCpp))
        {
             ::QWidget*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->cornerWidget();
            Py_END_ALLOW_THREADS

            return sipConvertFromType(sipRes,sipType_QWidget,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_cornerWidget, doc_QAbstractScrollArea_cornerWidget);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractScrollArea_setCornerWidget, "setCornerWidget(self, QWidget)");

extern "C" {static PyObject *meth_QAbstractScrollArea_setCornerWidget(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_setCornerWidget(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::QWidget* a0;
         ::QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ:", &sipSelf, sipType_QAbstractScrollArea, &sipCpp, sipType_QWidget, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setCornerWidget(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_setCornerWidget, doc_QAbstractScrollArea_setCornerWidget);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractScrollArea_addScrollBarWidget, "addScrollBarWidget(self, QWidget, Union[Qt.Alignment, Qt.AlignmentFlag])");

extern "C" {static PyObject *meth_QAbstractScrollArea_addScrollBarWidget(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_addScrollBarWidget(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::QWidget* a0;
         ::Qt::Alignment* a1;
        int a1State = 0;
         ::QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ:J1", &sipSelf, sipType_QAbstractScrollArea, &sipCpp, sipType_QWidget, &a0, sipType_Qt_Alignment, &a1, &a1State))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->addScrollBarWidget(a0,*a1);
            Py_END_ALLOW_THREADS
            sipReleaseType(a1,sipType_Qt_Alignment,a1State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_addScrollBarWidget, doc_QAbstractScrollArea_addScrollBarWidget);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractScrollArea_scrollBarWidgets, "scrollBarWidgets(self, Union[Qt.Alignment, Qt.AlignmentFlag]) -> object");

extern "C" {static PyObject *meth_QAbstractScrollArea_scrollBarWidgets(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_scrollBarWidgets(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::Qt::Alignment* a0;
        int a0State = 0;
         ::QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QAbstractScrollArea, &sipCpp, sipType_Qt_Alignment, &a0, &a0State))
        {
             ::QWidgetList*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new  ::QWidgetList(sipCpp->scrollBarWidgets(*a0));
            Py_END_ALLOW_THREADS
            sipReleaseType(a0,sipType_Qt_Alignment,a0State);

            return sipConvertFromNewType(sipRes,sipType_QList_0101QWidget,sipSelf);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_scrollBarWidgets, doc_QAbstractScrollArea_scrollBarWidgets);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractScrollArea_setViewport, "setViewport(self, QWidget)");

extern "C" {static PyObject *meth_QAbstractScrollArea_setViewport(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_setViewport(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::QWidget* a0;
         ::QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ:", &sipSelf, sipType_QAbstractScrollArea, &sipCpp, sipType_QWidget, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setViewport(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_setViewport, doc_QAbstractScrollArea_setViewport);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractScrollArea_setupViewport, "setupViewport(self, QWidget)");

extern "C" {static PyObject *meth_QAbstractScrollArea_setupViewport(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_setupViewport(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::QWidget* a0;
         ::QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QAbstractScrollArea, &sipCpp, sipType_QWidget, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setupViewport(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_setupViewport, doc_QAbstractScrollArea_setupViewport);

    return NULL;
}


/* Cast a pointer to a type somewhere in its inheritance hierarchy. */
extern "C" {static void *cast_QAbstractScrollArea(void *, const sipTypeDef *);}
static void *cast_QAbstractScrollArea(void *sipCppV, const sipTypeDef *targetType)
{
     ::QAbstractScrollArea *sipCpp = reinterpret_cast< ::QAbstractScrollArea *>(sipCppV);

    if (targetType == sipType_QFrame)
        return static_cast< ::QFrame *>(sipCpp);

    if (targetType == sipType_QWidget)
        return static_cast< ::QWidget *>(sipCpp);

    if (targetType == sipType_QObject)
        return static_cast< ::QObject *>(sipCpp);

    if (targetType == sipType_QPaintDevice)
        return static_cast< ::QPaintDevice *>(sipCpp);

    return sipCppV;
}


/* Call the instance's destructor. */
extern "C" {static void release_QAbstractScrollArea(void *, int);}
static void release_QAbstractScrollArea(void *sipCppV, int)
{
     ::QAbstractScrollArea *sipCpp = reinterpret_cast< ::QAbstractScrollArea *>(sipCppV);

    Py_BEGIN_ALLOW_THREADS

    if (QThread::currentThread() == sipCpp->thread())
        delete sipCpp;
    else
        sipCpp->deleteLater();

    Py_END_ALLOW_THREADS
}


extern "C" {static void dealloc_QAbstractScrollArea(sipSimpleWrapper *);}
static void dealloc_QAbstractScrollArea(sipSimpleWrapper *sipSelf)
{
    if (sipIsDerivedClass(sipSelf))
        reinterpret_cast<sipQAbstractScrollArea *>(sipGetAddress(sipSelf))->sipPySelf = NULL;

    if (sipIsOwnedByPython(sipSelf))
    {
        release_QAbstractScrollArea(sipGetAddress(sipSelf), sipIsDerivedClass(sipSelf));
    }
}


extern "C" {static void *init_type_QAbstractScrollArea(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_QAbstractScrollArea(sipSimpleWrapper *sipSelf, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **sipOwner, PyObject **sipParseErr)
{
    sipQAbstractScrollArea *sipCpp = 0;

    {
         ::QWidget* a0 = 0;

        static const char *sipKwdList[] = {
            sipName_parent,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "|JH", sipType_QWidget, &a0, sipOwner))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp = new sipQAbstractScrollArea(a0);
            Py_END_ALLOW_THREADS

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    return NULL;
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_QAbstractScrollArea[] = {{143, 255, 1}};


static PyMethodDef methods_QAbstractScrollArea[] = {
    {SIP_MLNAME_CAST(sipName_addScrollBarWidget), meth_QAbstractScrollArea_addScrollBarWidget, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_addScrollBarWidget)},
    {SIP_MLNAME_CAST(sipName_contextMenuEvent), meth_QAbstractScrollArea_contextMenuEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_contextMenuEvent)},
    {SIP_MLNAME_CAST(sipName_cornerWidget), meth_QAbstractScrollArea_cornerWidget, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_cornerWidget)},
    {SIP_MLNAME_CAST(sipName_dragEnterEvent), meth_QAbstractScrollArea_dragEnterEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_dragEnterEvent)},
    {SIP_MLNAME_CAST(sipName_dragLeaveEvent), meth_QAbstractScrollArea_dragLeaveEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_dragLeaveEvent)},
    {SIP_MLNAME_CAST(sipName_dragMoveEvent), meth_QAbstractScrollArea_dragMoveEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_dragMoveEvent)},
    {SIP_MLNAME_CAST(sipName_dropEvent), meth_QAbstractScrollArea_dropEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_dropEvent)},
    {SIP_MLNAME_CAST(sipName_event), meth_QAbstractScrollArea_event, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_event)},
    {SIP_MLNAME_CAST(sipName_horizontalScrollBar), meth_QAbstractScrollArea_horizontalScrollBar, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_horizontalScrollBar)},
    {SIP_MLNAME_CAST(sipName_horizontalScrollBarPolicy), meth_QAbstractScrollArea_horizontalScrollBarPolicy, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_horizontalScrollBarPolicy)},
    {SIP_MLNAME_CAST(sipName_keyPressEvent), meth_QAbstractScrollArea_keyPressEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_keyPressEvent)},
    {SIP_MLNAME_CAST(sipName_maximumViewportSize), meth_QAbstractScrollArea_maximumViewportSize, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_maximumViewportSize)},
    {SIP_MLNAME_CAST(sipName_minimumSizeHint), meth_QAbstractScrollArea_minimumSizeHint, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_minimumSizeHint)},
    {SIP_MLNAME_CAST(sipName_mouseDoubleClickEvent), meth_QAbstractScrollArea_mouseDoubleClickEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_mouseDoubleClickEvent)},
    {SIP_MLNAME_CAST(sipName_mouseMoveEvent), meth_QAbstractScrollArea_mouseMoveEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_mouseMoveEvent)},
    {SIP_MLNAME_CAST(sipName_mousePressEvent), meth_QAbstractScrollArea_mousePressEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_mousePressEvent)},
    {SIP_MLNAME_CAST(sipName_mouseReleaseEvent), meth_QAbstractScrollArea_mouseReleaseEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_mouseReleaseEvent)},
    {SIP_MLNAME_CAST(sipName_paintEvent), meth_QAbstractScrollArea_paintEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_paintEvent)},
    {SIP_MLNAME_CAST(sipName_resizeEvent), meth_QAbstractScrollArea_resizeEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_resizeEvent)},
    {SIP_MLNAME_CAST(sipName_scrollBarWidgets), meth_QAbstractScrollArea_scrollBarWidgets, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_scrollBarWidgets)},
    {SIP_MLNAME_CAST(sipName_scrollContentsBy), meth_QAbstractScrollArea_scrollContentsBy, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_scrollContentsBy)},
    {SIP_MLNAME_CAST(sipName_setCornerWidget), meth_QAbstractScrollArea_setCornerWidget, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_setCornerWidget)},
    {SIP_MLNAME_CAST(sipName_setHorizontalScrollBar), meth_QAbstractScrollArea_setHorizontalScrollBar, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_setHorizontalScrollBar)},
    {SIP_MLNAME_CAST(sipName_setHorizontalScrollBarPolicy), meth_QAbstractScrollArea_setHorizontalScrollBarPolicy, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_setHorizontalScrollBarPolicy)},
    {SIP_MLNAME_CAST(sipName_setVerticalScrollBar), meth_QAbstractScrollArea_setVerticalScrollBar, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_setVerticalScrollBar)},
    {SIP_MLNAME_CAST(sipName_setVerticalScrollBarPolicy), meth_QAbstractScrollArea_setVerticalScrollBarPolicy, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_setVerticalScrollBarPolicy)},
    {SIP_MLNAME_CAST(sipName_setViewport), meth_QAbstractScrollArea_setViewport, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_setViewport)},
    {SIP_MLNAME_CAST(sipName_setViewportMargins), meth_QAbstractScrollArea_setViewportMargins, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_setViewportMargins)},
    {SIP_MLNAME_CAST(sipName_setupViewport), meth_QAbstractScrollArea_setupViewport, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_setupViewport)},
    {SIP_MLNAME_CAST(sipName_sizeHint), meth_QAbstractScrollArea_sizeHint, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_sizeHint)},
    {SIP_MLNAME_CAST(sipName_verticalScrollBar), meth_QAbstractScrollArea_verticalScrollBar, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_verticalScrollBar)},
    {SIP_MLNAME_CAST(sipName_verticalScrollBarPolicy), meth_QAbstractScrollArea_verticalScrollBarPolicy, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_verticalScrollBarPolicy)},
    {SIP_MLNAME_CAST(sipName_viewport), meth_QAbstractScrollArea_viewport, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_viewport)},
    {SIP_MLNAME_CAST(sipName_viewportEvent), meth_QAbstractScrollArea_viewportEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_viewportEvent)},
    {SIP_MLNAME_CAST(sipName_wheelEvent), meth_QAbstractScrollArea_wheelEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_wheelEvent)}
};

PyDoc_STRVAR(doc_QAbstractScrollArea, "\1QAbstractScrollArea(parent: QWidget = None)");


static pyqt4ClassPluginDef plugin_QAbstractScrollArea = {
    & ::QAbstractScrollArea::staticMetaObject,
    0,
    0
};


sipClassTypeDef sipTypeDef_QtGui_QAbstractScrollArea = {
    {
        -1,
        0,
        0,
        SIP_TYPE_SCC|SIP_TYPE_CLASS,
        sipNameNr_QAbstractScrollArea,
        {0},
        &plugin_QAbstractScrollArea
    },
    {
        sipNameNr_QAbstractScrollArea,
        {0, 0, 1},
        35, methods_QAbstractScrollArea,
        0, 0,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    doc_QAbstractScrollArea,
    -1,
    -1,
    supers_QAbstractScrollArea,
    0,
    init_type_QAbstractScrollArea,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_QAbstractScrollArea,
    0,
    0,
    0,
    release_QAbstractScrollArea,
    cast_QAbstractScrollArea,
    0,
    0,
    0,
    0,
    0,
    0
};
